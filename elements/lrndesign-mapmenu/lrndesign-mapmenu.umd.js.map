{"version":3,"file":"lrndesign-mapmenu.umd.js","sources":["lib/lrndesign-mapmenu-item.js","lib/lrndesign-mapmenu-header.js","lib/lrndesign-mapmenu-submenu.js","lrndesign-mapmenu.umd.js"],"sourcesContent":["import { LitElement, html, css } from \"lit-element/lit-element.js\";\nimport \"@polymer/iron-icons/iron-icons.js\";\nimport \"@polymer/iron-icon/iron-icon.js\";\nclass LrndesignMapmenuItem extends LitElement {\n  /**\n   * LitElement constructable styles enhancement\n   */\n  static get styles() {\n    return [\n      css`\n        :host {\n          display: block;\n          --lrndesign-mapmenu-item-height: 16px;\n        }\n        iron-icon {\n          --iron-icon-height: var(--lrndesign-mapmenu-item-height);\n          display: inline-flex;\n        }\n      `\n    ];\n  }\n  render() {\n    return html`\n      ${this.icon\n        ? html`\n            <iron-icon icon=\"${this.icon}\"></iron-icon>\n          `\n        : ``}\n      <span id=\"title\">${this.title}</span>\n    `;\n  }\n  static get tag() {\n    return \"lrndesign-mapmenu-item\";\n  }\n  constructor() {\n    super();\n    this.icon = \"\";\n    this.title = \"\";\n    this.url = \"\";\n  }\n  static get properties() {\n    return {\n      icon: {\n        type: String\n      },\n      title: {\n        type: String\n      },\n      url: {\n        type: String\n      }\n    };\n  }\n}\nwindow.customElements.define(LrndesignMapmenuItem.tag, LrndesignMapmenuItem);\nexport { LrndesignMapmenuItem };\n","import { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport \"@lrnwebcomponents/lrndesign-avatar/lrndesign-avatar.js\";\nimport \"@polymer/iron-collapse/iron-collapse.js\";\nimport \"@polymer/iron-icon/iron-icon.js\";\nimport { IronButtonState } from \"@polymer/iron-behaviors/iron-button-state.js\";\nimport { mixinBehaviors } from \"@polymer/polymer/lib/legacy/class.js\";\nclass LrndesignMapmenuHeader extends mixinBehaviors(\n  [IronButtonState],\n  PolymerElement\n) {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: block;\n        }\n        #container {\n          display: flex;\n          align-items: center;\n        }\n        #icon {\n          margin-right: 10px;\n        }\n        #center {\n          flex: 1 1 auto;\n        }\n        lrndesign-avatar {\n          display: inline-block;\n          background: #fff;\n          border-radius: 50%;\n          box-shadow: 0 1px 1px rgba(0, 0, 0, 0.3);\n          padding: 2px;\n          position: relative;\n          margin-top: -2px;\n        }\n        lrndesign-avatar ::slotted(*) {\n          transform: translateY(2px);\n        }\n        #title {\n          font-size: 19.2px;\n        }\n        #right iron-icon {\n          color: gray;\n          display: inline-flex;\n        }\n      </style>\n      <div id=\"container\">\n        <template is=\"dom-if\" if=\"[[avatarLabel]]\">\n          <div id=\"icon\">\n            <lrndesign-avatar label=\"[[avatarLabel]]\"></lrndesign-avatar>\n          </div>\n        </template>\n        <div id=\"center\">\n          <div id=\"label\">[[label]]</div>\n          <div id=\"title\">[[title]]</div>\n        </div>\n        <div id=\"right\">\n          <template is=\"dom-if\" if=\"[[!opened]]\">\n            <iron-icon icon=\"arrow-drop-down\"></iron-icon>\n          </template>\n          <template is=\"dom-if\" if=\"[[opened]]\">\n            <iron-icon icon=\"arrow-drop-up\"></iron-icon>\n          </template>\n        </div>\n      </div>\n    `;\n  }\n\n  static get tag() {\n    return \"lrndesign-mapmenu-header\";\n  }\n\n  static get properties() {\n    return {\n      title: {\n        type: String\n      },\n      label: {\n        type: String\n      },\n      avatarLabel: {\n        type: String,\n        value: \"\"\n      },\n      opened: {\n        type: Boolean\n      }\n    };\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    this.setAttribute(\"role\", \"button\");\n    this.setAttribute(\"tabindex\", \"0\");\n  }\n}\nwindow.customElements.define(\n  LrndesignMapmenuHeader.tag,\n  LrndesignMapmenuHeader\n);\nexport { LrndesignMapmenuHeader };\n","import { LitElement, html, css } from \"lit-element/lit-element.js\";\nimport { FlattenedNodesObserver } from \"@polymer/polymer/lib/utils/flattened-nodes-observer.js\";\nimport \"@polymer/iron-collapse/iron-collapse.js\";\nimport \"./lrndesign-mapmenu-item.js\";\nimport \"./lrndesign-mapmenu-header.js\";\nclass LrndesignMapmenuSubmenu extends LitElement {\n  /**\n   * LitElement constructable styles enhancement\n   */\n  static get styles() {\n    return [\n      css`\n        :host {\n          display: block;\n        }\n        :host([collapsable]) > lrndesign-mapmenu-header {\n          cursor: pointer;\n          display: block;\n        }\n        #container {\n          padding: 16px;\n        }\n        #container ::slotted(lrndesign-mapmenu-item) {\n          margin-top: 6.4px;\n        }\n      `\n    ];\n  }\n  render() {\n    return html`\n      <lrndesign-mapmenu-header\n        @click=\"${this._headerClickHandler}\"\n        avatar-label=\"${this.avatarLabel}\"\n        title=\"${this.title}\"\n        label=\"${this.label}\"\n        ?opened=\"${this.opened}\"\n      ></lrndesign-mapmenu-header>\n      <iron-collapse id=\"container\"> <slot></slot> </iron-collapse>\n    `;\n  }\n\n  static get tag() {\n    return \"lrndesign-mapmenu-submenu\";\n  }\n\n  static get properties() {\n    return {\n      title: {\n        type: String\n      },\n      avatarLabel: {\n        type: String,\n        attribute: \"avatar-label\"\n      },\n      label: {\n        type: String\n      },\n      opened: {\n        type: Boolean\n      },\n      collapsable: {\n        type: Boolean,\n        reflect: true\n      },\n      expandChildren: {\n        type: Boolean,\n        attribute: \"expand-children\"\n      }\n    };\n  }\n\n  _openChanged(opened) {\n    var target = this.shadowRoot.querySelector(\"#container\");\n    if (opened) target.show();\n    if (!opened) target.hide();\n  }\n\n  _headerClickHandler(e) {\n    if (this.collapsable) {\n      this.opened = !this.opened;\n    }\n  }\n\n  constructor() {\n    super();\n    this.opened = false;\n    this.collapsable = true;\n    this.expandChildren = false;\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    this._observer = new FlattenedNodesObserver(this, info => {\n      var submenus = info.addedNodes.filter(\n        item => item.nodeName === \"LRNDESIGN-MAPMENU-SUBMENU\"\n      );\n      if (this.expandChildren) {\n        for (let menu of submenus) {\n          menu.setAttribute(\"opened\", true);\n        }\n      }\n    });\n  }\n  disconnectedCallback() {\n    this._observer.disconnect();\n    super.disconnectedCallback();\n  }\n}\nwindow.customElements.define(\n  LrndesignMapmenuSubmenu.tag,\n  LrndesignMapmenuSubmenu\n);\nexport { LrndesignMapmenuSubmenu };\n","/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport \"./lib/lrndesign-mapmenu-item.js\";\nimport \"./lib/lrndesign-mapmenu-submenu.js\";\n/**\n`lrndesign-mapmenu`\nA LRN element\n\n* @demo demo/index.html\n*/\nclass LrndesignMapmenu extends PolymerElement {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: block;\n        }\n        #container {\n          padding: 16px 32px;\n        }\n        :host\n          > ::slotted(lrndesign-mapmenu-submenu + lrndesign-mapmenu-submenu) {\n          margin-top: 16px;\n        }\n      </style>\n      <slot></slot>\n    `;\n  }\n  static get tag() {\n    return \"lrndesign-mapmenu\";\n  }\n  static get properties() {\n    return {};\n  }\n}\nwindow.customElements.define(LrndesignMapmenu.tag, LrndesignMapmenu);\nexport { LrndesignMapmenu };\n"],"names":["LrndesignMapmenuItem","icon","title","url","LitElement","html","this","css","type","String","window","customElements","define","tag","LrndesignMapmenuHeader","mixinBehaviors","IronButtonState","PolymerElement","setAttribute","label","avatarLabel","value","opened","Boolean","LrndesignMapmenuSubmenu","collapsable","expandChildren","_headerClickHandler","target","shadowRoot","querySelector","show","hide","e","attribute","reflect","_observer","FlattenedNodesObserver","info","submenus","addedNodes","filter","item","nodeName","_this2","disconnect","LrndesignMapmenu"],"mappings":"+gGAGMA,8EAiCGC,KAAO,KACPC,MAAQ,KACRC,IAAM,gBAnCoBC,yDAmBxBC,WACHC,KAAKL,KACHI,WACqBC,KAAKL,SAGXK,KAAKJ,8CApBnB,CACLK,8CAuBK,8EASA,CACLN,KAAM,CACJO,KAAMC,QAERP,MAAO,CACLM,KAAMC,QAERN,IAAK,CACHK,KAAMC,6hDAKdC,OAAOC,eAAeC,OAAOZ,EAAqBa,IAAKb,OChDjDc,0FAA+BC,iBACnC,CAACC,mBACDC,6HAmFOC,aAAa,OAAQ,eACrBA,aAAa,WAAY,+CAjFvBb,8CA0DA,oEAIA,CACLH,MAAO,CACLM,KAAMC,QAERU,MAAO,CACLX,KAAMC,QAERW,YAAa,CACXZ,KAAMC,OACNY,MAAO,IAETC,OAAQ,CACNd,KAAMe,ouBAUdb,OAAOC,eAAeC,OACpBE,EAAuBD,IACvBC,OC5FIU,8EAgFGF,QAAS,IACTG,aAAc,IACdC,gBAAiB,eAlFYtB,yDAwB3BC,WAEOC,KAAKqB,oBACCrB,KAAKc,YACZd,KAAKJ,MACLI,KAAKa,MACHb,KAAKgB,6CAoCTA,OACPM,EAAStB,KAAKuB,WAAWC,cAAc,cACvCR,GAAQM,EAAOG,OACdT,GAAQM,EAAOI,mDAGFC,GACd3B,KAAKmB,mBACFH,QAAUhB,KAAKgB,+CArEf,CACLf,8CA+BK,qEAIA,CACLL,MAAO,CACLM,KAAMC,QAERW,YAAa,CACXZ,KAAMC,OACNyB,UAAW,gBAEbf,MAAO,CACLX,KAAMC,QAERa,OAAQ,CACNd,KAAMe,SAERE,YAAa,CACXjB,KAAMe,QACNY,SAAS,GAEXT,eAAgB,CACdlB,KAAMe,QACNW,UAAW,6IAyBVE,UAAY,IAAIC,yBAAuB/B,KAAM,SAAAgC,OAC5CC,EAAWD,EAAKE,WAAWC,OAC7B,SAAAC,SAA0B,8BAAlBA,EAAKC,cAEXC,EAAKlB,eAAgB,wCACNa,iDAAU,SACpBrB,aAAa,UAAU,8IAM7BkB,UAAUS,kcAInBnC,OAAOC,eAAeC,OACpBY,EAAwBX,IACxBW,OChGIsB,0FAAyB7B,kEAEpBZ,8CAiBA,6DAGA,YAGXK,OAAOC,eAAeC,OAAOkC,EAAiBjC,IAAKiC"}