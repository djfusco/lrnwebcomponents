{"version":3,"file":"undo-manager.umd.js","sources":["undo-manager.umd.js"],"sourcesContent":["/**\n * Copyright 2019 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { LitElement, html } from \"lit-element/lit-element.js\";\nimport \"@lrnwebcomponents/es-global-bridge/es-global-bridge.js\";\n/**\n * `undo-manager`\n * `an undo history manager element`\n *  This brings ideas from https://addyosmani.com/blog/mutation-observers/\n *  back to life and this time as LitElement + with the web drastically\n *  moved forward vs when this was originally published (2014).\n *\n * @litelement\n * @demo demo/index.html\n * @element undo-manager\n */\nclass UndoManager extends LitElement {\n  /**\n   * Convention\n   */\n  static get tag() {\n    return \"undo-manager\";\n  }\n  /**\n   * LitElement render\n   */\n  render() {\n    return html`\n      <slot></slot>\n    `;\n  }\n  /**\n   * LitElement / popular convention\n   */\n  static get properties() {\n    return {\n      ...super.properties,\n      /**\n       * If we can currently undo based on stack position\n       */\n      canUndo: {\n        type: Boolean,\n        attribute: \"can-undo\"\n      },\n      /**\n       * If we can currently redo based on stack position\n       */\n      canRedo: {\n        type: Boolean,\n        attribute: \"can-redo\"\n      },\n      /**\n       * If we're \"dirty\" meaning stackPosition and savePosition out of sync\n       */\n      isDirty: {\n        type: Boolean,\n        attribute: \"is-dirty\"\n      },\n      /**\n       * Allow for targetting OTHER elements w/ this behavior\n       */\n      target: {\n        type: Object\n      }\n    };\n  }\n  /**\n   * HTMLElement\n   */\n  constructor() {\n    super();\n    this.blocked = false;\n    this.observer = null;\n    const basePath = this.pathFromUrl(decodeURIComponent(import.meta.url));\n    const location = `${basePath}../../undo.js/undo.js`;\n    window.addEventListener(\n      \"es-bridge-undojs-loaded\",\n      this._undoLoaded.bind(this)\n    );\n    window.ESGlobalBridge.requestAvailability();\n    window.ESGlobalBridge.instance.load(\"undojs\", location);\n  }\n  /**\n   * Simple path resolution from URL\n   */\n  pathFromUrl(url) {\n    return url.substring(0, url.lastIndexOf(\"/\") + 1);\n  }\n  /**\n   * undo.js has loaded, now add the stack in\n   */\n  _undoLoaded(e) {\n    this.stack = new Undo.Stack();\n    // simple hook into being notified of changes to the object\n    this.stack.changed = e => {\n      this.canRedo = this.stack.canRedo();\n      this.canUndo = this.stack.canUndo();\n      this.isDirty = this.stack.dirty();\n    };\n    // execute once just to get these values\n    this.stack.changed();\n    // remove listener, we're loaded\n    window.removeEventListener(\"undo-js-loaded\", this._undoLoaded.bind(this));\n  }\n  /**\n   * HTMLElement\n   */\n  connectedCallback() {\n    // watch for changes to the element itself\n    this.observer = new MutationObserver(mutations => {\n      // ensure this was not a change record to perform undo/redo itself!\n      setTimeout(() => {\n        if (this.blocked) {\n          this.blocked = false;\n          return;\n        }\n        // compare light dom children to previous value\n        const newValue = this.innerHTML;\n        if (this.stack && newValue != this.startValue) {\n          // push an \"edit comand\"\n          this.stack.execute(\n            new UndoManagerCommand(this, this.startValue, newValue)\n          );\n          this.startValue = newValue;\n        }\n      }, 50);\n    });\n    // watch attributes, children and the subtree for changes\n    this.observer.observe(this, {\n      attributes: true,\n      childList: true,\n      subtree: true\n    });\n    super.connectedCallback();\n  }\n  /**\n   * HTMLElement\n   */\n  disconnectedCallback() {\n    this.observer.disconnect();\n    super.disconnectedCallback();\n  }\n  /**\n   * LitElement ready\n   */\n  firstUpdated(changedProperties) {\n    if (super.firstUpdated) {\n      super.firstUpdated(changedProperties);\n    }\n    // ready to go, take a snapshot of our light dom children as text\n    this.startValue = this.innerHTML;\n  }\n  /**\n   * updated / notice property changes\n   */\n  updated(changedProperties) {\n    if (super.updated) {\n      super.updated(changedProperties);\n    }\n    changedProperties.forEach((oldValue, propName) => {\n      if (propName == \"canUndo\") {\n        // notify\n        this.dispatchEvent(\n          new CustomEvent(\"can-undo-changed\", {\n            detail: {\n              value: this[propName]\n            }\n          })\n        );\n      }\n      if (propName == \"canRedo\") {\n        // notify\n        this.dispatchEvent(\n          new CustomEvent(\"can-redo-changed\", {\n            detail: {\n              value: this[propName]\n            }\n          })\n        );\n      }\n      if (propName == \"isDirty\") {\n        // notify\n        this.dispatchEvent(\n          new CustomEvent(\"is-dirty-changed\", {\n            detail: {\n              value: this[propName]\n            }\n          })\n        );\n      }\n    });\n  }\n  // execute an undo\n  undo() {\n    return this.stack.undo();\n  }\n  // execute a redo\n  redo() {\n    return this.stack.redo();\n  }\n  // return a list of the command stack\n  commands() {\n    return this.stack.commands;\n  }\n  // return current stackPosition index\n  stackPosition() {\n    return this.stack.stackPosition;\n  }\n  // return save index as a reference point\n  savePosition() {\n    return this.stack.savePosition;\n  }\n  /**\n   * Set a save position to check against at a later point in time\n   */\n  save() {\n    this.stack.save();\n  }\n}\ncustomElements.define(\"undo-manager\", UndoManager);\n\n/**\n * UndoManagerCommand, simple command scaffold to bridge undo.js with element\n */\nclass UndoManagerCommand {\n  constructor(el, oldValue, newValue) {\n    // refernece to us\n    this.el = el;\n    this.oldValue = oldValue;\n    this.newValue = newValue;\n  }\n  // required for undo.js though we don't use\n  execute() {}\n  // perform a \"undo\"\n  undo() {\n    this.el.blocked = true;\n    this.el.innerHTML = this.oldValue;\n  }\n  // perform a \"redo\"\n  redo() {\n    this.el.blocked = true;\n    this.el.innerHTML = this.newValue;\n  }\n}\nexport { UndoManager, UndoManagerCommand };\n"],"names":["UndoManager","blocked","observer","basePath","_this","pathFromUrl","decodeURIComponent","location","window","addEventListener","_undoLoaded","bind","ESGlobalBridge","requestAvailability","instance","load","LitElement","html","canUndo","type","Boolean","attribute","canRedo","isDirty","target","Object","url","substring","lastIndexOf","e","stack","Undo","Stack","changed","_this2","dirty","removeEventListener","this","MutationObserver","mutations","setTimeout","_this3","newValue","innerHTML","startValue","execute","UndoManagerCommand","observe","attributes","childList","subtree","disconnect","changedProperties","forEach","oldValue","propName","_this4","dispatchEvent","CustomEvent","detail","value","undo","redo","commands","stackPosition","savePosition","save","customElements","define","el"],"mappings":"k2DAiBMA,gIAuDGC,SAAU,IACVC,SAAW,SACVC,EAAWC,EAAKC,YAAYC,oMAC5BC,YAAcJ,kCACpBK,OAAOC,iBACL,0BACAL,EAAKM,YAAYC,YAEnBH,OAAOI,eAAeC,sBACtBL,OAAOI,eAAeE,SAASC,KAAK,SAAUR,iPAhExBS,yDAWfC,gDANA,mbAmBLC,QAAS,CACPC,KAAMC,QACNC,UAAW,YAKbC,QAAS,CACPH,KAAMC,QACNC,UAAW,YAKbE,QAAS,CACPJ,KAAMC,QACNC,UAAW,YAKbG,OAAQ,CACNL,KAAMM,qDAuBAC,UACHA,EAAIC,UAAU,EAAGD,EAAIE,YAAY,KAAO,uCAKrCC,mBACLC,MAAQ,IAAIC,KAAKC,WAEjBF,MAAMG,QAAU,SAAAJ,GACnBK,EAAKZ,QAAUY,EAAKJ,MAAMR,UAC1BY,EAAKhB,QAAUgB,EAAKJ,MAAMZ,UAC1BgB,EAAKX,QAAUW,EAAKJ,MAAMK,cAGvBL,MAAMG,UAEXzB,OAAO4B,oBAAoB,iBAAkBC,KAAK3B,YAAYC,KAAK0B,mEAO9DnC,SAAW,IAAIoC,iBAAiB,SAAAC,GAEnCC,WAAW,cACLC,EAAKxC,QACPwC,EAAKxC,SAAU,WAIXyC,EAAWD,EAAKE,UAClBF,EAAKX,OAASY,GAAYD,EAAKG,aAEjCH,EAAKX,MAAMe,QACT,IAAIC,EAAmBL,EAAMA,EAAKG,WAAYF,IAEhDD,EAAKG,WAAaF,KAEnB,WAGAxC,SAAS6C,QAAQV,KAAM,CAC1BW,YAAY,EACZC,WAAW,EACXC,SAAS,8GAQNhD,SAASiD,2GAMHC,0FAEUA,QAGhBR,WAAaP,KAAKM,0CAKjBS,2FAEUA,GAEhBA,EAAkBC,QAAQ,SAACC,EAAUC,GACnB,WAAZA,GAEFC,EAAKC,cACH,IAAIC,YAAY,mBAAoB,CAClCC,OAAQ,CACNC,MAAOJ,EAAKD,OAKJ,WAAZA,GAEFC,EAAKC,cACH,IAAIC,YAAY,mBAAoB,CAClCC,OAAQ,CACNC,MAAOJ,EAAKD,OAKJ,WAAZA,GAEFC,EAAKC,cACH,IAAIC,YAAY,mBAAoB,CAClCC,OAAQ,CACNC,MAAOJ,EAAKD,+CASflB,KAAKP,MAAM+B,6CAIXxB,KAAKP,MAAMgC,iDAIXzB,KAAKP,MAAMiC,wDAIX1B,KAAKP,MAAMkC,4DAIX3B,KAAKP,MAAMmC,iDAMbnC,MAAMoC,gBAGfC,eAAeC,OAAO,eAAgBpE,OAKhC8C,wBACQuB,EAAIf,EAAUZ,kBAEnB2B,GAAKA,OACLf,SAAWA,OACXZ,SAAWA,mFAMX2B,GAAGpE,SAAU,OACboE,GAAG1B,UAAYN,KAAKiB,6CAIpBe,GAAGpE,SAAU,OACboE,GAAG1B,UAAYN,KAAKK"}