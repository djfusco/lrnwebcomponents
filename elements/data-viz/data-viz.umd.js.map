{"version":3,"file":"data-viz.umd.js","sources":["data-viz.umd.js"],"sourcesContent":["/**\n * Copyright 2019\n * @license Apache-2.0, see License.md for full text.\n */\nimport { LitElement, html, css } from \"lit-element/lit-element.js\";\n\n// register globally so we can make sure there is only one\nwindow.DataViz = window.DataViz || {};\n// request if this exists. This helps invoke the element existing in the dom\n// as well as that there is only one of them. That way we can ensure everything\n// is rendered through the same data-viz element, making it a singleton.\nwindow.DataViz.requestAvailability = () => {\n  // if there is no single instance, generate one and append it to end of the document\n  if (!window.DataViz.instance) {\n    window.DataViz.instance = document.createElement(\"data-viz\");\n    document.body.appendChild(window.DataViz.instance);\n  }\n  return window.DataViz.instance;\n};\n\n/**\n * `data-viz`\n * `display pouch-db data using graphs`\n * @demo demo/index.html\n * @element data-viz\n */\nclass DataViz extends LitElement {\n  \n  //styles function\n  static get styles() {\n    return  [\n      \n      css`\n:host {\n  display: block;\n}\n\n:host([hidden]) {\n  display: none;\n}\n      `\n    ];\n  }\n  // render function\n  render() {\n    return html`\n\n<chartist-render\nid=\"barChart\"\ntype=\"bar\"\nscale=\"ct-major-twelfth\"\nchart-title=\"Quiz Distribution\"\nchart-desc=\"A bar graph of quizzes completed by student\"\n>\n</chartist-render>`;\n  }\n\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {...super.properties}\n;\n  }\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"data-viz\";\n  }\n  constructor() {\n    super();\n    import(\"@lrnwebcomponents/chartist-render/chartist-render.js\");\n  }\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    window.addEventListener(\"show-data\", this.showDataFunction.bind(this));\n  }\n\n  /**\n   * Show the data based on user selecting the view and\n   * that they want to see how they did.\n   */\n  showDataFunction(e) {\n    var queryData = e.detail;\n    var whatEvent = event.target.tagName;\n\n    var bardata = {\n      labels: queryData.labels,\n      series: queryData.series\n    };\n\n    this.shadowRoot.querySelector(\"#barChart\").data = bardata;\n  }\n\n  /**\n   * life cycle, element is removed from the DOM\n   */\n  disconnectedCallback() {\n    window.removeEventListener(\"show-data\", this.showDataFunction.bind(this));\n    super.disconnectedCallback();\n  }\n  /**\n   * Hide callback\n   */\n  hideDataViz(e) {\n    // add your code to run when the singleton hides\n  }\n  /**\n   * Show / available callback\n   */\n  showDataViz(e) {\n    // add your code to run when the singleton is called for\n  }\n}\nwindow.customElements.define(DataViz.tag, DataViz);\nexport { DataViz };\n"],"names":["window","DataViz","requestAvailability","instance","document","createElement","body","appendChild","LitElement","html","css","addEventListener","this","showDataFunction","bind","e","queryData","detail","bardata","event","target","tagName","labels","series","shadowRoot","querySelector","data","removeEventListener","customElements","define","tag"],"mappings":"sgEAOAA,OAAOC,QAAUD,OAAOC,SAAW,GAInCD,OAAOC,QAAQC,oBAAsB,kBAE9BF,OAAOC,QAAQE,WAClBH,OAAOC,QAAQE,SAAWC,SAASC,cAAc,YACjDD,SAASE,KAAKC,YAAYP,OAAOC,QAAQE,WAEpCH,OAAOC,QAAQE,cASlBF,8KA8CK,sSA9CWO,yDAmBXC,mDAfC,CAENC,kdAoCK,oHAWPV,OAAOW,iBAAiB,YAAaC,KAAKC,iBAAiBC,KAAKF,gDAOjDG,OACXC,EAAYD,EAAEE,OAGdC,GAFYC,MAAMC,OAAOC,QAEf,CACZC,OAAQN,EAAUM,OAClBC,OAAQP,EAAUO,cAGfC,WAAWC,cAAc,aAAaC,KAAOR,iDAOlDlB,OAAO2B,oBAAoB,YAAaf,KAAKC,iBAAiBC,KAAKF,oGAMzDG,wCAMAA,aAIdf,OAAO4B,eAAeC,OAAO5B,EAAQ6B,IAAK7B"}