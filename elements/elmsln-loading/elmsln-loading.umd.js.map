{"version":3,"file":"elmsln-loading.umd.js","sources":["elmsln-loading.umd.js"],"sourcesContent":["/**\n * Copyright 2019 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, css } from \"lit-element/lit-element.js\";\nimport { SimpleColors } from \"@lrnwebcomponents/simple-colors/simple-colors.js\";\n/**\n * `elmsln-loading`\n * A spinner to tell the user that something is loading.\n * This is just the spinner though and doesn't provide any text or anything else.\n *\n * @microcopy - language worth noting:\n *  - elmsln - an open source NGDLE to save education\n *\n * @demo demo/index.html\n * @element elmsln-loading\n */\nclass ElmslnLoading extends SimpleColors {\n  /**\n   * LitElement constructable styles enhancement\n   */\n  static get styles() {\n    return [\n      ...super.styles,\n      css`\n        @-moz-keyframes spin {\n          100% {\n            -moz-transform: rotate(60deg);\n            filter: saturate(10) invert(0.9);\n          }\n        }\n        @-webkit-keyframes spin {\n          100% {\n            -webkit-transform: rotate(60deg);\n            filter: saturate(10) invert(0.9);\n          }\n        }\n        @keyframes spin {\n          100% {\n            -webkit-transform: rotate(60deg);\n            transform: rotate(60deg);\n          }\n        }\n        :host iron-icon {\n          color: var(--simple-colors-default-theme-accent-6);\n          display: block;\n          -webkit-animation: spin 1.25s ease-out infinite;\n          -moz-animation: spin 1.25s ease-out infinite;\n          animation: spin 1.25s ease-out infinite;\n        }\n        :host([size=\"tiny\"]) iron-icon {\n          width: 16px;\n          height: 16px;\n          -webkit-animation: spin 0.75s ease-out infinite;\n          -moz-animation: spin 0.75s ease-out infinite;\n          animation: spin 0.75s ease-out infinite;\n        }\n        :host([size=\"small\"]) iron-icon {\n          width: 32px;\n          height: 32px;\n          -webkit-animation: spin 1s ease-out infinite;\n          -moz-animation: spin 1s ease-out infinite;\n          animation: spin 1s ease-out infinite;\n        }\n        :host([size=\"medium\"]) iron-icon {\n          width: 64px;\n          height: 64px;\n          -webkit-animation: spin 1.25s ease-out infinite;\n          -moz-animation: spin 1.25s ease-out infinite;\n          animation: spin 1.25s ease-out infinite;\n        }\n        :host([size=\"large\"]) iron-icon {\n          width: 80px;\n          height: 80px;\n          -webkit-animation: spin 1.25s ease-out infinite;\n          -moz-animation: spin 1.25s ease-out infinite;\n          animation: spin 1.25s ease-out infinite;\n        }\n        :host([size=\"epic\"]) iron-icon {\n          width: 400px;\n          height: 400px;\n          -webkit-animation: spin 2s ease-out infinite;\n          -moz-animation: spin 2s ease-out infinite;\n          animation: spin 2s ease-out infinite;\n        }\n      `\n    ];\n  }\n  static get tag() {\n    return \"elmsln-loading\";\n  }\n  /**\n   * HTMLElement\n   */\n  constructor() {\n    super();\n    this.size = \"medium\";\n    import(\"@lrnwebcomponents/lrn-icons/lrn-icons.js\");\n    import(\"@polymer/iron-icon/iron-icon.js\");\n  }\n  /**\n   * LitElement properties changed\n   */\n  updated(changedProperties) {\n    changedProperties.forEach((oldValue, propName) => {\n      if (propName == \"color\") {\n        this._getAccentColor(this[propName]);\n      }\n    });\n  }\n  /**\n   * LitElement / popular convention\n   */\n  static get properties() {\n    return {\n      ...super.properties,\n      /**\n       * color\n       */\n      color: {\n        type: String\n      },\n      /**\n       * tiny, small, medium, large, epic sizing.\n       */\n      size: {\n        type: String,\n        reflect: true\n      }\n    };\n  }\n  /**\n   * LitElement render\n   */\n  render() {\n    return html`\n      <iron-icon icon=\"lrn:network\"></iron-icon>\n    `;\n  }\n\n  _getAccentColor(color) {\n    color = color.replace(\"-text\", \"\");\n    if (\n      (!this.accentColor || this.accentColor === \"grey\") &&\n      this.colors[color]\n    ) {\n      this.accentColor = color;\n    }\n  }\n}\nwindow.customElements.define(ElmslnLoading.tag, ElmslnLoading);\nexport { ElmslnLoading };\n"],"names":["ElmslnLoading","size","SimpleColors","css","changedProperties","forEach","oldValue","propName","_this2","_getAccentColor","html","color","replace","this","accentColor","colors","type","String","reflect","window","customElements","define","tag"],"mappings":"+2IAiBMA,yKA+EGC,KAAO,gBACL,mDACA,iRAjFiBC,iGAOtBC,+CAiEK,wDAcDC,cACNA,EAAkBC,QAAQ,SAACC,EAAUC,GACnB,SAAZA,GACFC,EAAKC,gBAAgBD,EAAKD,8CA6BvBG,oDAKOC,GACdA,EAAQA,EAAMC,QAAQ,QAAS,IAE3BC,KAAKC,aAAoC,SAArBD,KAAKC,cAC3BD,KAAKE,OAAOJ,UAEPG,YAAcH,yaA3BnBA,MAAO,CACLK,KAAMC,QAKRhB,KAAM,CACJe,KAAMC,OACNC,SAAS,cAuBjBC,OAAOC,eAAeC,OAAOrB,EAAcsB,IAAKtB"}