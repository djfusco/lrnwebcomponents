{"version":3,"file":"moment-element.umd.js","sources":["moment-element.umd.js"],"sourcesContent":["import { LitElement, html } from \"lit-element/lit-element.js\";\nimport \"@lrnwebcomponents/es-global-bridge/es-global-bridge.js\";\n/**\n * @license\n * Copyright (c) 2016 Abdón Rodríguez Davila (@abdonrd). All rights reserved.\n * This code may only be used under the MIT style license found at https://abdonrd.github.io/LICENSE.txt\n */\n/**\nPolymer element wrapper for the [moment](https://github.com/moment/moment) library.\n\nExamples:\n\n    <moment-element></moment-element>\n    <moment-element datetime=\"1991-12-31\" output-format=\"MMM DD[,] YYYY\"></moment-element>\n\n* @demo demo/index.html\n*/\nclass MomentElement extends LitElement {\n  render() {\n    return html`\n      ${this.output}\n    `;\n  }\n  static get tag() {\n    return \"moment-element\";\n  }\n  static get properties() {\n    return {\n      datetime: {\n        type: String\n      },\n      inputFormat: {\n        type: String,\n        attribute: \"input-format\"\n      },\n      outputFormat: {\n        type: String,\n        attribute: \"output-format\"\n      },\n      from: {\n        type: String\n      },\n      to: {\n        type: String\n      },\n      output: {\n        type: String\n      },\n      libraryLoaded: {\n        type: Boolean\n      }\n    };\n  }\n  // simple path from a url modifier\n  pathFromUrl(url) {\n    return url.substring(0, url.lastIndexOf(\"/\") + 1);\n  }\n  constructor() {\n    super();\n    this.datetime = new Date();\n    this.inputFormat = \"\";\n    this.outputFormat = \"\";\n    this.from = \"\";\n    this.to = \"\";\n    const basePath = this.pathFromUrl(decodeURIComponent(import.meta.url));\n    const location = `${basePath}lib/moment/moment.js`;\n    window.addEventListener(\n      \"es-bridge-moment-loaded\",\n      this._momentLoaded.bind(this)\n    );\n    window.ESGlobalBridge.requestAvailability();\n    window.ESGlobalBridge.instance.load(\"moment\", location);\n  }\n  updated(changedProperties) {\n    changedProperties.forEach((oldValue, propName) => {\n      let notifiedProps = [\"output\"];\n      if (notifiedProps.includes(propName)) {\n        // notify\n        let eventName = `${propName\n          .replace(/([a-z0-9]|(?=[A-Z]))([A-Z])/g, \"$1-$2\")\n          .toLowerCase()}-changed`;\n        this.dispatchEvent(\n          new CustomEvent(eventName, {\n            detail: {\n              value: this[propName]\n            }\n          })\n        );\n      }\n      if (\n        [\n          \"datetime\",\n          \"inputFormat\",\n          \"outputFormat\",\n          \"from\",\n          \"to\",\n          \"libraryLoaded\"\n        ].includes(propName)\n      ) {\n        this.output = this._computeOutput(\n          this.datetime,\n          this.inputFormat,\n          this.outputFormat,\n          this.from,\n          this.to,\n          this.libraryLoaded\n        );\n      }\n    });\n  }\n  disconnectedCallback() {\n    window.removeEventListener(\n      \"es-bridge-moment-loaded\",\n      this._momentLoaded.bind(this)\n    );\n    super.disconnectedCallback();\n  }\n  _momentLoaded() {\n    this.libraryLoaded = true;\n  }\n\n  _computeOutput(datetime, inputFormat, outputFormat, from, to, libraryLoaded) {\n    if (libraryLoaded) {\n      var output = inputFormat\n        ? moment(datetime, inputFormat)\n        : moment(datetime);\n      if (outputFormat) {\n        output = output.format(outputFormat);\n      } else if (from) {\n        output = from === \"now\" ? output.fromNow() : output.from(moment(from));\n      } else if (to) {\n        output = to === \"now\" ? output.toNow() : output.to(moment(to));\n      }\n      return output;\n    }\n  }\n}\nwindow.customElements.define(MomentElement.tag, MomentElement);\nexport { MomentElement };\n"],"names":["MomentElement","datetime","Date","inputFormat","outputFormat","from","to","basePath","_this","pathFromUrl","decodeURIComponent","location","window","addEventListener","_momentLoaded","bind","ESGlobalBridge","requestAvailability","instance","load","LitElement","html","this","output","url","substring","lastIndexOf","type","String","attribute","libraryLoaded","Boolean","changedProperties","forEach","oldValue","propName","includes","eventName","replace","toLowerCase","_this2","dispatchEvent","CustomEvent","detail","value","_computeOutput","removeEventListener","moment","format","fromNow","toNow","customElements","define","tag"],"mappings":"w6CAiBMA,4NA0CGC,SAAW,IAAIC,OACfC,YAAc,KACdC,aAAe,KACfC,KAAO,KACPC,GAAK,OACJC,EAAWC,EAAKC,YAAYC,oMAC5BC,YAAcJ,iCACpBK,OAAOC,iBACL,0BACAL,EAAKM,cAAcC,YAErBH,OAAOI,eAAeC,sBACtBL,OAAOI,eAAeE,SAASC,KAAK,SAAUR,iPAtDtBS,yDAEjBC,WACHC,KAAKC,4CAkCCC,UACHA,EAAIC,UAAU,EAAGD,EAAIE,YAAY,KAAO,uCA/BxC,0DAGA,CACLzB,SAAU,CACR0B,KAAMC,QAERzB,YAAa,CACXwB,KAAMC,OACNC,UAAW,gBAEbzB,aAAc,CACZuB,KAAMC,OACNC,UAAW,iBAEbxB,KAAM,CACJsB,KAAMC,QAERtB,GAAI,CACFqB,KAAMC,QAERL,OAAQ,CACNI,KAAMC,QAERE,cAAe,CACbH,KAAMI,iDAwBJC,cACNA,EAAkBC,QAAQ,SAACC,EAAUC,MACf,CAAC,UACHC,SAASD,GAAW,KAEhCE,YAAeF,EAChBG,QAAQ,+BAAgC,SACxCC,0BACHC,EAAKC,cACH,IAAIC,YAAYL,EAAW,CACzBM,OAAQ,CACNC,MAAOJ,EAAKL,OAMlB,CACE,WACA,cACA,eACA,OACA,KACA,iBACAC,SAASD,KAEXK,EAAKjB,OAASiB,EAAKK,eACjBL,EAAKvC,SACLuC,EAAKrC,YACLqC,EAAKpC,aACLoC,EAAKnC,KACLmC,EAAKlC,GACLkC,EAAKV,iEAMXlB,OAAOkC,oBACL,0BACAxB,KAAKR,cAAcC,KAAKO,6GAKrBQ,eAAgB,yCAGR7B,EAAUE,EAAaC,EAAcC,EAAMC,EAAIwB,MACxDA,EAAe,KACbP,EAASpB,EACT4C,OAAO9C,EAAUE,GACjB4C,OAAO9C,UACPG,EACFmB,EAASA,EAAOyB,OAAO5C,GACdC,EACTkB,EAAkB,QAATlB,EAAiBkB,EAAO0B,UAAY1B,EAAOlB,KAAK0C,OAAO1C,IACvDC,IACTiB,EAAgB,QAAPjB,EAAeiB,EAAO2B,QAAU3B,EAAOjB,GAAGyC,OAAOzC,KAErDiB,YAIbX,OAAOuC,eAAeC,OAAOpD,EAAcqD,IAAKrD"}