{"version":3,"file":"citation-element.umd.js","sources":["citation-element.umd.js"],"sourcesContent":["import { LitElement, html, css } from \"lit-element/lit-element.js\";\nimport { SchemaBehaviors } from \"@lrnwebcomponents/schema-behaviors/schema-behaviors.js\";\nimport { licenseList } from \"@lrnwebcomponents/license-element/license-element.js\";\nimport { generateResourceID } from \"@lrnwebcomponents/utils/utils.js\";\n/**\n * `citation-element`\n * An element dedicated to presenting and managing a correct citation on the web\n * both visually as well as semantically with simple inputs.\n * @demo demo/index.html\n * @element citation-element\n */\nclass CitationElement extends SchemaBehaviors(LitElement) {\n  /**\n   * LitElement constructable styles enhancement\n   */\n  static get styles() {\n    return [\n      css`\n        :host {\n          display: block;\n          color: var(--license-text-color);\n        }\n        :host([display-method=\"footnote\"]) {\n          visibility: hidden;\n          opacity: 0;\n        }\n        :host([display-method=\"popup\"]) {\n          display: block;\n        }\n        .license-link {\n          font-size: 16px;\n          line-height: 16px;\n          font-style: italic;\n        }\n        .citation-date {\n          font-size: 16px;\n          line-height: 16px;\n          font-style: italic;\n        }\n        .license-link img {\n          margin-right: 8px;\n        }\n      `\n    ];\n  }\n  /**\n   * LitElement render\n   */\n  render() {\n    return html`\n      <meta\n        about=\"${this.relatedResource}\"\n        property=\"cc:attributionUrl\"\n        content=\"${this.source}\"\n      />\n      <meta\n        about=\"${this.relatedResource}\"\n        property=\"cc:attributionName\"\n        typeof=\"oer:Text\"\n        content=\"${this.title}\"\n      />\n      <meta\n        rel=\"cc:license\"\n        href=\"${this.licenseLink}\"\n        content=\"License: ${this.licenseName}\"\n      />\n      <cite\n        ><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"${this.source}\"\n          >${this.title}</a\n        >\n        by ${this.creator}, licensed under\n        <a\n          class=\"license-link\"\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n          href=\"${this.licenseLink}\"\n          ><img\n            loading=\"lazy\"\n            alt=\"${this.licenseName} graphic\"\n            src=\"${this.licenseImage}\"\n            ?hidden=\"${!this.licenseImage}\"\n            width=\"44px\"\n            height=\"16px\"\n          />${this.licenseName}</a\n        >. Accessed <span class=\"citation-date\">${this.date}</span>.</cite\n      >\n    `;\n  }\n  /**\n   * convention\n   */\n  static get tag() {\n    return \"citation-element\";\n  }\n  /**\n   * HTMLElement\n   */\n  constructor() {\n    super();\n    this.scope = \"sibling\";\n    this.source = \"\";\n  }\n  /**\n   * LitElement properties changed\n   */\n  updated(changedProperties) {\n    changedProperties.forEach((oldValue, propName) => {\n      if (propName == \"scope\") {\n        this._scopeChanged(this[propName]);\n      }\n      if (propName == \"license\") {\n        this._licenseUpdated(this[propName]);\n      }\n      if ([\"relatedResource\", \"licenseLink\"].includes(propName)) {\n        this._aboutLink = this._generateAboutLink(\n          this.relatedResource,\n          this.licenseLink\n        );\n      }\n      if (propName == \"source\") {\n        this._licenseLink = this._generateLicenseLink(this.source);\n      }\n    });\n  }\n  /**\n   * LitElement / popular convention\n   */\n  static get properties() {\n    return {\n      ...super.properties,\n      /**\n       * Title of the work.\n       */\n      title: {\n        type: String\n      },\n      /**\n       * License scope\n       */\n      scope: {\n        type: String\n      },\n      /**\n       * How to present the citation on the interface.\n       * Can be popup, footnote, or default behavior which is visible\n       */\n      displayMethod: {\n        type: String,\n        reflect: true,\n        attribute: \"display-method\"\n      },\n      /**\n       * Person or group that owns / created the work.\n       */\n      creator: {\n        type: String\n      },\n      /**\n       * Original Source of the work in question\n       */\n      source: {\n        type: String\n      },\n      /**\n       * Date the work was accessed.\n       */\n      date: {\n        type: String\n      },\n      /**\n       * License name, calculated or supplied by the end user if we don't have them.\n       */\n      licenseName: {\n        type: String,\n        attribute: \"license-name\"\n      },\n      /**\n       * License link for more details\n       */\n      licenseLink: {\n        type: String,\n        attribute: \"license-link\"\n      },\n      /**\n       * License short hand. Options cc0,\n       */\n      license: {\n        type: String\n      }\n    };\n  }\n  /**\n   * Generate a license link whenever we have a source\n   * @param {href} source\n   */\n  _generateLicenseLink(source) {\n    // remove existing if this is moving around\n    if (this._licenseLink) {\n      document.head.removeChild(this._licenseLink);\n    }\n    let link = document.createElement(\"link\");\n    link.setAttribute(\"typeof\", \"resource\");\n    link.setAttribute(\"rel\", \"license\");\n    link.setAttribute(\"src\", source);\n\n    document.head.appendChild(link);\n    return link;\n  }\n  /**\n   * Generate an about link whenever we have a related resource and license link\n   * @param {uuid / id} relatedResource\n   * @param {href} licenseLink\n   */\n  _generateAboutLink(relatedResource, licenseLink) {\n    // remove existing if this is moving around\n    if (this._aboutLink) {\n      document.head.removeChild(this._aboutLink);\n    }\n    let link = document.createElement(\"link\");\n    link.setAttribute(\"about\", relatedResource);\n    link.setAttribute(\"property\", \"cc:license\");\n    link.setAttribute(\"content\", licenseLink);\n    document.head.appendChild(link);\n    return link;\n  }\n  /**\n   * Notice scope change.\n   */\n  _scopeChanged(newValue) {\n    // make sure we actually have a sibling first\n    if (newValue === \"sibling\" && this.previousElementSibling !== null) {\n      // find the sibling element in the DOM and associate to it's resource ID\n      // also generate a resource ID if it doesn't have one\n      if (this.previousElementSibling.getAttribute(\"resource\")) {\n        this.relatedResource = this.previousElementSibling.getAttribute(\n          \"resource\"\n        );\n      } else {\n        let uuid = generateResourceID();\n        this.relatedResource = uuid;\n        this.previousElementSibling.setAttribute(\"resource\", uuid);\n      }\n      // set prefix on the main element itself\n      this.previousElementSibling.setAttribute(\n        \"prefix\",\n        this.getAttribute(\"prefix\")\n      );\n    } else if (newValue === \"parent\") {\n      // find the parent and associate to it's resource ID, if it doesn't have one\n      // then let's make one dynamically\n      if (this.parentNode.getAttribute(\"resource\")) {\n        this.relatedResource = this.parentNode.getAttribute(\"resource\");\n      } else {\n        let uuid = generateResourceID();\n        this.relatedResource = uuid;\n        this.parentNode.setAttribute(\"resource\", uuid);\n      }\n      // set prefix on the main element itself\n      this.parentNode.setAttribute(\"prefix\", this.getAttribute(\"prefix\"));\n    }\n  }\n\n  /**\n   * Attached to the DOM, now fire.\n   */\n  static get haxProperties() {\n    return {\n      canScale: false,\n      canPosition: false,\n      canEditSource: false,\n      gizmo: {\n        title: \"Citation\",\n        description: \"A basic citation element with 3 presentation modes\",\n        icon: \"editor:title\",\n        color: \"grey\",\n        groups: [\"Content\", \"Text\", \"Copyright\"],\n        handles: [\n          {\n            type: \"citation\",\n            source: \"source\",\n            title: \"title\",\n            author: \"creator\",\n            license: \"license\",\n            accessDate: \"date\"\n          }\n        ],\n        meta: {\n          author: \"ELMS:LN\"\n        }\n      },\n      settings: {\n        quick: [\n          {\n            property: \"title\",\n            title: \"Title\",\n            description: \"The title of the work being cited.\",\n            inputMethod: \"textfield\",\n            icon: \"editor:title\"\n          }\n        ],\n        configure: [\n          {\n            property: \"title\",\n            title: \"Title\",\n            description: \"The title of the work being cited.\",\n            inputMethod: \"textfield\",\n            icon: \"editor:title\"\n          },\n          {\n            property: \"source\",\n            title: \"Source link\",\n            description: \"The source url for the element this is citing.\",\n            inputMethod: \"textfield\",\n            icon: \"link\",\n            validationType: \"url\"\n          },\n          {\n            property: \"date\",\n            title: \"Date accessed\",\n            description: \"The date this was accessed.\",\n            inputMethod: \"textfield\",\n            icon: \"link\"\n          },\n          {\n            property: \"scope\",\n            title: \"Scope\",\n            description: \"Scope of what to cite.\",\n            inputMethod: \"select\",\n            options: {\n              sibling: \"Sibling element\",\n              parent: \"Parent element\"\n            },\n            icon: \"code\"\n          },\n          {\n            property: \"license\",\n            title: \"License\",\n            description: \"The source url for the element this is citing.\",\n            inputMethod: \"select\",\n            options: new licenseList(\"select\"),\n            icon: \"link\"\n          },\n          {\n            property: \"creator\",\n            title: \"Creator\",\n            description: \"Who made or owns this.\",\n            inputMethod: \"textfield\",\n            icon: \"link\"\n          }\n        ],\n        advanced: []\n      }\n    };\n  }\n\n  /**\n   * License was updated, time to update license name and link.\n   */\n  _licenseUpdated(newValue) {\n    if (typeof newValue !== typeof undefined) {\n      var list = new licenseList();\n      if (typeof list[newValue] !== typeof undefined) {\n        this.licenseName = list[newValue].name;\n        this.licenseLink = list[newValue].link;\n        this.licenseImage = list[newValue].image;\n      }\n    }\n  }\n}\nwindow.customElements.define(CitationElement.tag, CitationElement);\nexport { CitationElement };\n"],"names":["CitationElement","scope","source","SchemaBehaviors","LitElement","html","this","relatedResource","title","licenseLink","licenseName","creator","licenseImage","date","css","changedProperties","forEach","oldValue","propName","_this2","_scopeChanged","_licenseUpdated","includes","_aboutLink","_generateAboutLink","_licenseLink","_generateLicenseLink","document","head","removeChild","link","createElement","setAttribute","appendChild","newValue","previousElementSibling","getAttribute","uuid","generateResourceID","parentNode","_typeof","list","licenseList","name","image","type","String","displayMethod","reflect","attribute","license","canScale","canPosition","canEditSource","gizmo","description","icon","color","groups","handles","author","accessDate","meta","settings","quick","property","inputMethod","configure","validationType","options","sibling","parent","advanced","window","customElements","define","tag"],"mappings":"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"}