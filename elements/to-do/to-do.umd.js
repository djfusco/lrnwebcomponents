!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@polymer/polymer/polymer-element.js"),require("@lrnwebcomponents/schema-behaviors/schema-behaviors.js")):"function"==typeof define&&define.amd?define(["exports","@polymer/polymer/polymer-element.js","@lrnwebcomponents/schema-behaviors/schema-behaviors.js"],t):t((e=e||self).ToDo={},e.polymerElement_js,e.schemaBehaviors_js)}(this,function(e,t,n){"use strict";function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),n.push.apply(n,r)}return n}function l(e){return(l=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function p(e,t){return(p=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function s(e,t){return!t||"object"!=typeof t&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function c(e,t,n){return(c="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=l(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function d(){var e,t,n=(e=['\n      <style>\n        :host {\n          display: block;\n        }\n        :host([hide-form]) ul {\n          border: 1px solid black;\n        }\n        paper-card {\n          width: 100%;\n          padding: 8px;\n        }\n        .task-list-wrapper {\n          width: 100%;\n          height: 100%;\n          border: 2px solid black;\n          list-style: none;\n          padding: 0;\n        }\n        .task-list-wrapper li {\n          padding: 8px;\n        }\n        .task-list-wrapper li:nth-child(even) {\n          background-color: #f5f5f5;\n        }\n        .task-list-wrapper li:nth-child(odd) {\n          background-color: #e5e5e5;\n        }\n        .task-list-wrapper li:hover {\n          background-color: #ffffff;\n        }\n        .task-list-wrapper li:active {\n          background-color: #ffffff;\n        }\n        .task-list-wrapper li:focus {\n          background-color: #ffffff;\n        }\n        h3 {\n          margin: 4px;\n          padding: 0;\n          font-size: 20px;\n        }\n      </style>\n      <paper-card heading="[[name]]" elevation="2">\n        <div class="card-content">\n          <div hidden$="[[hideForm]]">\n            <paper-input label="Task to accomplish" id="itemtext"></paper-input>\n            <paper-button raised="" id="itembutton" on-click="_addItemToList"\n              >Add item</paper-button\n            >\n          </div>\n          <ul class="task-list-wrapper">\n            <template is="dom-repeat" items="[[items]]" as="item">\n              <li data-item-id$="[[item.id]]">\n                <paper-checkbox\n                  checked="{{item.value}}"\n                  disabled="[[item.disabled]]"\n                  >[[item.label]]</paper-checkbox\n                >\n              </li>\n            </template>\n          </ul>\n        </div>\n      </paper-card>\n    '],(t=['\n      <style>\n        :host {\n          display: block;\n        }\n        :host([hide-form]) ul {\n          border: 1px solid black;\n        }\n        paper-card {\n          width: 100%;\n          padding: 8px;\n        }\n        .task-list-wrapper {\n          width: 100%;\n          height: 100%;\n          border: 2px solid black;\n          list-style: none;\n          padding: 0;\n        }\n        .task-list-wrapper li {\n          padding: 8px;\n        }\n        .task-list-wrapper li:nth-child(even) {\n          background-color: #f5f5f5;\n        }\n        .task-list-wrapper li:nth-child(odd) {\n          background-color: #e5e5e5;\n        }\n        .task-list-wrapper li:hover {\n          background-color: #ffffff;\n        }\n        .task-list-wrapper li:active {\n          background-color: #ffffff;\n        }\n        .task-list-wrapper li:focus {\n          background-color: #ffffff;\n        }\n        h3 {\n          margin: 4px;\n          padding: 0;\n          font-size: 20px;\n        }\n      </style>\n      <paper-card heading="[[name]]" elevation="2">\n        <div class="card-content">\n          <div hidden\\$="[[hideForm]]">\n            <paper-input label="Task to accomplish" id="itemtext"></paper-input>\n            <paper-button raised="" id="itembutton" on-click="_addItemToList"\n              >Add item</paper-button\n            >\n          </div>\n          <ul class="task-list-wrapper">\n            <template is="dom-repeat" items="[[items]]" as="item">\n              <li data-item-id\\$="[[item.id]]">\n                <paper-checkbox\n                  checked="{{item.value}}"\n                  disabled="[[item.disabled]]"\n                  >[[item.label]]</paper-checkbox\n                >\n              </li>\n            </template>\n          </ul>\n        </div>\n      </paper-card>\n    '])||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}})));return d=function(){return n},n}var u=function(e){function u(){var e;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),e=s(this,l(u).call(this)),import("@polymer/paper-checkbox/paper-checkbox.js"),import("@polymer/paper-button/paper-button.js"),import("@polymer/paper-card/paper-card.js"),import("@polymer/paper-input/paper-input.js"),e}var f,m,b;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&p(e,t)}(u,n.SchemaBehaviors(t.PolymerElement)),f=u,b=[{key:"template",get:function(){return t.html(d())}},{key:"tag",get:function(){return"to-do"}},{key:"observers",get:function(){return["_valueChanged(items.*)"]}},{key:"properties",get:function(){return function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach(function(t){i(e,t,n[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})}return e}({},c(l(u),"properties",this),{hideForm:{type:Boolean,value:!1,reflectToAttribute:!0},disabledList:{type:Boolean,value:!1,reflectToAttribute:!0},name:{type:String,value:"To do list"},items:{type:Array,value:[],notify:!0}})}},{key:"haxProperties",get:function(){return{canScale:!0,canPosition:!0,canEditSource:!1,gizmo:{title:"To do list",description:"A list of things to do so people can keep calm.",icon:"icons:list",color:"grey",groups:["List"],handles:[],meta:{author:"ELMS:LN"}},settings:{quick:[{property:"name",title:"Name",description:"The name of this to do list",inputMethod:"textfield",icon:"editor:title"}],configure:[{property:"name",title:"Name",description:"The name of this to do list",inputMethod:"textfield",icon:"editor:title"},{property:"items",title:"List of items",description:"List of items to display in our list.",inputMethod:"array",itemLabel:"label",properties:[{property:"label",title:"Task",description:"Name of the task",inputMethod:"textfield",required:!0},{property:"value",title:"Done",description:"Completion state",inputMethod:"boolean"}]}],advanced:[]}}}}],(m=[{key:"_valueChanged",value:function(e){for(var t in e.base)for(var n in e.base[t])this.notifyPath("items."+t+"."+n)}},{key:"_addItemToList",value:function(e){""!=this.shadowRoot.querySelector("#itemtext").value&&"undefined"!==r(this.shadowRoot.querySelector("#itemtext").value)&&(this.push("items",{label:this.shadowRoot.querySelector("#itemtext").value,value:!1,disabled:this.disabledList,id:"item-id-"+this.items.length}),this.shadowRoot.querySelector("#itemtext").value="")}}])&&o(f.prototype,m),b&&o(f,b),u}();window.customElements.define(u.tag,u),e.ToDo=u,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=to-do.umd.js.map
