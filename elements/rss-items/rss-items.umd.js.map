{"version":3,"file":"rss-items.umd.js","sources":["rss-items.umd.js"],"sourcesContent":["/**\n * Copyright 2019 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n *\n * Based on https://github.com/TherapyChat/rss-items\n */\nimport { LitElement, html, css } from \"lit-element/lit-element.js\";\nimport \"@lrnwebcomponents/es-global-bridge/es-global-bridge.js\";\nimport \"@polymer/iron-ajax/iron-ajax.js\";\n/**\n * `rss-items`\n * `visualize RSS items`\n * \n * Example:\n  ```html\n  <rss-items\n    url=\"https://content.therapychat.com/rss.xml\"\n    max=\"4\"\n    auto\n  ></rss-items>\n  ```\n * It will retrieve the items from the url automatically.\n * @demo demo/index.html\n * @element rss-items\n */\nclass RssItems extends LitElement {\n  \n  //styles function\n  static get styles() {\n    return  [\n      \n      css`\n:host([hidden]) {\n  display: none;\n}\n:host {\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: row;\n  align-items: flex-start;\n  justify-content: space-between;\n}\n\n:host * {\n  box-sizing: border-box;\n}\n\nh3,\np {\n  margin: 0;\n}\n\na {\n  color: var(--primary-color, inherit);\n  text-decoration: none;\n}\n\narticle {\n  margin-bottom: 2em;\n}\n\n.thumbnail-container {\n  display: block;\n  overflow: hidden;\n  width: 100%;\n  height: 180px;\n}\n\n.thumbnail {\n  width: 100%;\n  height: 100%;\n  transition: transform .5s ease-out;\n}\n\n.thumbnail-container:hover .thumbnail,\n.thumbnail-container:focus .thumbnail {\n  transform: scale3d(1.3, 1.3, 1);\n}\n\n.title {\n  min-height: 3em;\n  margin: 1em 0 .5em;\n}\n\n.excerpt {\n  min-height: 6em;\n  margin: .5em 0 2em;\n}\n\n@media (max-width: 599px) {\n  .title,\n  .excerpt {\n    min-height: 0;\n  }\n}\n\n@media (min-width: 600px) {\n  article {\n    flex: 1 1 40%;\n    margin-right: 2em;\n  }\n\n  article:nth-of-type(2n),\n  article:last-of-type {\n    margin-right: 0;\n  }\n}\n\n@media (min-width: 900px) {\n  article {\n    flex: 1 1 30%;\n  }\n\n  article:nth-of-type(2n) {\n    margin-right: 2em;\n  }\n\n  article:nth-of-type(3n) {\n    margin-right: 0;\n  }\n}\n      `\n    ];\n  }\n  // render function\n  render() {\n    return html`\n\n<iron-ajax\nid=\"rssajax\"\nurl=\"${this.url}\"\nhandle-as=\"xml\"\n@last-response-changed=\"${this.xmlEvent}\"></iron-ajax>\n${this.items.map(item => html`\n  <article>\n    ${item.imageSrc ? html`\n    <a class=\"thumbnail-container\" href=\"${item.link}\" title=\"${item.title}\">\n      <iron-image class=\"thumbnail\" src=\"${item.imageSrc}\" alt=\"${item.title}\" sizing=\"cover\"></iron-image>\n    </a>\n    ` : ``}\n    <a href=\"${item.link}\" title=\"${item.title}\">\n      <span class=\"title\">${this._truncateText(item.title, this.maxTitleLength)}</span>\n    </a>\n    <div class=\"excerpt\">${this._truncateText(item.excerpt, this.maxExcerptLength)}</div>\n    ${this.showReadMore ? html`\n      <a tabindex=\"-1\" href=\"${item.link}\" class=\"read-more\" title=\"${item.title}\">${this.readMoreAnchorText}\n        <paper-icon-button icon=\"icons:arrow-forward\" class=\"read-more-icon\" alt=\"${this.readMoreImageAlt}\"></paper-icon-button>\n      </a>\n    ` : ``}\n  </article>\n`)}`;\n  }\n\n  // haxProperty definition\n  static get haxProperties() {\n    return {\n  \"canScale\": true,\n  \"canPosition\": true,\n  \"canEditSource\": false,\n  \"gizmo\": {\n    \"title\": \"Rss feed\",\n    \"description\": \"visualize RSS items\",\n    \"icon\": \"communication:rss-feed\",\n    \"color\": \"orange\",\n    \"groups\": [\"RSS\"],\n    \"handles\": [\n      {\n        \"type\": \"rss\",\n        \"source\": \"source\"\n      }\n    ],\n    \"meta\": {\n      \"author\": \"btopro\",\n      \"owner\": \"The Pennsylvania State University\"\n    }\n  },\n  \"settings\": {\n    \"quick\": [],\n    \"configure\": [\n      {\n        \"property\": \"url\",\n        \"title\": \"Feed URL\",\n        \"description\": \"URL to the XML feed\",\n        \"inputMethod\": \"textfield\"\n      },\n      {\n        \"property\": \"max\",\n        \"title\": \"Max items\",\n        \"description\": \"Max number of feed items to display\",\n        \"inputMethod\": \"number\"\n      }\n    ],\n    \"advanced\": []\n  }\n}\n;\n  }\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n  \n  ...super.properties,\n  \n  /**\n   * If true init rss request.\n   */\n  \"auto\": {\n    \"type\": Boolean\n  },\n  /**\n   * The retrieved items array.\n   */\n  \"items\": {\n    \"type\": Array\n  },\n  /**\n   * Max number of items to show. If it is undefined shows all items.\n   */\n  \"max\": {\n    \"type\": Number\n  },\n  /**\n   * Max length for item excerpts. If the excerpt exceeds this length it will be trimed and will have an ellipsis appended.\n   */\n  \"maxExcerptLength\": {\n    \"type\": Number,\n    \"attribute\": \"max-excerpt-length\"\n  },\n  /**\n   * Max length for item titles. If the title exceeds this length it will be trimed and will have an ellipsis appended.\n   */\n  \"maxTitleLength\": {\n    \"type\": Number,\n    \"attribute\": \"max-title-length\"\n  },\n  /**\n   * Read more anchor text.\n   */\n  \"readMoreAnchorText\": {\n    \"type\": Boolean,\n    \"attribute\": \"read-more-anchor-text\"\n  },\n  /**\n   * Read more image alternative text.\n   */\n  \"readMoreImageAlt\": {\n    \"type\": Boolean,\n    \"attribute\": \"read-more-image-alt\"\n  },\n  /**\n   * If true the items elements will display a read more link.\n   */\n  \"showReadMore\": {\n    \"type\": Boolean,\n    \"attribute\": \"show-read-more\"\n  },\n  /**\n   * The URL of the RSS.\n   */\n  \"url\": {\n    \"type\": String\n  },\n  \"xml\": {\n    \"type\": Object\n  }\n}\n;\n  }\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"rss-items\";\n  }\n  /**\n   * Init ajax request to get rss.\n   */\n  initRequest() {\n    this.shadowRoot.querySelector(\"#rssajax\").generateRequest();\n  }\n  _maxChanged(newValue) {\n    if (this.xml && newValue && this._x2js && this.__ready) {\n      this.xmlToItems(this.xml);\n    }\n  }\n  /**\n   * Receives a xml and set this.items as json.\n   * @param {Object} xml XML element.\n   */\n  xmlToItems(newValue) {\n    if (newValue && this._x2js && this.__ready) {\n      // parse xml to json and get items\n      var conversor = new X2JS();\n      var json = conversor.xml2json(newValue);\n      if (json) {\n        var items = json.rss ? json.rss.channel.item : json.channel.item;\n        // truncate with this.max and parse items\n        items = this.max === undefined ? items : items.splice(0, this.max);\n        this.items = [...this._parseItems(items)];\n      }\n    }\n  }\n  _urlChanged(newValue) {\n    if (newValue && this._x2js && this.__ready) {\n      this.initRequest();\n    }\n  }\n  xmlEvent(e) {\n    this.xml = {};\n    setTimeout(() => {\n      this.xml = e.detail.value;\n    }, 0);\n  }\n  /**\n   * Parse items by getting excerpt and image source.\n   * @param {Array} items RSS items.\n   */\n  _parseItems(items) {\n    return items.map(item => {\n      item.excerpt = this._getItemExcerpt(item);\n      item.imageSrc = this._getItemImageScr(item);\n      return item;\n    });\n  }\n  /**\n   * Get excerpt from item description.\n   * @param {Object} item Item where find excerpt.\n   */\n  _getItemExcerpt(item) {\n    var element = document.createElement(\"div\");\n    element.innerHTML = item.description;\n    return element.textContent.trim();\n  }\n  /**\n   * Get image source from item description.\n   * @param {Object} item Item where find image.\n   */\n  _getItemImageScr(item) {\n    if (item.thumbnail && item.thumbnail._url) {\n      return item.thumbnail._url;\n    } else {\n      var element = document.createElement(\"div\");\n      element.innerHTML = item.description;\n      var image = element.querySelector(\"img\") || {};\n      return image.src || \"\";\n    }\n  }\n  /**\n   * Truncate a text and concatenate with ellipsis if needed.\n   * @param {String} text Text to truncate.\n   * @param {Number} maxLength Max length of the text.\n   * @return {String} Truncated text.\n   */\n  _truncateText(text, maxLength) {\n    if (text) {\n      return maxLength && text.length > maxLength\n        ? text.substr(0, maxLength) + \"...\"\n        : text;\n    }\n  }\n  // simple path from a url modifier\n  pathFromUrl(url) {\n    return url.substring(0, url.lastIndexOf(\"/\") + 1);\n  }\n  updated(changedProperties) {\n    changedProperties.forEach((oldValue, propName) => {\n      let notifiedProps = [\"items\"];\n      if (notifiedProps.includes(propName)) {\n        // notify\n        let eventName = `${propName\n          .replace(/([a-z0-9]|(?=[A-Z]))([A-Z])/g, \"$1-$2\")\n          .toLowerCase()}-changed`;\n        this.dispatchEvent(\n          new CustomEvent(eventName, {\n            detail: {\n              value: this[propName]\n            }\n          })\n        );\n      }\n      if (propName == \"max\") {\n        this._maxChanged(this[propName], oldValue);\n      }\n      if (propName == \"url\") {\n        this._urlChanged(this[propName], oldValue);\n      }\n      if (propName == \"xml\") {\n        this.xmlToItems(this[propName], oldValue);\n      }\n    });\n  }\n  constructor() {\n    super();\n    this.items = [];\n    this.auto = false;\n    this.max = 10;\n    this.maxExcerptLength = 100;\n    this.maxTitleLength = 50;\n    this.readMoreAnchorText = \"Read more\";\n    this.readMoreImageAlt = \"\";\n    this.showReadMore = false;\n    import(\"@polymer/iron-image/iron-image.js\");\n    import(\"@polymer/paper-icon-button/paper-icon-button.js\");\n    import(\"@polymer/iron-icons/iron-icons.js\");\n    const name = \"x2js\";\n    const basePath = this.pathFromUrl(decodeURIComponent(import.meta.url));\n    const location = `${basePath}lib/x2js.js`;\n    window.ESGlobalBridge.requestAvailability();\n    window.ESGlobalBridge.instance.load(name, location);\n    window.addEventListener(\n      `es-bridge-${name}-loaded`,\n      this._x2jsLoaded.bind(this)\n    );\n  }\n  _x2jsLoaded(e) {\n    this._x2js = true;\n    if (this.__ready) {\n      if (this.auto) {\n        this.shadowRoot.querySelector(\"#rssajax\").auto = this.auto;\n      } else {\n        this.initRequest();\n      }\n    }\n  }\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  firstUpdated() {\n    this.__ready = true;\n    if (this._x2js) {\n      if (this.auto) {\n        this.shadowRoot.querySelector(\"#rssajax\").auto = this.auto;\n      } else {\n        this.initRequest();\n      }\n    }\n  }\n  /**\n   * life cycle, element is removed from the DOM\n   */\n  disconnectedCallback() {\n    window.removeEventListener(\n      `es-bridge-${name}-loaded`,\n      this._x2jsLoaded.bind(this)\n    );\n    super.disconnectedCallback();\n  }\n}\nwindow.customElements.define(RssItems.tag, RssItems);\nexport { RssItems };\n"],"names":["RssItems","items","auto","max","maxExcerptLength","maxTitleLength","readMoreAnchorText","readMoreImageAlt","showReadMore","basePath","_this","pathFromUrl","decodeURIComponent","location","window","ESGlobalBridge","requestAvailability","instance","load","addEventListener","_x2jsLoaded","bind","LitElement","html","this","url","xmlEvent","map","item","imageSrc","link","title","_this2","_truncateText","excerpt","shadowRoot","querySelector","generateRequest","newValue","xml","_x2js","__ready","xmlToItems","json","X2JS","xml2json","rss","channel","undefined","splice","_parseItems","initRequest","e","setTimeout","_this3","detail","value","_this4","_getItemExcerpt","_getItemImageScr","element","document","createElement","innerHTML","description","textContent","trim","thumbnail","_url","src","text","maxLength","length","substr","substring","lastIndexOf","changedProperties","forEach","oldValue","propName","includes","eventName","replace","toLowerCase","_this5","dispatchEvent","CustomEvent","_maxChanged","_urlChanged","css","Boolean","Array","Number","String","Object","removeEventListener","name","customElements","define","tag"],"mappings":"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"}