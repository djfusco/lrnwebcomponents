{"version":3,"file":"filtered-image.umd.js","sources":["filtered-image.umd.js"],"sourcesContent":["/**\n * Copyright 2019 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, css } from \"lit-element/lit-element.js\";\n\nimport { SimpleColors } from \"@lrnwebcomponents/simple-colors/simple-colors.js\";\n/**\n * `filtered-image`\n * `An image using an SVG filter. Can be used to make background images have more contrast with text.`\n * @demo demo/index.html\n * @demo demo/filters.html Filters\n * @element filtered-image\n */\nclass FilteredImage extends SimpleColors {\n  \n  //styles function\n  static get styles() {\n    return  [\n      ...super.styles,\n      css`\n:host {\n  display: block;\n}\n:host([hidden]) {\n  display: none;\n}\n      `\n    ];\n  }\n  // render function\n  render() {\n    return html`\n\n<svg id=\"svg\" viewBox=\"0 0 ${this.width} ${this.height}\"> \n  <rect id=\"rect\" x=\"0\" y=\"0\"></rect>\n  <filter id=\"${this.__id}\">\n    <feColorMatrix\n      id=\"matrix\"\n      type=\"matrix\"\n      values=\" 1   0   0   0   0\n               0   1   0   0   0\n               0   0   1   0   0\n               0   0   0   1   0 \"/>\n  </filter>\n  <image id=\"image\" filter=\"url(#${this.__id})\" x=\"0\" y=\"0\"></image>\n</svg>`;\n  }\n\n  // haxProperty definition\n  static get haxProperties() {\n    return {\n  \"canScale\": true,\n  \"canPosition\": true,\n  \"canEditSource\": false,\n  \"gizmo\": {\n    \"title\": \"Filtered image\",\n    \"description\": \"An image using an SVG filter. Can be used to make background images have more contrast with text.\",\n    \"icon\": \"icons:android\",\n    \"color\": \"green\",\n    \"groups\": [\"Image\"],\n    \"handles\": [\n      {\n        \"type\": \"todo:read-the-docs-for-usage\"\n      }\n    ],\n    \"meta\": {\n      \"author\": \"nikkimk\",\n      \"owner\": \"The Pennsylvania State University\"\n    }\n  },\n  \"settings\": {\n    \"quick\": [\n      {\n        \"property\": \"src\",\n        \"description\": \"\",\n        \"inputMethod\": \"textfield\",\n        \"required\": true,\n        \"icon\": \"icons:link\",\n        \"validationType\": \"url\"\n      },\n      {\n        \"property\": \"alt\",\n        \"description\": \"\",\n        \"inputMethod\": \"alt\",\n        \"required\": true,\n        \"icon\": \"icons:accessibility\"\n      }\n    ],\n    \"configure\": [\n      {\n        \"property\": \"src\",\n        \"description\": \"\",\n        \"inputMethod\": \"textfield\",\n        \"required\": true,\n        \"icon\": \"icons:link\",\n        \"validationType\": \"url\"\n      },\n      {\n        \"property\": \"alt\",\n        \"description\": \"\",\n        \"inputMethod\": \"alt\",\n        \"required\": true,\n        \"icon\": \"icons:accessibility\"\n      }\n    ],\n    \"advanced\": []\n  }\n}\n;\n  }\n  // properties available to the custom element for data binding\n    static get properties() {\n    return {\n  \n  ...super.properties,\n  \n  \"src\": {\n    \"type\": String\n  },\n  \"__id\": {\n    \"type\": String\n  },\n  \"alt\": {\n    \"type\": String\n  },\n  \"height\": {\n    \"type\": String\n  },\n  \"width\": {\n    \"type\": String\n  },\n  \"color\": {\n    \"type\": String\n  },\n  \"strength\": {\n    \"type\": Number\n  },\n  \"contrast\": {\n    \"type\": Number\n  },\n  \"__matrix\": {\n    \"type\": Array\n  }\n}\n;\n  }\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"filtered-image\";\n  }\n  /**\n   * HTMLElement\n   */\n  constructor() {\n    super();\n    this.src = \"\";\n    this.alt = \"\";\n    this.height = \"\";\n    this.width = \"\";\n    this.color = \"#ffffff\";\n    this.strength = 1;\n    this.contrast = 0;\n  }\n  /**\n   * LitElement properties changed\n   */\n  updated(changedProperties) {\n    changedProperties.forEach((oldValue, propName) => {\n      if (propName == \"src\") {\n        this._srcChanged(this[propName]);\n      }\n      if (propName == \"height\") {\n        this._heightChanged(this[propName]);\n      }\n      if (propName == \"width\") {\n        this._widthChanged(this[propName]);\n      }\n      if ([\"src\", \"matrix\"].includes(propName)) {\n        this.__id = this._getID(this.src, this.matrix);\n      }\n      if ([\"color\", \"contrast\", \"strength\"].includes(propName)) {\n        this.__matrix = this._getMatrix(\n          this.color,\n          this.contrast,\n          this.strength\n        );\n      }\n    });\n  }\n  _heightChanged() {\n    let svg = this.shadowRoot.querySelector(\"#svg\"),\n      image = svg.querySelector(\"#image\"),\n      rect = svg.querySelector(\"#rect\");\n    svg.setAttribute(\"height\", this.height);\n    image.setAttribute(\"height\", this.height);\n    rect.setAttribute(\"height\", this.height);\n  }\n  _widthChanged() {\n    let svg = this.shadowRoot.querySelector(\"#svg\"),\n      image = svg.querySelector(\"#image\"),\n      rect = svg.querySelector(\"#rect\");\n    svg.setAttribute(\"width\", this.width);\n    image.setAttribute(\"width\", this.width);\n    rect.setAttribute(\"width\", this.width);\n  }\n  _srcChanged() {\n    let svg = this.shadowRoot.querySelector(\"#svg\"),\n      image = svg.querySelector(\"#image\");\n    image.setAttribute(\"href\", this.src);\n    image.setAttribute(\"xlink:href\", this.src);\n  }\n  _getMatrix(color, contrast, strength) {\n    let values = [\n        [1, 0, 0, 0, 0],\n        [0, 1, 0, 0, 0],\n        [0, 0, 1, 0, 0],\n        [0, 0, 0, 1, 0]\n      ],\n      svg = this.shadowRoot.querySelector(\"#svg\"),\n      matrix = svg.querySelector(\"#matrix\"),\n      rgba = null;\n    if (color.startsWith(\"#\") && color.length > 6) {\n      if (color.length === 7) color += \"ff\";\n      values[0][0] = parseInt(color.substring(1, 3), 16) / 255;\n      values[1][1] = parseInt(color.substring(3, 5), 16) / 255;\n      values[2][2] = parseInt(color.substring(5, 7), 16) / 255;\n      values[3][3] = parseInt(color.substring(7, 9), 16) / 255;\n    } else if (color.startsWith(\"#\")) {\n      if (color.length === 4) color += \"f\";\n      values[0][0] =\n        parseInt(color.substring(1, 2) + color.substring(1, 2), 16) / 255;\n      values[1][1] =\n        parseInt(color.substring(2, 3) + color.substring(2, 3), 16) / 255;\n      values[2][2] =\n        parseInt(color.substring(3, 4) + color.substring(3, 4), 16) / 255;\n      values[3][3] =\n        parseInt(color.substring(4, 5) + color.substring(4, 5), 16) / 255;\n    } else if (color.startsWith(\"rgb\")) {\n      let temp = color.replace(/rgba?\\(/g, \"\").replace(/\\)/g, \"\");\n      rgba = temp.split(\",\");\n      values[0][0] = parseInt(rgba[0] / 255);\n      values[1][1] = parseInt(rgba[1] / 255);\n      values[2][2] = parseInt(rgba[2] / 255);\n      values[3][3] = values[3][3] || \"1\";\n    }\n\n    if (contrast !== 0) {\n      values[0][3] = (values[0][0] * contrast) / 100;\n      values[1][3] = (values[1][1] * contrast) / 100;\n      values[2][3] = (values[2][2] * contrast) / 100;\n    }\n    if (strength !== 1) {\n      values[0][0] = values[0][0] + (1 - strength) * (1 - values[0][0]);\n      values[1][1] = values[1][1] + (1 - strength) * (1 - values[1][1]);\n      values[2][2] = values[2][2] + (1 - strength) * (1 - values[2][2]);\n    }\n\n    matrix.setAttribute(\n      \"values\",\n      JSON.stringify(values).replace(/[,\\[\\]]/g, \" \")\n    );\n    return values;\n  }\n  _getID(src, matrix) {\n    let id = \"svg\" + Math.random();\n    return id.replace(/0./g, \"-\");\n  }\n}\nwindow.customElements.define(FilteredImage.tag, FilteredImage);\nexport { FilteredImage };\n"],"names":["FilteredImage","src","alt","height","width","color","strength","contrast","SimpleColors","html","this","__id","css","String","Number","Array","changedProperties","forEach","oldValue","propName","_this2","_srcChanged","_heightChanged","_widthChanged","includes","_getID","matrix","__matrix","_getMatrix","svg","shadowRoot","querySelector","image","rect","setAttribute","values","rgba","startsWith","length","parseInt","substring","replace","split","JSON","stringify","Math","random","window","customElements","define","tag"],"mappings":"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"}