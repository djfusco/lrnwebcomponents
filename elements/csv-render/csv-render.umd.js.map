{"version":3,"file":"csv-render.umd.js","sources":["csv-render.umd.js"],"sourcesContent":["/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, css } from \"lit-element/lit-element.js\";\nimport { SimpleColors } from \"@lrnwebcomponents/simple-colors/simple-colors.js\";\n/**\n * `csv-render`\n * `Remote render a CSV file in place as an accessible table.`\n *\n * @microcopy - language worth noting:\n *  - CSV is comma separated values\n *\n * @demo ./demo/index.html\n * @element csv-render\n */\nclass CsvRender extends SimpleColors {\n  /**\n   * LitElement style construction\n   */\n  static get styles() {\n    return [\n      css`\n        :host {\n          display: block;\n        }\n        .table {\n          width: 100%;\n          border: 1px solid var(--simple-colors-default-theme-accent-6);\n          border-collapse: collapse;\n          white-space: nowrap;\n          font-size: 16px;\n          background-color: var(--simple-colors-default-theme-grey-1);\n        }\n        .table thead {\n          padding-bottom: 0.16px;\n          position: sticky;\n        }\n        .table caption {\n          background-color: var(--simple-colors-default-theme-accent-1);\n          font-weight: bold;\n          padding: 8px;\n          border: 1px solid var(--simple-colors-default-theme-accent-6);\n          border-bottom: none;\n        }\n        :host(:not([accent-color])) .table caption,\n        :host([accent-color=\"grey\"]) .table caption {\n          background-color: var(--simple-colors-default-theme-accent-2);\n        }\n        .table tbody tr {\n          position: relative;\n          height: 48px;\n          -webkit-transition-duration: 0.28s;\n          transition-duration: 0.28s;\n          -webkit-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n          transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n          -webkit-transition-property: background-color;\n          transition-property: background-color;\n        }\n        .table tbody tr:hover {\n          background-color: var(--simple-colors-default-theme-accent-1);\n        }\n        :host(:not([accent-color])) .table tbody tr:hover,\n        :host([accent-color=\"grey\"]) .table tbody tr:hover {\n          background-color: var(--simple-colors-default-theme-accent-2);\n        }\n        .table td,\n        .table thead th,\n        .table th {\n          padding: 0 1.125em;\n          text-align: left;\n        }\n        .table td {\n          border-top: 1px solid var(--simple-colors-default-theme-accent-6);\n          border-bottom: 1px solid var(--simple-colors-default-theme-accent-6);\n        }\n        .table th {\n          position: relative;\n          vertical-align: bottom;\n          text-overflow: ellipsis;\n          font-size: 16px;\n          font-weight: bold;\n          line-height: 24px;\n          letter-spacing: 0;\n          color: rgba(0, 0, 0, 0.54);\n          height: 48px;\n          padding-bottom: 8px;\n          box-sizing: border-box;\n        }\n        #loading {\n          position: absolute;\n        }\n        #download paper-button {\n          color: var(--simple-colors-default-theme-accent-6);\n          border-radius: 36px;\n          width: 36px;\n          height: 36px;\n          min-width: unset;\n          padding: 0;\n          margin: 0;\n          display: inline-flex;\n        }\n        iron-icon {\n          display: inline-flex;\n          margin: 0;\n          padding: 0;\n        }\n        #download paper-button:hover,\n        #download paper-button:focus,\n        #download paper-button:active {\n          color: var(--simple-colors-default-theme-accent-8);\n          outline: 2px solid var(--simple-colors-default-theme-accent-6);\n        }\n      `\n    ];\n  }\n  /**\n   * HTMLElement\n   */\n  constructor() {\n    super();\n    this.table = [];\n    this.tableHeadings = [];\n    this.tableData = \"\";\n    import(\"@lrnwebcomponents/hexagon-loader/hexagon-loader.js\");\n    import(\"@polymer/iron-ajax/iron-ajax.js\");\n    import(\"@polymer/iron-icons/iron-icons.js\");\n    import(\"@polymer/iron-icon/iron-icon.js\");\n    import(\"@polymer/paper-button/paper-button.js\");\n    import(\"@lrnwebcomponents/simple-tooltip/simple-tooltip.js\");\n  }\n  /**\n   * LitElement life cycle - property changed\n   */\n  updated(changedProperties) {\n    changedProperties.forEach((oldValue, propName) => {\n      if (propName == \"color\") {\n        this._getAccentColor(this[propName], oldValue);\n      }\n    });\n  }\n  /**\n   * LitElement render\n   */\n  render() {\n    return html`\n      <iron-ajax\n        auto\n        url=\"${this.dataSource}\"\n        handle-as=\"text\"\n        debounce-duration=\"500\"\n        @last-response-changed=\"${this.tableDataChanged}\"\n        @response=\"${this.handleResponse}\"\n      ></iron-ajax>\n      <hexagon-loader\n        id=\"loading\"\n        accent-color=\"${this.accentColor}\"\n        loading\n        item-count=\"4\"\n        size=\"small\"\n      ></hexagon-loader>\n      <a href=\"${this.dataSource}\" id=\"download\" tabindex=\"-1\">\n        <paper-button\n          ><iron-icon icon=\"file-download\"></iron-icon\n        ></paper-button>\n      </a>\n      <simple-tooltip for=\"download\" animation-delay=\"200\" offset=\"14\"\n        >Download table data</simple-tooltip\n      >\n      <table class=\"table\" summary=\"${this.summary}\">\n        ${this.caption\n          ? html`\n              <caption>\n                ${this.caption}\n              </caption>\n            `\n          : \"\"}\n        <thead>\n          <tr>\n            ${this.tableHeadings.map(\n              heading =>\n                html`\n                  <th scope=\"col\">${heading}</th>\n                `\n            )}\n          </tr>\n        </thead>\n        <tbody>\n          ${this.table.map(\n            row => html`\n              <tr>\n                ${row.map(\n                  col => html`\n                    <td>${col}</td>\n                  `\n                )}\n              </tr>\n            `\n          )}\n        </tbody>\n      </table>\n    `;\n  }\n\n  static get tag() {\n    return \"csv-render\";\n  }\n  tableDataChanged(e) {\n    this.tableData = e.detail.value;\n  }\n  static get properties() {\n    return {\n      /**\n       * Location of the CSV file.\n       */\n      dataSource: {\n        type: String,\n        attribute: \"data-source\"\n      },\n\n      /**\n       * Caption for the table to improve accessibility and readability.\n       */\n      caption: {\n        type: String\n      },\n      /**\n       * Summary to improve accessibility for screen readers.\n       */\n      summary: {\n        type: String\n      },\n      /**\n       * Table busted out as an array.\n       */\n      table: {\n        type: Array\n      },\n      /**\n       * Headings from the first row of the csv\n       */\n      tableHeadings: {\n        type: Array\n      },\n      /**\n       * Raw data pulled in from the csv file.\n       */\n      tableData: {\n        type: String,\n        attribute: \"table-data\"\n      },\n      /**\n       * Color class work to apply\n       */\n      color: {\n        type: String\n      }\n    };\n  }\n  /**\n   * Convert from csv text to an array in the table function\n   */\n  handleResponse(e) {\n    this.table = this.CSVtoArray(this.tableData);\n    this.tableHeadings = this.table.shift();\n    this.shadowRoot.querySelector(\"#loading\").loading = false;\n  }\n  /**\n   * Mix of solutions from https://stackoverflow.com/questions/8493195/how-can-i-parse-a-csv-string-with-javascript-which-contains-comma-in-data\n   */\n  CSVtoArray(text) {\n    let p = \"\",\n      row = [\"\"],\n      ret = [row],\n      i = 0,\n      r = 0,\n      s = !0,\n      l;\n    for (l in text) {\n      l = text[l];\n      if ('\"' === l) {\n        if (s && l === p) row[i] += l;\n        s = !s;\n      } else if (\",\" === l && s) l = row[++i] = \"\";\n      else if (\"\\n\" === l && s) {\n        if (\"\\r\" === p) row[i] = row[i].slice(0, -1);\n        row = ret[++r] = [(l = \"\")];\n        i = 0;\n      } else row[i] += l;\n      p = l;\n    }\n    return ret;\n  }\n\n  _getAccentColor(color) {\n    color = color.replace(\"-text\", \"\");\n    if (\n      (!this.accentColor || this.accentColor === \"grey\") &&\n      this.colors[color]\n    ) {\n      this.accentColor = color;\n    }\n  }\n}\nwindow.customElements.define(CsvRender.tag, CsvRender);\nexport { CsvRender };\n"],"names":["CsvRender","table","tableHeadings","tableData","SimpleColors","css","changedProperties","forEach","oldValue","propName","_this2","_getAccentColor","html","this","dataSource","tableDataChanged","handleResponse","accentColor","summary","caption","map","heading","row","col","e","detail","value","CSVtoArray","shift","shadowRoot","querySelector","loading","text","l","p","ret","i","r","s","slice","color","replace","colors","type","String","attribute","Array","window","customElements","define","tag"],"mappings":"oqLAgBMA,yKAyGGC,MAAQ,KACRC,cAAgB,KAChBC,UAAY,UACV,6DACA,0CACA,4CACA,0CACA,gDACA,oSAjHaC,6DAKb,CACLC,mDAgHIC,cACNA,EAAkBC,QAAQ,SAACC,EAAUC,GACnB,SAAZA,GACFC,EAAKC,gBAAgBD,EAAKD,GAAWD,6CAQlCI,WAGIC,KAAKC,WAGcD,KAAKE,iBAClBF,KAAKG,eAIFH,KAAKI,YAKZJ,KAAKC,WAQgBD,KAAKK,QACjCL,KAAKM,QACHP,WAEMC,KAAKM,SAGX,GAGEN,KAAKX,cAAckB,IACnB,SAAAC,UACET,WACoBS,KAMxBR,KAAKZ,MAAMmB,IACX,SAAAE,UAAOV,WAEDU,EAAIF,IACJ,SAAAG,UAAOX,WACCW,kDAcPC,QACVrB,UAAYqB,EAAEC,OAAOC,6CAsDbF,QACRvB,MAAQY,KAAKc,WAAWd,KAAKV,gBAC7BD,cAAgBW,KAAKZ,MAAM2B,aAC3BC,WAAWC,cAAc,YAAYC,SAAU,qCAK3CC,OAOPC,EANEC,EAAI,GACNZ,EAAM,CAAC,IACPa,EAAM,CAACb,GACPc,EAAI,EACJC,EAAI,EACJC,GAAI,MAEDL,KAAKD,EAEJ,OADJC,EAAID,EAAKC,KAEHK,GAAKL,IAAMC,IAAGZ,EAAIc,IAAMH,GAC5BK,GAAKA,GACI,MAAQL,GAAKK,EAAGL,EAAIX,IAAMc,GAAK,GACjC,OAASH,GAAKK,GACjB,OAASJ,IAAGZ,EAAIc,GAAKd,EAAIc,GAAGG,MAAM,GAAI,IAC1CjB,EAAMa,IAAME,GAAK,CAAEJ,EAAI,IACvBG,EAAI,GACCd,EAAIc,IAAMH,EACjBC,EAAID,SAECE,0CAGOK,GACdA,EAAQA,EAAMC,QAAQ,QAAS,IAE3B5B,KAAKI,aAAoC,SAArBJ,KAAKI,cAC3BJ,KAAK6B,OAAOF,UAEPvB,YAAcuB,uCA/Fd,sDAMA,CAIL1B,WAAY,CACV6B,KAAMC,OACNC,UAAW,eAMb1B,QAAS,CACPwB,KAAMC,QAKR1B,QAAS,CACPyB,KAAMC,QAKR3C,MAAO,CACL0C,KAAMG,OAKR5C,cAAe,CACbyC,KAAMG,OAKR3C,UAAW,CACTwC,KAAMC,OACNC,UAAW,cAKbL,MAAO,CACLG,KAAMC,kBAiDdG,OAAOC,eAAeC,OAAOjD,EAAUkD,IAAKlD"}