{"version":3,"file":"jwt-login.umd.js","sources":["jwt-login.umd.js"],"sourcesContent":["import { LitElement, html } from \"lit-element/lit-element.js\";\nimport \"@polymer/iron-ajax/iron-ajax.js\";\n/**\n * `jwt-login`\n * `a simple element to check for and fetch JWTs`\n * @demo demo/index.html\n * @microcopy - the mental model for this element\n * - jwt - a json web token which is an encrypted security token to talk\n * @element jwt-login\n */\nclass JwtLogin extends LitElement {\n  constructor() {\n    super();\n    this.auto = false;\n    this.method = \"GET\";\n    this.body = {};\n    this.key = \"jwt\";\n    this.jwt = null;\n  }\n  /**\n   * Handle the last error rolling in\n   */\n  lastErrorChanged(e) {\n    if (e.detail.value) {\n      // check for JWT needing refreshed vs busted but must be 403\n      console.error(e);\n      this.dispatchEvent(\n        new CustomEvent(\"jwt-login-refresh-error\", {\n          composed: true,\n          bubbles: true,\n          cancelable: false,\n          detail: {\n            value: e.detail.value\n          }\n        })\n      );\n    }\n  }\n  /**\n   * LitElement\n   */\n  render() {\n    return html`\n      <iron-ajax\n        reject-with-request\n        ?auto=\"${this.auto}\"\n        id=\"request\"\n        method=\"${this.method}\"\n        url=\"${this.url}\"\n        handle-as=\"json\"\n        content-type=\"application/json\"\n        @response=\"${this.loginResponse}\"\n        @last-error-changed=\"${this.lastErrorChanged}\"\n      >\n      </iron-ajax>\n    `;\n  }\n\n  static get tag() {\n    return \"jwt-login\";\n  }\n\n  static get properties() {\n    return {\n      /**\n       * auto, useful for demos\n       */\n      auto: {\n        type: Boolean\n      },\n      /**\n       * refreshUrl to get a new JSON web token\n       */\n      refreshUrl: {\n        type: String,\n        attribute: \"refresh-url\"\n      },\n      /**\n       * where to redirect for a login token if we REALLY are logged out\n       */\n      redirectUrl: {\n        type: String,\n        attribute: \"redirect-url\"\n      },\n      /**\n       * logout url\n       */\n      logoutUrl: {\n        type: String,\n        attribute: \"logout-url\"\n      },\n      /**\n       * url to get the JWT\n       */\n      url: {\n        type: String\n      },\n      /**\n       * Request method\n       */\n      method: {\n        type: String\n      },\n      /**\n       * Optional body, useful when doing posts\n       */\n      body: {\n        type: Object\n      },\n      /**\n       * Key that contains the token in local storage\n       */\n      key: {\n        type: String\n      },\n      /**\n       * JSON Web token to securely pass around\n       */\n      jwt: {\n        type: String\n      }\n    };\n  }\n  /**\n   * LitElement life cycle - properties changed callback\n   */\n  updated(changedProperties) {\n    changedProperties.forEach((oldValue, propName) => {\n      if (propName == \"jwt\") {\n        this._jwtChanged(this[propName], oldValue);\n        // notify\n        this.dispatchEvent(\n          new CustomEvent(\"jwt-changed\", {\n            detail: {\n              value: this[propName]\n            }\n          })\n        );\n      }\n    });\n  }\n  _jwtChanged(newValue, oldValue) {\n    if (\n      (newValue == null || newValue == \"\" || newValue == \"null\") &&\n      typeof oldValue !== typeof undefined\n    ) {\n      // remove this key from local storage bin\n      localStorage.removeItem(this.key);\n      // jwt was invalid some how\n      this.dispatchEvent(\n        new CustomEvent(\"jwt-logged-in\", {\n          bubbles: true,\n          cancelable: true,\n          composed: true,\n          detail: false\n        })\n      );\n    } else if (newValue) {\n      // set the jwt into local storage so we can reference later\n      localStorage.setItem(this.key, newValue);\n      this.dispatchEvent(\n        new CustomEvent(\"jwt-token\", {\n          bubbles: true,\n          cancelable: true,\n          composed: true,\n          detail: newValue\n        })\n      );\n      this.dispatchEvent(\n        new CustomEvent(\"jwt-logged-in\", {\n          bubbles: true,\n          cancelable: true,\n          composed: true,\n          detail: true\n        })\n      );\n    }\n  }\n  /**\n   * HTMLElement\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    window.addEventListener(\n      \"jwt-login-refresh-token\",\n      this.requestRefreshToken.bind(this)\n    );\n    window.addEventListener(\"jwt-login-toggle\", this.toggleLogin.bind(this));\n    window.addEventListener(\"jwt-login-login\", this.loginRequest.bind(this));\n    window.addEventListener(\"jwt-login-logout\", this.logoutRequest.bind(this));\n  }\n  /**\n   * HTMLElement\n   */\n  disconnectedCallback() {\n    window.removeEventListener(\n      \"jwt-login-refresh-token\",\n      this.requestRefreshToken.bind(this)\n    );\n    window.removeEventListener(\"jwt-login-login\", this.loginRequest.bind(this));\n    window.removeEventListener(\"jwt-login-toggle\", this.toggleLogin.bind(this));\n    window.removeEventListener(\n      \"jwt-login-logout\",\n      this.logoutRequest.bind(this)\n    );\n    super.disconnectedCallback();\n  }\n  /**\n   * LitElement life cycle - ready\n   */\n  firstUpdated(changedProperties) {\n    // set jwt from local storage bin\n    this.jwt = localStorage.getItem(this.key);\n  }\n  /**\n   * Request a refresh token\n   */\n  requestRefreshToken(e) {\n    this.__context = \"refresh\";\n    if (e.detail.element) {\n      this.__element = e.detail.element;\n    }\n    this.shadowRoot.querySelector(\"#request\").url = this.refreshUrl;\n    this.shadowRoot.querySelector(\"#request\").body = {};\n    this.shadowRoot.querySelector(\"#request\").generateRequest();\n  }\n  /**\n   * Request a user login if we need one or log out\n   */\n  toggleLogin(e) {\n    // null is default, if we don't have anything go get one\n    if (this.jwt == null) {\n      this.loginRequest(e);\n    } else {\n      this.logoutRequest(e);\n    }\n  }\n  loginRequest(e) {\n    this.__context = \"login\";\n    // detail of a login request event is the body which should have\n    // the authorization data in it\n    this.body = e.detail;\n    this.shadowRoot.querySelector(\"#request\").url = this.url;\n    this.shadowRoot.querySelector(\"#request\").body = { ...this.body };\n    this.shadowRoot.querySelector(\"#request\").generateRequest();\n  }\n  logoutRequest(e) {\n    this.__context = \"logout\";\n    this.__redirect = e.detail.redirect;\n    // we were told to logout, reset body\n    this.body = {};\n    // reset jwt which will do all the events / local storage work\n    this.jwt = null;\n    this.shadowRoot.querySelector(\"#request\").url = this.logoutUrl;\n    this.shadowRoot.querySelector(\"#request\").body = {};\n    this.shadowRoot.querySelector(\"#request\").generateRequest();\n  }\n  /**\n   * Login bridge to get a JWT and hang onto it\n   */\n  loginResponse(e) {\n    switch (this.__context) {\n      case \"login\":\n        this.jwt = e.detail.response;\n        break;\n      case \"refresh\":\n        // jwt change events will propagate and do their thing\n        this.jwt = e.detail.response;\n        // if we had a requesting element, let's let it do its thing\n        if (this.__element) {\n          this.__element.obj[this.__element.callback](\n            this.jwt,\n            ...this.__element.params\n          );\n          this.__element = false;\n        }\n        break;\n      case \"logout\":\n        if (this.__redirect && this.redirectUrl) {\n          setTimeout(() => {\n            window.location.href = this.redirectUrl;\n          }, 100);\n        }\n        break;\n    }\n  }\n}\nwindow.customElements.define(JwtLogin.tag, JwtLogin);\nexport { JwtLogin };\n"],"names":["JwtLogin","auto","method","body","key","jwt","LitElement","type","Boolean","refreshUrl","String","attribute","redirectUrl","logoutUrl","url","Object","e","detail","value","console","error","dispatchEvent","CustomEvent","composed","bubbles","cancelable","html","this","loginResponse","lastErrorChanged","changedProperties","forEach","oldValue","propName","_this2","_jwtChanged","newValue","_typeof","localStorage","setItem","removeItem","window","addEventListener","requestRefreshToken","bind","toggleLogin","loginRequest","logoutRequest","removeEventListener","getItem","__context","element","__element","shadowRoot","querySelector","generateRequest","__redirect","redirect","response","obj","callback","params","setTimeout","location","href","_this3","customElements","define","tag"],"mappings":"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"}