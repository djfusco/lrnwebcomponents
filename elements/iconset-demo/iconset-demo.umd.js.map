{"version":3,"file":"iconset-demo.umd.js","sources":["iconset-demo.umd.js"],"sourcesContent":["/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { IronMeta } from \"@polymer/iron-meta/iron-meta.js\";\nimport \"@polymer/iron-icon/iron-icon.js\";\nimport \"@polymer/marked-element/marked-element.js\";\n\nexport { IconsetDemo };\n/**\n * `iconset-demo`\n * @element iconset-demo\n * `iterates through an iconset array to generate a demo of all of the icons`\n *\n * @microcopy - language worth noting:\n *  -\n *\n\n * @polymer\n * @demo demo/index.html\n */\nclass IconsetDemo extends PolymerElement {\n  \n  // render function\n  static get template() {\n    return html`\n<style>\n:host {\n  display: block;\n  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12), 0 3px 1px -2px rgba(0, 0, 0, 0.2);\n  margin-bottom: 40px;\n  padding: 20px 40px;\n}\n:host .iconset:not(:first-of-type) {\n  border-top: 1px solid #ddd;\n}\n:host ul {\n  list-style-type: none;\n  padding: 0;\n}\n:host li {\n  display: inline-block;\n  width: 160px;\n  margin: 16px 8px;\n  text-align: center;\n  font-size: 10px;\n}\n:host iron-icon {\n  font-size: 14px;\n  color: rgb(97,97,97);\n  display: inline-block;\n}\n:host .iconset:nth-of-type(9n+2) iron-icon {\n  color: #BE3300;\n}\n:host .iconset:nth-of-type(9n+3) iron-icon {\n  color: #0000B5;\n}\n:host .iconset:nth-of-type(9n+4) iron-icon {\n  color: #750075;\n}\n:host .iconset:nth-of-type(9n+5) iron-icon {\n  color: #AA5D00;\n}\n:host .iconset:nth-of-type(9n+6) iron-icon {\n  color: #DB0A5B;\n}\n:host .iconset:nth-of-type(9n+7) iron-icon {\n  color: #005500;\n}\n:host .iconset:nth-of-type(9n+8) iron-icon {\n  color: #CF000F;\n}\n:host .iconset:nth-of-type(9n) iron-icon {\n  color: #005f8b;\n}\n        </style>\n<template is=\"dom-repeat\" items=\"[[__iconList]]\" as=\"iconset\">\n  <div class=\"iconset\">\n      <p><strong>[[iconset.name]]</strong></p>\n      <ul>\n          <template is=\"dom-repeat\" items=\"[[iconset.icons]]\" as=\"icon\">\n              <li>\n              <div id=\"icon\">\n                  <iron-icon icon\\$=\"[[icon]]\"></iron-icon>\n                  <div id=\"icon-text\">[[icon]]</div>\n              </div>\n              </li>\n          </template>\n      </ul>\n  </div>\n</template>`;\n  }\n\n  // properties available to the custom element for data binding\n    static get properties() {\n    return {\n  \n  ...super.properties,\n  \n  /**\n   * all the iconsets\n   */\n  \"__iconList\": {\n    \"name\": \"__iconList\",\n    \"type\": Array,\n    \"value\": []\n  },\n  /**\n   * a space-separated whitelist of iconsets by name\n   */\n  \"includeSets\": {\n    \"name\": \"includeSets\",\n    \"type\": String,\n    \"value\": null\n  },\n  /**\n   * a space-separated blacklist of iconsets by name\n   */\n  \"excludeSets\": {\n    \"name\": \"excludeSets\",\n    \"type\": String,\n    \"value\": null\n  }\n}\n;\n  }\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"iconset-demo\";\n  }\n  /**\n   * life cycle, element is ready\n   */\n  ready() {\n    super.ready();\n    const iconSets = new IronMeta({ type: \"iconset\" });\n    let temp = [],\n      root = this;\n\n    // need to access iconset imperatively now\n    if (\n      typeof iconSets !== typeof undefined &&\n      iconSets.list &&\n      iconSets.list.length\n    ) {\n      var index = 0;\n      iconSets.list.forEach(function(item) {\n        let name = item.name;\n        if (!root._hideIconset(name)) {\n          temp.push({\n            name: name,\n            icons: []\n          });\n          item.getIconNames().forEach(icon => {\n            temp[index].icons.push(icon);\n          });\n          index++;\n        }\n      });\n    }\n    this.__iconList = temp;\n  }\n  /**\n   *  determines if a given iconset should be hidden\n   *\n   * @param {string} name the name of the iconset\n   * @returns {boolean} whether or n ot to hide the iconset\n   */\n  _hideIconset(name) {\n    let isets = this.includeSets !== null ? this.includeSets.split(/ /) : [],\n      included = isets.length === 0 || isets.includes(name),\n      esets = this.excludeSets !== null ? this.excludeSets.split(/ /) : [],\n      excluded = esets.length.length > 0 && esets.includes(name);\n    return !included || excluded;\n  }\n  /**\n   * life cycle, element is removed from the DOM\n   */\n  //disconnectedCallback() {}\n}\nwindow.customElements.define(IconsetDemo.tag, IconsetDemo);\n"],"names":["IconsetDemo","PolymerElement","html","Array","String","iconSets","IronMeta","type","temp","root","this","_typeof","list","length","index","forEach","item","name","_hideIconset","push","icons","getIconNames","icon","__iconList","isets","includeSets","split","included","includes","esets","excludeSets","excluded","window","customElements","define","tag"],"mappings":"mwKAsBMA,gaAAoBC,+DAIfC,2bA8EK,MACJ,kBACAC,YACC,gBAKI,MACL,mBACAC,aACC,kBAKI,MACL,mBACAA,aACC,0CAWF,kGAODC,EAAW,IAAIC,WAAS,CAAEC,KAAM,YAClCC,EAAO,GACTC,EAAOC,sBAIPC,EAAON,IACPA,EAASO,MACTP,EAASO,KAAKC,OACd,KACIC,EAAQ,EACZT,EAASO,KAAKG,QAAQ,SAASC,OACzBC,EAAOD,EAAKC,KACXR,EAAKS,aAAaD,KACrBT,EAAKW,KAAK,CACRF,KAAMA,EACNG,MAAO,KAETJ,EAAKK,eAAeN,QAAQ,SAAAO,GAC1Bd,EAAKM,GAAOM,MAAMD,KAAKG,KAEzBR,YAIDS,WAAaf,uCAQPS,OACPO,EAA6B,OAArBd,KAAKe,YAAuBf,KAAKe,YAAYC,MAAM,KAAO,GACpEC,EAA4B,IAAjBH,EAAMX,QAAgBW,EAAMI,SAASX,GAChDY,EAA6B,OAArBnB,KAAKoB,YAAuBpB,KAAKoB,YAAYJ,MAAM,KAAO,GAClEK,EAAWF,EAAMhB,OAAOA,OAAS,GAAKgB,EAAMD,SAASX,UAC/CU,GAAYI,uCAOxBC,OAAOC,eAAeC,OAAOlC,EAAYmC,IAAKnC"}