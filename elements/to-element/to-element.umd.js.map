{"version":3,"file":"to-element.umd.js","sources":["to-element.umd.js"],"sourcesContent":["/**\n * Copyright 2019 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\n\n/**\n * `to-element`\n * @element to-element\n * `Replicate any DOM node passed in and turn it into a web component`\n *\n * @microcopy - language worth noting:\n *  -\n *\n\n * @demo demo/index.html\n */\nclass ToElement extends HTMLElement {\n  \n  // render function\n  get html() {\n    return `\n<style>\n\n        </style>\n<slot></slot>`;\n  }\n\n  // properties available to the custom element for data binding\n    static get properties() {\n    return {\n  \n  ...super.properties,\n  \n  /**\n   * object in question to clone and turn into a custom element\n   */\n  \"element\": {\n    \"name\": \"element\",\n    \"type\": Object,\n    \"value\": {}\n  },\n  /**\n   * valid custom element name of the new element to create\n   */\n  \"name\": {\n    \"name\": \"name\",\n    \"type\": String,\n    \"value\": \"new-element\"\n  },\n  /**\n   * optional original location that this came from\n   */\n  \"sourceUrl\": {\n    \"name\": \"sourceUrl\",\n    \"type\": String,\n    \"value\": \"\"\n  },\n  /**\n   * MIME type lookup for file extensions\n   */\n  \"fileTypes\": {\n    \"type\": Object,\n    \"value\"() {\n      return {\n        \"CSV\": \"text/csv\",\n        \"JSON\": \"text/json\",\n        \"PDF\": \"application/pdf\",\n        \"TXT\": \"text/plain\"\n      };\n    }\n  }\n}\n;\n  }\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"to-element\";\n  }\n  /**\n   * life cycle\n   */\n  constructor(delayRender = false) {\n    super();\n\n    // set tag for later use\n    this.tag = ToElement.tag;\n    // map our imported properties json to real props on the element\n    // @notice static getter of properties is built via tooling\n    // to edit modify src/ToElement-properties.json\n    let obj = ToElement.properties;\n    for (let p in obj) {\n      if (obj.hasOwnProperty(p)) {\n        if (this.hasAttribute(p)) {\n          this[p] = this.getAttribute(p);\n        } else {\n          this.setAttribute(p, obj[p].value);\n          this[p] = obj[p].value;\n        }\n      }\n    }\n    // optional queue for future use\n    this._queue = [];\n    this.template = document.createElement(\"template\");\n\n    this.attachShadow({ mode: \"open\" });\n\n    if (!delayRender) {\n      this.render();\n    }\n  }\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  connectedCallback() {\n    if (window.ShadyCSS) {\n      window.ShadyCSS.styleElement(this);\n    }\n\n    if (this._queue.length) {\n      this._processQueue();\n    }\n  }\n\n  _copyAttribute(name, to) {\n    const recipients = this.shadowRoot.querySelectorAll(to);\n    const value = this.getAttribute(name);\n    const fname = value == null ? \"removeAttribute\" : \"setAttribute\";\n    for (const node of recipients) {\n      node[fname](name, value);\n    }\n  }\n\n  _queueAction(action) {\n    this._queue.push(action);\n  }\n\n  _processQueue() {\n    this._queue.forEach(action => {\n      this[`_${action.type}`](action.data);\n    });\n\n    this._queue = [];\n  }\n\n  _setProperty({ name, value }) {\n    this[name] = value;\n  }\n\n  render() {\n    this.shadowRoot.innerHTML = null;\n    this.template.innerHTML = this.html;\n\n    if (window.ShadyCSS) {\n      window.ShadyCSS.prepareTemplate(this.template, this.tag);\n    }\n    this.shadowRoot.appendChild(this.template.content.cloneNode(true));\n  }\n\n  /**\n   * Take the element in scope and calculate it's styling\n   */\n  createNewElement() {\n    this._tmp = this.element;\n    let css = this.extractCSS(this._tmp).stylesheet;\n    let html = this._tmp.outerHTML;\n    return {\n      html: html,\n      css: css\n    };\n  }\n  /**\n   * Generate a UUID\n   */\n  generateUUID() {\n    return \"item-sss-ss-ss\".replace(/s/g, this._uuidPart);\n  }\n  _uuidPart() {\n    return Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  }\n  // based on https://stackoverflow.com/questions/22907735/get-the-computed-style-and-omit-defaults\n  /**\n   * get computed style for an element, excluding any default styles\n   */\n  getDefaultStyling(element, part = null) {\n    let tagName = element.tagName;\n    //  Create dummy iframe\n    var iframe = document.createElement(\"iframe\");\n    this.shadowRoot.appendChild(iframe);\n\n    //  Create element within the iframe's document\n    var iframeDocument = iframe.contentDocument;\n    var targetElement = iframeDocument.createElement(tagName);\n\n    iframeDocument.body.appendChild(targetElement);\n\n    //  Grab styling (CSSStyleDeclaration is live, and all values become \"\" after element removal)\n    var styling = iframe.contentWindow.getComputedStyle(targetElement);\n    var clonedStyling = {};\n\n    for (var i = 0, len = styling.length; i < len; i++) {\n      var property = styling[i];\n\n      clonedStyling[i] = property;\n      clonedStyling[property] = styling[property];\n    }\n    //  Remove iframe\n    this.shadowRoot.removeChild(iframe);\n    //  Return cloned styling\n    return clonedStyling;\n  }\n  getStylesWithoutDefaults(element, part = null) {\n    var allStyling = window.getComputedStyle(element, part);\n    var defaultStyling = this.getDefaultStyling(element.tagName);\n\n    var userStyling = {};\n\n    for (var i = 0, len = allStyling.length; i < len; i++) {\n      var property = allStyling[i];\n      var value = allStyling[property];\n      var defaultValue = defaultStyling[property];\n\n      if (\n        value != defaultValue &&\n        property !== \"transform-origin\" &&\n        property !== \"perspective-origin\"\n      ) {\n        userStyling[property] = value;\n      }\n    }\n\n    return userStyling;\n  }\n\n  // based on https://stackoverflow.com/questions/53613045/how-get-all-computed-css-properties-of-element-and-its-children-in-javascript\n\n  // Flatten an array\n  // https://stackoverflow.com/a/15030117/2054072\n  flatten(arr) {\n    return arr.reduce((flat, toFlatten) => {\n      return flat.concat(\n        Array.isArray(toFlatten) ? this.flatten(toFlatten) : toFlatten\n      );\n    }, []);\n  }\n\n  recursiveExtract(element) {\n    const id = this.generateUUID();\n    const styles = this.getStylesWithoutDefaults(element);\n    /*\n    // keep these later if we're able to figure out they work\n    const before = this.getStylesWithoutDefaults(element, \":before\");\n    const after = this.getStylesWithoutDefaults(element, \":after\");\n    const hover = this.getStylesWithoutDefaults(element, \":hover\");\n    const focus = this.getStylesWithoutDefaults(element, \":focus\");\n    */\n    // Now that we get the style, we can swap the id\n    element.setAttribute(\"id\", id);\n    let css = \"\";\n    for (var i in styles) {\n      css += `      ${i}: ${styles[i]};\\n`;\n    }\n    // The children are not a real array but a NodeList, we need to convert them\n    // so we can map over them easily\n    var children = Array.prototype.slice.call(element.children);\n    return [\n      {\n        id: id,\n        style: css\n      }\n    ].concat(children.map(this.recursiveExtract.bind(this)));\n  }\n\n  extractCSS(element) {\n    if (!element) {\n      return { elements: [], stylesheet: \"\" };\n    }\n\n    var raw = this.recursiveExtract(element);\n    var flat = this.flatten(raw);\n\n    return {\n      elements: flat,\n      stylesheet: flat.reduce(function(acc, cur) {\n        var style = \"    #\" + cur.id + \" {\\n\" + cur.style + \"    }\\n\";\n        return acc + style;\n      }, \"\")\n    };\n  }\n  /**\n   * convert dashed case to camel case\n   */\n  dashToCamel(str) {\n    return str.replace(/-([a-z])/g, function(g) {\n      return g[1].toUpperCase();\n    });\n  }\n  /**\n   * Output entire thing as a file.\n   */\n  contentToFile(html) {\n    return `\n/**\n * Copyright 2019 {Your compay}\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\n/**\n * \\`${this.name}\\`\n * \\`An auto generated element via to-element\\`\n *\n * @microcopy - language worth noting:\n *  - This element was made by someone else and then forked from their site\n *  - The point is not perfection but to rapidly generate boilerplate\n *\n * @originalSite - This code is based on work originally found on\n *   - ${this.sourceUrl}\n\n * @polymer\n */\nclass ${this.dashToCamel(this.name)} extends PolymerElement {\n  \n  // render function\n  static get template() {\n    return html\\`\n    ${html}\n    \\`;\n  }\n\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n      \"title\": {\n        \"name\": \"title\",\n        \"type\": String,\n        \"value\": \"\",\n      }\n    };\n  }\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   */\n  static get tag() {\n    return \"${this.name}\";\n  }\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  //connectedCallback() { super.connectedCallback(); }\n  /**\n   * life cycle, element is removed from the DOM\n   */\n  //disconnectedCallback() {super.disconnectedCallback();}\n}\nwindow.customElements.define(${this.dashToCamel(\n      this.name\n    )}.tag, ${this.dashToCamel(this.name)});\nexport { ${this.dashToCamel(this.name)} };\n    `;\n  }\n  /**\n   * Download a new component based on the selected element\n   */\n  downloadNewComponent(element, name) {\n    if (element) {\n      this.element = element;\n    }\n    if (name) {\n      this.name = name;\n    }\n    let tmp = this.createNewElement();\n    let html = `<style>\n${tmp.css}</style>\n    ${tmp.html}`;\n    let data = this.contentToFile(html);\n    this.downloadFromData(data, \"js\", this.name);\n  }\n  /**\n   * Converts the data to a blob then uses navigator to save blob if it’s available, otherwise\n   * creates an <a> with [download] attribute then simulates a click.\n   * @param {String} data - data to encode.\n   * @param {String} type - type of file to generate (i.e, JSON or CSV).\n   * @param {String} [name = 'download'] - file name to save data under.\n   * @param {Boolean} [newTab = true] - If false, downloads uri in existing tab. Otherwise,\n   * downloads in new tab.\n   */\n  downloadFromData(data, type, name = \"download\", newTab = true) {\n    const mimeType = this.fileTypes[type.toUpperCase()];\n    const blob = new Blob([decodeURIComponent(encodeURI(data))], {\n      type: mimeType\n    });\n    const filename = name + \".\" + type.toLowerCase();\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n      window.navigator.msSaveOrOpenBlob(blob, filename);\n    } else {\n      // Link elements have a download attribute which provides cross-platform\n      // download behavior supporting all but IE 11. This creates new link and then\n      // clicks it to initiate download.\n      const link = document.createElement(\"a\");\n      link.href = (window.URL || window.webkitURL).createObjectURL(blob);\n      link.download = filename;\n      link.target = newTab ? \"_blank\" : \"_self\";\n      this.shadowRoot.appendChild(link);\n      link.click();\n      this.shadowRoot.removeChild(link);\n    }\n  }\n\n  /**\n   * Opens a new tab at the URI so that download can be initiated from the page.\n   * @param {String} uri - The uri to open.\n   * @param {Boolean} [newTab = true] - If false, downloads uri in existing tab. Otherwise,\n   * downloads in new tab.\n   * @return {Boolean} Returns true.\n   */\n  downloadFromURI(uri, newTab = true) {\n    window.open(uri, newTab ? \"_blank\" : \"_self\");\n    return true; // NOTE: Returning true to prevent error in some browsers during download.\n  }\n\n  //static get observedAttributes() {\n  //  return [];\n  //}\n  // disconnectedCallback() {}\n  // attributeChangedCallback(attr, oldValue, newValue) {}\n}\nwindow.customElements.define(ToElement.tag, ToElement);\nexport { ToElement };\n"],"names":["ToElement","delayRender","tag","obj","properties","p","hasOwnProperty","_this","hasAttribute","getAttribute","setAttribute","value","_queue","template","document","createElement","attachShadow","mode","render","HTMLElement","Object","String","window","ShadyCSS","styleElement","this","length","_processQueue","name","to","recipients","shadowRoot","querySelectorAll","fname","action","push","forEach","_this2","type","data","innerHTML","html","prepareTemplate","appendChild","content","cloneNode","_tmp","element","css","extractCSS","stylesheet","outerHTML","replace","_uuidPart","Math","floor","random","toString","substring","tagName","iframe","iframeDocument","contentDocument","targetElement","body","styling","contentWindow","getComputedStyle","clonedStyling","i","len","property","removeChild","part","allStyling","defaultStyling","getDefaultStyling","userStyling","arr","reduce","flat","toFlatten","concat","Array","isArray","_this3","flatten","id","generateUUID","styles","getStylesWithoutDefaults","children","prototype","slice","call","style","map","recursiveExtract","bind","elements","raw","acc","cur","str","g","toUpperCase","sourceUrl","dashToCamel","tmp","createNewElement","contentToFile","downloadFromData","newTab","mimeType","fileTypes","blob","Blob","decodeURIComponent","encodeURI","filename","toLowerCase","navigator","msSaveOrOpenBlob","link","href","URL","webkitURL","createObjectURL","download","target","click","uri","open","customElements","define"],"mappings":"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"}