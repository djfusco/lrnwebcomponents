{"version":3,"file":"type-writer.umd.js","sources":["type-writer.umd.js"],"sourcesContent":["/**\n * Copyright 2020 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { LitElement, html, css } from \"lit-element/lit-element.js\";\nimport { IntersectionObserverMixin } from \"@lrnwebcomponents/intersection-element/lib/IntersectionObserverMixin.js\";\n/**\n * `type-writer`\n * `typewritter effect`\n * based off of https://github.com/PolymerEl/type-writer\n *\n * @demo demo/index.html\n * @element type-writer\n */\nclass TypeWriter extends IntersectionObserverMixin(LitElement) {\n  \n  //styles function\n  static get styles() {\n    return  [\n      css`\n:host {\n  display: inline-block;\n  margin: 0px 0.1em;\n}\n\n@keyframes flickerAnimation {\n  0%   { opacity: 1; }\n\n  50%  { opacity: 0; }\n\n  100% { opacity: 1; }\n}\n@-o-keyframes flickerAnimation {\n  0%   { opacity: 1; }\n\n  50%  { opacity: 0; }\n\n  100% { opacity: 1; }\n}\n@-moz-keyframes flickerAnimation {\n  0%   { opacity: 1; }\n\n  50%  { opacity: 0; }\n\n  100% { opacity: 1; }\n}\n@-webkit-keyframes flickerAnimation {\n  0%   { opacity: 1; }\n\n  50%  { opacity: 0; }\n\n  100% { opacity: 1; }\n}\n  \n#cursor {\n  display: none;\n  opacity: 0;\n}\n\n:host([typing]) #cursor {\n  display: inline;\n  -webkit-animation: flickerAnimation 1s infinite;\n  -moz-animation: flickerAnimation 1s infinite;\n  -o-animation: flickerAnimation 1s infinite;\n  animation: flickerAnimation 1s infinite;\n}\n      `\n    ];\n  }\n\n  // render function\n  render() {\n    return html`\n\n<span id=\"text\"></span><span id=\"cursor\">|</span>`;\n  }\n\n  // haxProperty definition\n  static get haxProperties() {\n    return {\n  \"canScale\": true,\n  \"canPosition\": true,\n  \"canEditSource\": false,\n  \"gizmo\": {\n    \"title\": \"Type writer\",\n    \"description\": \"typewritter effect\",\n    \"icon\": \"icons:android\",\n    \"color\": \"green\",\n    \"groups\": [\"Writer\"],\n    \"handles\": [\n      {\n        \"type\": \"todo:read-the-docs-for-usage\"\n      }\n    ],\n    \"meta\": {\n      \"author\": \"btopro\",\n      \"owner\": \"The Pennsylvania State University\"\n    }\n  },\n  \"settings\": {\n    \"quick\": [],\n    \"configure\": [\n      {\n        \"property\": \"delay\",\n        \"description\": \"\",\n        \"inputMethod\": \"textfield\",\n        \"required\": false,\n        \"icon\": \"icons:android\"\n      },\n      {\n        \"property\": \"cursorDuration\",\n        \"description\": \"\",\n        \"inputMethod\": \"textfield\",\n        \"required\": false,\n        \"icon\": \"icons:android\"\n      },\n      {\n        \"property\": \"text\",\n        \"description\": \"\",\n        \"inputMethod\": \"textfield\",\n        \"required\": false,\n        \"icon\": \"icons:android\"\n      },\n      {\n        \"property\": \"speed\",\n        \"description\": \"\",\n        \"inputMethod\": \"textfield\",\n        \"required\": false,\n        \"icon\": \"icons:android\"\n      },\n      {\n        \"property\": \"typing\",\n        \"description\": \"\",\n        \"inputMethod\": \"boolean\",\n        \"required\": false,\n        \"icon\": \"icons:android\"\n      }\n    ],\n    \"advanced\": []\n  }\n}\n;\n  }\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n  ...super.properties,\n  \n  \"delay\": {\n    \"type\": Number\n  },\n  \"cursorDuration\": {\n    \"type\": Number,\n    \"attribute\": \"cursor-duration\"\n  },\n  \"text\": {\n    \"type\": String\n  },\n  \"speed\": {\n    \"type\": Number\n  },\n  \"elementVisible\": {\n    \"type\": Boolean\n  },\n  \"eraseSpeed\": {\n    \"type\": Number,\n    \"attribute\": \"erase-speed\"\n  },\n  \"typing\": {\n    \"type\": Boolean,\n    \"reflect\": true\n  },\n  \"_length\": {\n    \"type\": Number\n  },\n  \"_oldText\": {\n    \"type\": String\n  }\n}\n;\n  }\n\n  /**\n   * Convention we use\n   */\n  static get tag() {\n    return \"type-writer\";\n  }\n\n  /**\n   * HTMLElement\n   */\n  constructor() {\n    super();\n    this.delay = 100;\n    this.cursorDuration = 0;\n    this.speed = 150;\n    this.eraseSpeed = 80;\n    this.typing = false;\n  }\n\n  _observeText(text, delay, elementVisible) {\n    if (text && delay !== undefined && elementVisible) {\n      if (this.shadowRoot.querySelector(\"#text\").textContent) {\n        this._oldText = this.shadowRoot.querySelector(\"#text\").textContent;\n        if (this.typing && this._cancel) {\n          clearTimeout(this._cancel);\n          this._cancel = null;\n        }\n        return this.erase();\n      }\n      this._length = 0;\n      setTimeout(() => {\n        this.type();\n      }, this.delay);\n    }\n  }\n\n  type() {\n    this.typing = true;\n    this.shadowRoot.querySelector(\"#text\").textContent = this.text.substr(\n      0,\n      this._length++\n    );\n    if (this._length < this.text.length + 1) {\n      this._cancel = setTimeout(() => {\n        this.type();\n      }, this.speed + ((Math.random() - 0.5) * this.speed) / 2);\n      return;\n    }\n    setTimeout(() => {\n      this.typing = false;\n      this.dispatchEvent(\n        new CustomEvent(\"type-writer-end\", {\n          detail: this.text,\n          bubbles: true,\n          composed: true\n        })\n      );\n    }, this.cursorDuration);\n  }\n\n  erase() {\n    this.typing = true;\n    this.shadowRoot.querySelector(\"#text\").textContent = this._oldText.substr(\n      0,\n      this._length--\n    );\n    if (this._length >= 0) {\n      this._cancel = setTimeout(() => {\n        this.erase();\n      }, this.eraseSpeed || this.speed);\n      return;\n    }\n    this.type();\n  }\n  /**\n   * LitElement life cycle - property changed\n   */\n  updated(changedProperties) {\n    changedProperties.forEach((oldValue, propName) => {\n      if ([\"text\", \"delay\", \"elementVisible\"].includes(propName)) {\n        this._observeText(this.text, this.delay, this.elementVisible);\n      }\n    });\n  }\n}\ncustomElements.define(TypeWriter.tag, TypeWriter);\nexport { TypeWriter };\n"],"names":["TypeWriter","delay","cursorDuration","speed","eraseSpeed","typing","IntersectionObserverMixin","LitElement","html","css","Number","String","Boolean","text","elementVisible","undefined","this","shadowRoot","querySelector","textContent","_oldText","_cancel","clearTimeout","erase","_length","setTimeout","_this2","type","substr","length","_this3","Math","random","dispatchEvent","CustomEvent","detail","bubbles","composed","_this4","changedProperties","forEach","oldValue","propName","includes","_this5","_observeText","customElements","define","tag"],"mappings":"yyFAcMA,yKAoLGC,MAAQ,MACRC,eAAiB,IACjBC,MAAQ,MACRC,WAAa,KACbC,QAAS,gPAxLOC,4BAA0BC,0DA0DxCC,mDAtDC,CACNC,wDA4DK,WACG,eACG,iBACE,QACR,OACE,0BACM,0BACP,sBACC,eACC,CAAC,kBACA,CACT,MACU,sCAGJ,QACI,eACD,+CAGD,OACD,aACI,CACX,UACc,oBACG,eACA,sBACH,OACJ,iBAEV,UACc,6BACG,eACA,sBACH,OACJ,iBAEV,UACc,mBACG,eACA,sBACH,OACJ,iBAEV,UACc,oBACG,eACA,sBACH,OACJ,iBAEV,UACc,qBACG,eACA,oBACH,OACJ,2BAGA,+aAUL,MACCC,uBAEQ,MACRA,iBACK,wBAEP,MACEC,cAED,MACCD,uBAEQ,MACRE,oBAEI,MACJF,iBACK,sBAEL,MACAE,iBACG,WAEF,MACDF,iBAEE,MACFC,4CAUD,0DAeIE,EAAMZ,EAAOa,iBACpBD,QAAkBE,IAAVd,GAAuBa,EAAgB,IAC7CE,KAAKC,WAAWC,cAAc,SAASC,wBACpCC,SAAWJ,KAAKC,WAAWC,cAAc,SAASC,YACnDH,KAAKX,QAAUW,KAAKK,UACtBC,aAAaN,KAAKK,cACbA,QAAU,MAEVL,KAAKO,aAETC,QAAU,EACfC,WAAW,WACTC,EAAKC,QACJX,KAAKf,uDAKLI,QAAS,OACTY,WAAWC,cAAc,SAASC,YAAcH,KAAKH,KAAKe,OAC7D,EACAZ,KAAKQ,WAEHR,KAAKQ,QAAUR,KAAKH,KAAKgB,OAAS,OAC/BR,QAAUI,WAAW,WACxBK,EAAKH,QACJX,KAAKb,OAAU4B,KAAKC,SAAW,IAAOhB,KAAKb,MAAS,GAGzDsB,WAAW,WACTK,EAAKzB,QAAS,EACdyB,EAAKG,cACH,IAAIC,YAAY,kBAAmB,CACjCC,OAAQL,EAAKjB,KACbuB,SAAS,EACTC,UAAU,MAGbrB,KAAKd,gEAIHG,QAAS,OACTY,WAAWC,cAAc,SAASC,YAAcH,KAAKI,SAASQ,OACjE,EACAZ,KAAKQ,WAEHR,KAAKQ,SAAW,OACbH,QAAUI,WAAW,WACxBa,EAAKf,SACJP,KAAKZ,YAAcY,KAAKb,YAGxBwB,uCAKCY,cACNA,EAAkBC,QAAQ,SAACC,EAAUC,GAC/B,CAAC,OAAQ,QAAS,kBAAkBC,SAASD,IAC/CE,EAAKC,aAAaD,EAAK/B,KAAM+B,EAAK3C,MAAO2C,EAAK9B,2BAKtDgC,eAAeC,OAAO/C,EAAWgD,IAAKhD"}