{"version":3,"file":"task-list.umd.js","sources":["task-list.umd.js"],"sourcesContent":["import { LitElement, html, css } from \"lit-element/lit-element.js\";\nimport { SchemaBehaviors } from \"@lrnwebcomponents/schema-behaviors/schema-behaviors.js\";\n/**\n * `task-list`\n * Visual listing of tasks with different design components that is\n * OER Schema capable!\n * @demo demo/index.html\n * @microcopy - the mental model for this element\n * - task - a singular thing to accomplish\n * @element task-list\n */\nclass TaskList extends SchemaBehaviors(LitElement) {\n  /**\n   * LitElement constructable styles enhancement\n   */\n  static get styles() {\n    return [\n      css`\n        :host {\n          display: block;\n          border: var(--task-list-border, 1px solid #eeeeee);\n          font-size: var(--task-list-font-size, 18px);\n          padding: var(--task-list-padding, 16px);\n        }\n      `\n    ];\n  }\n  render() {\n    return html`\n      <h3><span property=\"oer:name\">${this.name}</span></h3>\n      <ol>\n        ${this.tasks.map(\n          task => html`\n            <li>\n              ${task.link\n                ? html`\n                    <a href=\"${task.link}\" property=\"oer:task\">${task.name}</a>\n                  `\n                : html`\n                    <span property=\"oer:task\">${task.name}</span>\n                  `}\n            </li>\n          `\n        )}\n      </ol>\n    `;\n  }\n\n  static get tag() {\n    return \"task-list\";\n  }\n  static get properties() {\n    return {\n      ...super.properties,\n      /**\n       * Name of this task list\n       */\n      name: {\n        type: String\n      },\n      /**\n       * Related Resource ID\n       */\n      relatedResource: {\n        type: String,\n        attribute: \"related-resource\"\n      },\n      /**\n       * Task list\n       */\n      tasks: {\n        type: Array\n      },\n      _resourceLink: {\n        type: Object\n      }\n    };\n  }\n  constructor() {\n    super();\n    this.tasks = [];\n    this.name = \"Steps to completion\";\n  }\n  updated(changedProperties) {\n    changedProperties.forEach((oldValue, propName) => {\n      let notifiedProps = [\"tasks\"];\n      if (notifiedProps.includes(propName)) {\n        // notify\n        let eventName = `${propName\n          .replace(/([a-z0-9]|(?=[A-Z]))([A-Z])/g, \"$1-$2\")\n          .toLowerCase()}-changed`;\n        this.dispatchEvent(\n          new CustomEvent(eventName, {\n            detail: {\n              value: this[propName]\n            }\n          })\n        );\n      }\n      if (propName == \"relatedResource\") {\n        this._resourceLink = this._generateResourceLink(this[propName]);\n      }\n    });\n  }\n  _generateResourceLink(relatedResource) {\n    if (this._resourceLink) {\n      document.head.removeChild(this._resourceLink);\n    }\n    let link = document.createElement(\"link\");\n    link.setAttribute(\"property\", \"oer:forComponent\");\n    link.setAttribute(\"content\", relatedResource);\n    document.head.appendChild(link);\n    return link;\n  }\n  firstUpdated() {\n    setTimeout(() => {\n      this.setAttribute(\"typeof\", \"oer:SupportingMaterial\");\n    }, 0);\n  }\n  static get haxProperties() {\n    return {\n      canScale: true,\n      canPosition: true,\n      canEditSource: false,\n      gizmo: {\n        title: \"Task list\",\n        description: \"A list of tasks which is an ordered list\",\n        icon: \"icons:list\",\n        color: \"orange\",\n        groups: [\"Content\", \"Instructional\"],\n        handles: [],\n        meta: {\n          author: \"ELMS:LN\"\n        }\n      },\n      settings: {\n        quick: [\n          {\n            property: \"name\",\n            title: \"Name\",\n            description: \"Name of the list\",\n            inputMethod: \"textfield\",\n            icon: \"editor:title\"\n          },\n          {\n            property: \"relatedResource\",\n            title: \"Related resource\",\n            description: \"A reference to the related Schema resource\",\n            inputMethod: \"textfield\",\n            icon: \"editor:title\"\n          }\n        ],\n        configure: [\n          {\n            property: \"name\",\n            title: \"Name\",\n            description: \"Name of the list\",\n            inputMethod: \"textfield\",\n            icon: \"editor:title\"\n          },\n          {\n            property: \"relatedResource\",\n            title: \"Related resource\",\n            description: \"A reference to the related Schema resource\",\n            inputMethod: \"textfield\",\n            icon: \"editor:title\"\n          },\n          {\n            property: \"tasks\",\n            title: \"Tasks\",\n            description: \"The tasks to be completed\",\n            inputMethod: \"array\",\n            itemLabel: \"label\",\n            properties: [\n              {\n                property: \"name\",\n                title: \"Name\",\n                description: \"Name of the task\",\n                inputMethod: \"textfield\",\n                required: true\n              },\n              {\n                property: \"link\",\n                title: \"Link\",\n                description: \"Optional link\",\n                inputMethod: \"textfield\"\n              }\n            ]\n          }\n        ],\n        advanced: []\n      },\n      saveOptions: {\n        unsetAttributes: [\"_resource-link\"]\n      }\n    };\n  }\n}\nwindow.customElements.define(TaskList.tag, TaskList);\nexport { TaskList };\n"],"names":["TaskList","tasks","name","SchemaBehaviors","LitElement","html","this","map","task","link","css","type","String","relatedResource","attribute","Array","_resourceLink","Object","changedProperties","forEach","oldValue","propName","includes","eventName","replace","toLowerCase","_this2","dispatchEvent","CustomEvent","detail","value","_generateResourceLink","document","head","removeChild","createElement","setAttribute","appendChild","setTimeout","_this3","canScale","canPosition","canEditSource","gizmo","title","description","icon","color","groups","handles","meta","author","settings","quick","property","inputMethod","configure","itemLabel","properties","required","advanced","saveOptions","unsetAttributes","window","customElements","define","tag"],"mappings":"knFAWMA,yKAqEGC,MAAQ,KACRC,KAAO,oQAtEOC,kBAAgBC,0DAiB5BC,WAC2BC,KAAKJ,KAEjCI,KAAKL,MAAMM,IACX,SAAAC,UAAQH,WAEFG,EAAKC,KACHJ,WACaG,EAAKC,KAA6BD,EAAKN,MAEpDG,WAC8BG,EAAKN,iDAvB1C,CACLQ,8CAgCK,gbAQLR,KAAM,CACJS,KAAMC,QAKRC,gBAAiB,CACfF,KAAMC,OACNE,UAAW,oBAKbb,MAAO,CACLU,KAAMI,OAERC,cAAe,CACbL,KAAMM,iDASJC,cACNA,EAAkBC,QAAQ,SAACC,EAAUC,MACf,CAAC,SACHC,SAASD,GAAW,KAEhCE,YAAeF,EAChBG,QAAQ,+BAAgC,SACxCC,0BACHC,EAAKC,cACH,IAAIC,YAAYL,EAAW,CACzBM,OAAQ,CACNC,MAAOJ,EAAKL,OAKJ,mBAAZA,IACFK,EAAKV,cAAgBU,EAAKK,sBAAsBL,EAAKL,qDAIrCR,GAChBP,KAAKU,eACPgB,SAASC,KAAKC,YAAY5B,KAAKU,mBAE7BP,EAAOuB,SAASG,cAAc,eAClC1B,EAAK2B,aAAa,WAAY,oBAC9B3B,EAAK2B,aAAa,UAAWvB,GAC7BmB,SAASC,KAAKI,YAAY5B,GACnBA,oDAGP6B,WAAW,WACTC,EAAKH,aAAa,SAAU,2BAC3B,iDAGI,CACLI,UAAU,EACVC,aAAa,EACbC,eAAe,EACfC,MAAO,CACLC,MAAO,YACPC,YAAa,2CACbC,KAAM,aACNC,MAAO,SACPC,OAAQ,CAAC,UAAW,iBACpBC,QAAS,GACTC,KAAM,CACJC,OAAQ,YAGZC,SAAU,CACRC,MAAO,CACL,CACEC,SAAU,OACVV,MAAO,OACPC,YAAa,mBACbU,YAAa,YACbT,KAAM,gBAER,CACEQ,SAAU,kBACVV,MAAO,mBACPC,YAAa,6CACbU,YAAa,YACbT,KAAM,iBAGVU,UAAW,CACT,CACEF,SAAU,OACVV,MAAO,OACPC,YAAa,mBACbU,YAAa,YACbT,KAAM,gBAER,CACEQ,SAAU,kBACVV,MAAO,mBACPC,YAAa,6CACbU,YAAa,YACbT,KAAM,gBAER,CACEQ,SAAU,QACVV,MAAO,QACPC,YAAa,4BACbU,YAAa,QACbE,UAAW,QACXC,WAAY,CACV,CACEJ,SAAU,OACVV,MAAO,OACPC,YAAa,mBACbU,YAAa,YACbI,UAAU,GAEZ,CACEL,SAAU,OACVV,MAAO,OACPC,YAAa,gBACbU,YAAa,gBAKrBK,SAAU,IAEZC,YAAa,CACXC,gBAAiB,CAAC,6BAK1BC,OAAOC,eAAeC,OAAOjE,EAASkE,IAAKlE"}