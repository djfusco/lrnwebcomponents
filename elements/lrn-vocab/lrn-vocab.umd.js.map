{"version":3,"file":"lrn-vocab.umd.js","sources":["lrn-vocab.umd.js"],"sourcesContent":["/**\n * Copyright 2019 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { LitElement, html, css } from \"lit-element/lit-element.js\";\nimport { SchemaBehaviors } from \"@lrnwebcomponents/schema-behaviors/schema-behaviors.js\";\nimport \"@lrnwebcomponents/simple-modal/simple-modal.js\";\n/**\n`lrn-vocab`\nVocabulary term with visual treatment and semantic meaning.\n\n* @demo demo/index.html\n*/\nclass LrnVocab extends SchemaBehaviors(LitElement) {\n  /**\n   * LitElement constructable styles enhancement\n   */\n  static get styles() {\n    return [\n      css`\n        :host {\n          display: inline;\n          --lrn-vocab-border: 1px dashed #ccc;\n        }\n        button {\n          text-transform: none;\n          min-width: unset;\n          margin: 0;\n          position: relative;\n          top: 0px;\n          border-radius: 0;\n          border-bottom: var(--lrn-vocab-border);\n          background: #f5f5f5;\n          font-size: 1.1em;\n          padding: 2px;\n        }\n        button:hover {\n          background: #bbdefb;\n          border-bottom: 1px dashed #2196f3;\n        }\n      `\n    ];\n  }\n  constructor() {\n    super();\n    setTimeout(() => {\n      this.addEventListener(\"click\", this.openDialog.bind(this));\n    }, 0);\n  }\n  render() {\n    return html`\n      <button>${this.term}</button>\n    `;\n  }\n\n  static get tag() {\n    return \"lrn-vocab\";\n  }\n  static get properties() {\n    return {\n      ...super.properties,\n      term: {\n        type: String,\n        reflect: true\n      }\n    };\n  }\n  /**\n   * Request the singleton dialog open\n   */\n  openDialog(e) {\n    let c = document.createElement(\"div\");\n    for (var id in this.children) {\n      if (this.children[id].cloneNode) {\n        c.appendChild(this.children[id].cloneNode(true));\n      }\n    }\n    const evt = new CustomEvent(\"simple-modal-show\", {\n      bubbles: true,\n      cancelable: true,\n      composed: true,\n      detail: {\n        title: this.term,\n        elements: {\n          content: c\n        },\n        styles: {\n          \"--simple-modal-width\": \"50vw\",\n          \"--simple-modal-height\": \"50vh\"\n        },\n        invokedBy: this\n      }\n    });\n    this.dispatchEvent(evt);\n  }\n  /**\n   * Attached life cycle\n   */\n  firstUpdated(changedProperties) {\n    if (super.firstUpdated) {\n      super.firstUpdated(changedProperties);\n    }\n    window.SimpleModal.requestAvailability();\n  }\n  static get haxProperties() {\n    import(\"@lrnwebcomponents/hax-iconset/hax-iconset.js\");\n    return {\n      canScale: false,\n      canPosition: false,\n      canEditSource: false,\n      gizmo: {\n        title: \"Vocab\",\n        description: \"Vocabulary term\",\n        icon: \"hax:vocab\",\n        color: \"red\",\n        groups: [\"Vocab\"],\n        handles: [\n          {\n            type: \"inline\",\n            text: \"term\"\n          }\n        ],\n        meta: {\n          author: \"ELMS:LN\",\n          inlineOnly: true\n        }\n      },\n      settings: {\n        quick: [\n          {\n            property: \"term\",\n            title: \"Term\",\n            inputMethod: \"textfield\",\n            icon: \"editor:title\",\n            required: true\n          }\n        ],\n        configure: [\n          {\n            property: \"term\",\n            title: \"Term\",\n            inputMethod: \"textfield\",\n            icon: \"editor:title\",\n            required: true\n          },\n          {\n            slot: \"\",\n            title: \"Contents\",\n            description:\n              \"The definitition to display when the term is clicked.\",\n            inputMethod: \"code-editor\",\n            required: true\n          }\n        ],\n        advanced: []\n      }\n    };\n  }\n}\nwindow.customElements.define(LrnVocab.tag, LrnVocab);\nexport { LrnVocab };\n"],"names":["LrnVocab","setTimeout","addEventListener","_this","openDialog","bind","SchemaBehaviors","LitElement","css","html","this","term","e","c","document","createElement","id","children","cloneNode","appendChild","evt","CustomEvent","bubbles","cancelable","composed","detail","title","elements","content","styles","invokedBy","dispatchEvent","changedProperties","window","SimpleModal","requestAvailability","type","String","reflect","canScale","canPosition","canEditSource","gizmo","description","icon","color","groups","handles","text","meta","author","inlineOnly","settings","quick","property","inputMethod","required","configure","slot","advanced","customElements","define","tag"],"mappings":"mgFAaMA,gOAgCFC,WAAW,aACJC,iBAAiB,QAASC,EAAKC,WAAWC,aAC9C,iPAlCgBC,kBAAgBC,4DAK5B,CACLC,2DA+BKC,WACKC,KAAKC,yCAmBRC,OACLC,EAAIC,SAASC,cAAc,WAC1B,IAAIC,KAAMN,KAAKO,SACdP,KAAKO,SAASD,GAAIE,WACpBL,EAAEM,YAAYT,KAAKO,SAASD,GAAIE,WAAU,QAGxCE,EAAM,IAAIC,YAAY,oBAAqB,CAC/CC,SAAS,EACTC,YAAY,EACZC,UAAU,EACVC,OAAQ,CACNC,MAAOhB,KAAKC,KACZgB,SAAU,CACRC,QAASf,GAEXgB,OAAQ,wBACkB,+BACC,QAE3BC,UAAWpB,aAGVqB,cAAcX,wCAKRY,0FAEUA,GAErBC,OAAOC,YAAYC,0DA9CZ,gbAKLxB,KAAM,CACJyB,KAAMC,OACNC,SAAS,yDA0CN,gDACA,CACLC,UAAU,EACVC,aAAa,EACbC,eAAe,EACfC,MAAO,CACLhB,MAAO,QACPiB,YAAa,kBACbC,KAAM,YACNC,MAAO,MACPC,OAAQ,CAAC,SACTC,QAAS,CACP,CACEX,KAAM,SACNY,KAAM,SAGVC,KAAM,CACJC,OAAQ,UACRC,YAAY,IAGhBC,SAAU,CACRC,MAAO,CACL,CACEC,SAAU,OACV5B,MAAO,OACP6B,YAAa,YACbX,KAAM,eACNY,UAAU,IAGdC,UAAW,CACT,CACEH,SAAU,OACV5B,MAAO,OACP6B,YAAa,YACbX,KAAM,eACNY,UAAU,GAEZ,CACEE,KAAM,GACNhC,MAAO,WACPiB,YACE,wDACFY,YAAa,cACbC,UAAU,IAGdG,SAAU,cAKlB1B,OAAO2B,eAAeC,OAAO7D,EAAS8D,IAAK9D"}