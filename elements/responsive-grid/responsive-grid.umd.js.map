{"version":3,"file":"responsive-grid.umd.js","sources":["lib/responsive-grid-col.js","lib/responsive-grid-clear.js","lib/responsive-grid-row.js"],"sourcesContent":["import { LitElement, html, css } from \"lit-element/lit-element.js\";\n/**    \n`responsive-grid-col`\nA column for the responsive grid\n* @demo demo/index.html\n@microcopy - the mental model for this element\n  Example: \n  <responsive-grid-col \n    xs=\"1\"    //the number of columns on an extra-small-width screen\n    md=\"2\"    //the number of columns on a small-width screen\n    lg=\"3\"    //the number of columns on a medium-width screen\n    xl=\"4\">   //the number of columns on a large-width screen\n    CONTENT HERE\n  </responsive-grid-col>\n*/\nclass ResponsiveGridCol extends LitElement {\n  /**\n   * LitElement constructable styles enhancement\n   */\n  static get styles() {\n    return [\n      css`\n        :host {\n          position: relative;\n          min-height: 1px;\n          float: left;\n        }\n        :host:after {\n          clear: both;\n        }\n        #col-inner {\n          padding-left: var(--responsive-grid-col-inner-padding-left, 15px);\n          padding-right: var(--responsive-grid-col-inner-padding-right, 15px);\n        }\n        /* Hide Print-Only on Screen */\n        @media screen {\n          :host([print-only]) {\n            display: none;\n          }\n        }\n        /* Hide Screen-Only on Print */\n        @media print {\n          :host([screen-only]) {\n            display: none;\n          }\n        }\n      `\n    ];\n  }\n  render() {\n    return html`\n      <div id=\"col-inner\"><slot></slot></div>\n    `;\n  }\n\n  static get tag() {\n    return \"responsive-grid-col\";\n  }\n  constructor() {\n    super();\n    this.xl = 1;\n    this.lg = 1;\n    this.md = 1;\n    this.sm = 1;\n    this.xs = 1;\n  }\n  static get properties() {\n    return {\n      /**\n       * the width when viewed on an extra large screen\n       */\n      xl: {\n        type: Number\n      },\n      /**\n       * the width when viewed on a large screen\n       */\n      lg: {\n        type: Number\n      },\n      /**\n       * the width when viewed on a medium screen\n       */\n      md: {\n        type: Number\n      },\n      /**\n       * the width when viewed on a small screen\n       */\n      sm: {\n        type: Number\n      },\n      /**\n       * the width when viewed on an extra-small screen\n       */\n      xs: {\n        type: Number\n      }\n    };\n  }\n}\nwindow.customElements.define(ResponsiveGridCol.tag, ResponsiveGridCol);\nexport { ResponsiveGridCol };\n","import { LitElement, html, css } from \"lit-element/lit-element.js\";\n/**  \n`responsive-grid-clear`\nA clearumn for the responsive grid\n@microcopy - the mental model for this element\n  Example: \n  <responsive-grid-clear \n    xs    //clears the floated columns on an extra small-width screen\n    sm    //clears the floated columns on a small-width screen\n    md    //clears the floated columns on a medium-width screen\n    lg/>  //clears the floated columns on a large-width screen\n*/\nclass ResponsiveGridClear extends LitElement {\n  /**\n   * LitElement constructable styles enhancement\n   */\n  static get styles() {\n    return [\n      css`\n        :host {\n          display: none;\n          clear: both;\n        }\n      `\n    ];\n  }\n  render() {\n    return html``;\n  }\n\n  static get tag() {\n    return \"responsive-grid-clear\";\n  }\n  constructor() {\n    super();\n    this.xl = false;\n    this.lg = false;\n    this.md = false;\n    this.sm = false;\n    this.xs = false;\n  }\n  static get properties() {\n    return {\n      /**\n       * clear the float and force a new worw on an extra-large screen?\n       */\n      xl: {\n        type: Boolean\n      },\n      /**\n       * clear the float and force a new worw on a large screen?\n       */\n      lg: {\n        type: Boolean\n      },\n      /**\n       * clear the float and force a new worw on a medium screen?\n       */\n      md: {\n        type: Boolean\n      },\n      /**\n       * clear the float and force a new worw on a small screen?\n       */\n      sm: {\n        type: Boolean\n      },\n      /**\n       * clear the float and force a new worw on an extra-small screen?\n       */\n      xs: {\n        type: Boolean\n      }\n    };\n  }\n}\nwindow.customElements.define(ResponsiveGridClear.tag, ResponsiveGridClear);\nexport { ResponsiveGridClear };\n","import { LitElement, html, css } from \"lit-element/lit-element.js\";\nimport \"@lrnwebcomponents/responsive-utility/responsive-utility.js\";\nimport \"./responsive-grid-col.js\";\nimport \"./responsive-grid-clear.js\";\n/**   \n`responsive-grid-row`\nA LRN element\n\n* @demo demo/index.html\n\n@microcopy - the mental model for this element\n Example:\n  <responsive-grid-row \n    sm=\"600\"                      //custom breakpoint for small screens\n    md=\"900\"                      //custom breakpoint for medium screens\n    sm=\"1200\"                     //custom breakpoint for large screens\n    md=\"1800\"                     //custom breakpoint for extra-large screens\n    responsive-to-parent=\"true\">  //make responsive to parent container instead of window/screen\n    <responsive-grid-col xl=\"2\" lg=\"3\" md=\"4\" sm=\"6\" xs=\"12\">Content</responsive-grid-col>\n    <responsive-grid-col xl=\"2\" lg=\"3\" md=\"4\" sm=\"6\" xs=\"12\">Content</responsive-grid-col>\n    <responsive-grid-clear sm/>\n    <responsive-grid-col xl=\"2\" lg=\"3\" md=\"4\" sm=\"6\" xs=\"12\">Content</responsive-grid-col>\n    <responsive-grid-col xl=\"2\" lg=\"3\" md=\"4\" sm=\"6\" xs=\"12\">Content</responsive-grid-col>\n  </responsive-grid-row>\n\n*/\nclass ResponsiveGridRow extends LitElement {\n  /**\n   * LitElement constructable styles enhancement\n   */\n  static get styles() {\n    return [\n      css`\n        :host {\n          display: block;\n          width: 100%;\n          margin-right: auto;\n          margin-left: auto;\n          -webkit-box-sizing: border-box;\n          -moz-box-sizing: border-box;\n          box-sizing: border-box;\n        }\n        :host:before,\n        :host:after {\n          content: \" \";\n          display: table;\n          -webkit-box-sizing: border-box;\n          -moz-box-sizing: border-box;\n          box-sizing: border-box;\n        }\n        #row-inner {\n          margin-left: var(--responsive-grid-row-inner-margin-left, -15px);\n          margin-right: var(--responsive-grid-row-inner-margin-right, -15px);\n        }\n        :host #row-inner:before,\n        :host #row-inner:after {\n          content: \" \";\n          display: table;\n        }\n        :host #row-inner:after {\n          clear: both;\n        }\n        :host #row-inner:before,\n        :host #row-inner:after {\n          -webkit-box-sizing: border-box;\n          -moz-box-sizing: border-box;\n          box-sizing: border-box;\n        }\n        #row-inner[screen=\"xs\"] ::slotted(responsive-grid-clear[xs]),\n        #row-inner[screen=\"sm\"] ::slotted(responsive-grid-clear[sm]),\n        #row-inner[screen=\"md\"] ::slotted(responsive-grid-clear[md]),\n        #row-inner[screen=\"lg\"] ::slotted(responsive-grid-clear[lg]),\n        #row-inner[screen=\"xl\"] ::slotted(responsive-grid-clear[xl]) {\n          display: block;\n        }\n        #row-inner[screen=\"sm\"] ::slotted(responsive-grid-col[xs=\"0\"]),\n        #row-inner[screen=\"md\"] ::slotted(responsive-grid-col[sm=\"0\"]),\n        #row-inner[screen=\"lg\"] ::slotted(responsive-grid-col[md=\"0\"]),\n        #row-inner[screen=\"xl\"] ::slotted(responsive-grid-col[lg=\"0\"]) {\n          display: inline-block;\n        }\n        #row-inner[screen=\"xs\"] ::slotted(responsive-grid-col[xs=\"12\"]),\n        #row-inner[screen=\"sm\"] ::slotted(responsive-grid-col[sm=\"12\"]),\n        #row-inner[screen=\"md\"] ::slotted(responsive-grid-col[md=\"12\"]),\n        #row-inner[screen=\"lg\"] ::slotted(responsive-grid-col[lg=\"12\"]),\n        #row-inner[screen=\"xl\"] ::slotted(responsive-grid-col[xl=\"12\"]) {\n          width: 100%;\n        }\n        #row-inner[screen=\"xs\"] ::slotted(responsive-grid-col[xs=\"11\"]),\n        #row-inner[screen=\"sm\"] ::slotted(responsive-grid-col[sm=\"11\"]),\n        #row-inner[screen=\"md\"] ::slotted(responsive-grid-col[md=\"11\"]),\n        #row-inner[screen=\"lg\"] ::slotted(responsive-grid-col[lg=\"11\"]),\n        #row-inner[screen=\"xl\"] ::slotted(responsive-grid-col[xl=\"11\"]) {\n          width: 91.66666667%;\n        }\n        #row-inner[screen=\"xs\"] ::slotted(responsive-grid-col[xs=\"10\"]),\n        #row-inner[screen=\"sm\"] ::slotted(responsive-grid-col[sm=\"10\"]),\n        #row-inner[screen=\"md\"] ::slotted(responsive-grid-col[md=\"10\"]),\n        #row-inner[screen=\"lg\"] ::slotted(responsive-grid-col[lg=\"10\"]),\n        #row-inner[screen=\"xl\"] ::slotted(responsive-grid-col[xl=\"10\"]) {\n          width: 83.33333333%;\n        }\n        #row-inner[screen=\"xs\"] ::slotted(responsive-grid-col[xs=\"9\"]),\n        #row-inner[screen=\"sm\"] ::slotted(responsive-grid-col[sm=\"9\"]),\n        #row-inner[screen=\"md\"] ::slotted(responsive-grid-col[md=\"9\"]),\n        #row-inner[screen=\"lg\"] ::slotted(responsive-grid-col[lg=\"9\"]),\n        #row-inner[screen=\"xl\"] ::slotted(responsive-grid-col[xl=\"9\"]) {\n          width: 75%;\n        }\n        #row-inner[screen=\"xs\"] ::slotted(responsive-grid-col[xs=\"8\"]),\n        #row-inner[screen=\"sm\"] ::slotted(responsive-grid-col[sm=\"8\"]),\n        #row-inner[screen=\"md\"] ::slotted(responsive-grid-col[md=\"8\"]),\n        #row-inner[screen=\"lg\"] ::slotted(responsive-grid-col[lg=\"8\"]),\n        #row-inner[screen=\"xl\"] ::slotted(responsive-grid-col[xl=\"8\"]) {\n          width: 66.66666667%;\n        }\n        #row-inner[screen=\"xs\"] ::slotted(responsive-grid-col[xs=\"7\"]),\n        #row-inner[screen=\"sm\"] ::slotted(responsive-grid-col[sm=\"7\"]),\n        #row-inner[screen=\"md\"] ::slotted(responsive-grid-col[md=\"7\"]),\n        #row-inner[screen=\"lg\"] ::slotted(responsive-grid-col[lg=\"7\"]),\n        #row-inner[screen=\"xl\"] ::slotted(responsive-grid-col[xl=\"7\"]) {\n          width: 58.33333333%;\n        }\n        #row-inner[screen=\"xs\"] ::slotted(responsive-grid-col[xs=\"6\"]),\n        #row-inner[screen=\"sm\"] ::slotted(responsive-grid-col[sm=\"6\"]),\n        #row-inner[screen=\"md\"] ::slotted(responsive-grid-col[md=\"6\"]),\n        #row-inner[screen=\"lg\"] ::slotted(responsive-grid-col[lg=\"6\"]),\n        #row-inner[screen=\"xl\"] ::slotted(responsive-grid-col[xl=\"6\"]) {\n          width: 50%;\n        }\n        #row-inner[screen=\"xs\"] ::slotted(responsive-grid-col[xs=\"5\"]),\n        #row-inner[screen=\"sm\"] ::slotted(responsive-grid-col[sm=\"5\"]),\n        #row-inner[screen=\"md\"] ::slotted(responsive-grid-col[md=\"5\"]),\n        #row-inner[screen=\"lg\"] ::slotted(responsive-grid-col[lg=\"5\"]),\n        #row-inner[screen=\"xl\"] ::slotted(responsive-grid-col[xl=\"5\"]) {\n          width: 41.66666667%;\n        }\n        #row-inner[screen=\"xs\"] ::slotted(responsive-grid-col[xs=\"4\"]),\n        #row-inner[screen=\"sm\"] ::slotted(responsive-grid-col[sm=\"4\"]),\n        #row-inner[screen=\"md\"] ::slotted(responsive-grid-col[md=\"4\"]),\n        #row-inner[screen=\"lg\"] ::slotted(responsive-grid-col[lg=\"4\"]),\n        #row-inner[screen=\"xl\"] ::slotted(responsive-grid-col[xl=\"4\"]) {\n          width: 33.33333333%;\n        }\n        #row-inner[screen=\"xs\"] ::slotted(responsive-grid-col[xs=\"3\"]),\n        #row-inner[screen=\"sm\"] ::slotted(responsive-grid-col[sm=\"3\"]),\n        #row-inner[screen=\"md\"] ::slotted(responsive-grid-col[md=\"3\"]),\n        #row-inner[screen=\"lg\"] ::slotted(responsive-grid-col[lg=\"3\"]),\n        #row-inner[screen=\"xl\"] ::slotted(responsive-grid-col[xl=\"3\"]) {\n          width: 25%;\n        }\n        #row-inner[screen=\"xs\"] ::slotted(responsive-grid-col[xs=\"2\"]),\n        #row-inner[screen=\"sm\"] ::slotted(responsive-grid-col[sm=\"2\"]),\n        #row-inner[screen=\"md\"] ::slotted(responsive-grid-col[md=\"2\"]),\n        #row-inner[screen=\"lg\"] ::slotted(responsive-grid-col[lg=\"2\"]),\n        #row-inner[screen=\"xl\"] ::slotted(responsive-grid-col[xl=\"2\"]) {\n          width: 16.66666667%;\n        }\n        #row-inner[screen=\"xs\"] ::slotted(responsive-grid-col[xs=\"1\"]),\n        #row-inner[screen=\"sm\"] ::slotted(responsive-grid-col[sm=\"1\"]),\n        #row-inner[screen=\"md\"] ::slotted(responsive-grid-col[md=\"1\"]),\n        #row-inner[screen=\"lg\"] ::slotted(responsive-grid-col[lg=\"1\"]),\n        #row-inner[screen=\"xl\"] ::slotted(responsive-grid-col[xl=\"1\"]) {\n          width: 8.33333333%;\n        }\n        #row-inner[screen=\"xs\"] ::slotted(responsive-grid-col[xs=\"0\"]),\n        #row-inner[screen=\"sm\"] ::slotted(responsive-grid-col[sm=\"0\"]),\n        #row-inner[screen=\"md\"] ::slotted(responsive-grid-col[md=\"0\"]),\n        #row-inner[screen=\"lg\"] ::slotted(responsive-grid-col[lg=\"0\"]),\n        #row-inner[screen=\"xl\"] ::slotted(responsive-grid-col[xl=\"0\"]) {\n          display: none;\n        }\n        :host #row-inner ::slotted(* > #col-inner) {\n          padding: 0px;\n        }\n        :host #row-inner[gutter=\"1\"] ::slotted(* > #col-inner) {\n          padding: 5px;\n        }\n        :host #row-inner[gutter=\"2\"] ::slotted(* > #col-inner) {\n          padding: 10px;\n        }\n        :host #row-inner[gutter=\"3\"] ::slotted(* > #col-inner) {\n          padding: 15px;\n        }\n        :host #row-inner[gutter=\"4\"] ::slotted(* > #col-inner) {\n          padding: 20px;\n        }\n      `\n    ];\n  }\n  /**\n   * LitElement render\n   */\n  render() {\n    return html`\n      <responsive-utility\n        xs=\"${this.xs}\"\n        sm=\"${this.sm}\"\n        md=\"${this.md}\"\n        lg=\"${this.lg}\"\n        xl=\"${this.xl}\"\n        responsive-to-parent=\"${this.responsiveToParent}\"\n      >\n      </responsive-utility>\n      <div id=\"row-inner\" screen=\"${this.screen}\" gutter=\"${this.gutter}\">\n        <slot></slot>\n      </div>\n    `;\n  }\n  /**\n   * convention\n   */\n  static get tag() {\n    return \"responsive-grid-row\";\n  }\n  /**\n   * HTMLElement\n   */\n  constructor() {\n    super();\n    this.xl = null;\n    this.lg = null;\n    this.md = null;\n    this.sm = null;\n    this.xs = null;\n    this.gutter = 0;\n    this.responsiveToParent = false;\n    this.screen = \"xs\";\n    window.ResponsiveUtility.requestAvailability();\n  }\n  /**\n   * LitElement ready\n   */\n  firstUpdated() {\n    this.dispatchEvent(\n      new CustomEvent(\"responsive-element\", {\n        bubbles: true,\n        cancelable: true,\n        composed: true,\n        detail: {\n          element: this,\n          attribute: \"screen\",\n          relativeToParent: this.responsiveToParent\n        }\n      })\n    );\n  }\n  /**\n   * LitElement properties changed\n   */\n  updated(changedProperties) {\n    changedProperties.forEach((oldValue, propName) => {\n      if (propName == \"screen\") {\n        // notify\n        this.dispatchEvent(\n          new CustomEvent(\"screen-changed\", {\n            detail: {\n              value: this[propName]\n            }\n          })\n        );\n      }\n    });\n  }\n  static get properties() {\n    return {\n      /**\n       * Custom x-small breakpoint\n       */\n      xs: {\n        type: Number\n      },\n      /**\n       * Custom small breakpoint\n       */\n      sm: {\n        type: Number\n      },\n      /**\n       * Custom medium breakpoint\n       */\n      md: {\n        type: Number\n      },\n      /**\n       * Custom large breakpoint\n       */\n      lg: {\n        type: Number\n      },\n      /**\n       * Custom extra-large breakpoint\n       */\n      xl: {\n        type: Number\n      },\n      /**\n       * the gutter-level for the columns from 0-4\n       */\n      gutter: {\n        type: Number\n      },\n      /**\n       * make responsive based on a container instead of the window\n       */\n      responsiveToParent: {\n        type: Boolean,\n        reflect: true,\n        attribute: \"responsive-to-parent\"\n      },\n      /*\n       * screen size: xs, sm, md, lg, or xl\n       */\n      screen: {\n        type: String,\n        reflect: true\n      }\n    };\n  }\n}\nwindow.customElements.define(ResponsiveGridRow.tag, ResponsiveGridRow);\nexport { ResponsiveGridRow };\n"],"names":["ResponsiveGridCol","xl","lg","md","sm","xs","LitElement","html","css","type","Number","window","customElements","define","tag","ResponsiveGridClear","Boolean","ResponsiveGridRow","gutter","responsiveToParent","screen","ResponsiveUtility","requestAvailability","this","dispatchEvent","CustomEvent","bubbles","cancelable","composed","detail","element","attribute","relativeToParent","changedProperties","forEach","oldValue","propName","_this2","value","reflect","String"],"mappings":"0vEAeMA,8EA6CGC,GAAK,IACLC,GAAK,IACLC,GAAK,IACLC,GAAK,IACLC,GAAK,eAjDkBC,yDAmCrBC,mDA9BA,CACLC,8CAmCK,2EAWA,CAILP,GAAI,CACFQ,KAAMC,QAKRR,GAAI,CACFO,KAAMC,QAKRP,GAAI,CACFM,KAAMC,QAKRN,GAAI,CACFK,KAAMC,QAKRL,GAAI,CACFI,KAAMC,8NAKdC,OAAOC,eAAeC,OAAOb,EAAkBc,IAAKd,OCzF9Ce,8EAuBGd,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,eA3BoBC,yDAevBC,mDAVA,CACLC,8CAaK,6EAWA,CAILP,GAAI,CACFQ,KAAMO,SAKRd,GAAI,CACFO,KAAMO,SAKRb,GAAI,CACFM,KAAMO,SAKRZ,GAAI,CACFK,KAAMO,SAKRX,GAAI,CACFI,KAAMO,21PAKdL,OAAOC,eAAeC,OAAOE,EAAoBD,IAAKC,OClDhDE,8EAkMGhB,GAAK,OACLC,GAAK,OACLC,GAAK,OACLC,GAAK,OACLC,GAAK,OACLa,OAAS,IACTC,oBAAqB,IACrBC,OAAS,KACdT,OAAOU,kBAAkBC,mCA1MGhB,yDAwKrBC,WAEGgB,KAAKlB,GACLkB,KAAKnB,GACLmB,KAAKpB,GACLoB,KAAKrB,GACLqB,KAAKtB,GACasB,KAAKJ,mBAGDI,KAAKH,OAAmBG,KAAKL,+CA7KtD,CACLV,8CAqLK,yEAqBFgB,cACH,IAAIC,YAAY,qBAAsB,CACpCC,SAAS,EACTC,YAAY,EACZC,UAAU,EACVC,OAAQ,CACNC,QAASP,KACTQ,UAAW,SACXC,iBAAkBT,KAAKJ,uDAQvBc,cACNA,EAAkBC,QAAQ,SAACC,EAAUC,GACnB,UAAZA,GAEFC,EAAKb,cACH,IAAIC,YAAY,iBAAkB,CAChCI,OAAQ,CACNS,MAAOD,EAAKD,oDAQf,CAIL/B,GAAI,CACFI,KAAMC,QAKRN,GAAI,CACFK,KAAMC,QAKRP,GAAI,CACFM,KAAMC,QAKRR,GAAI,CACFO,KAAMC,QAKRT,GAAI,CACFQ,KAAMC,QAKRQ,OAAQ,CACNT,KAAMC,QAKRS,mBAAoB,CAClBV,KAAMO,QACNuB,SAAS,EACTR,UAAW,wBAKbX,OAAQ,CACNX,KAAM+B,OACND,SAAS,aAKjB5B,OAAOC,eAAeC,OAAOI,EAAkBH,IAAKG"}