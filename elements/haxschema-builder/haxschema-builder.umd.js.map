{"version":3,"file":"haxschema-builder.umd.js","sources":["haxschema-builder.umd.js"],"sourcesContent":["/**\n * Copyright 2019 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { LitElement, html, css } from \"lit-element/lit-element.js\";\nimport \"@lrnwebcomponents/json-editor/json-editor.js\";\nimport \"@lrnwebcomponents/code-editor/code-editor.js\";\nimport \"@vaadin/vaadin-split-layout/vaadin-split-layout.js\";\nimport \"@polymer/paper-button/paper-button.js\";\nimport \"@lrnwebcomponents/hax-body/lib/hax-schema-form.js\";\nimport { HAXWiring } from \"@lrnwebcomponents/hax-body-behaviors/hax-body-behaviors.js\";\n/**\n * `haxschema-builder`\n * `dynamically build and visualize HAXschema`\n * @demo demo/index.html\n * @element haxschema-builder\n */\nclass HaxschemaBuilder extends LitElement {\n  \n  //styles function\n  static get styles() {\n    return  [\n      \n      css`\n:host {\n  display: block;\n}\n\n:host([hidden]) {\n  display: none;\n}\ncode-editor {\n  height: 500px;\n}\n      `\n    ];\n  }\n  // render function\n  render() {\n    return html`\n\n<vaadin-split-layout>\n  <div>\n    <paper-button raised noink @click=\"${this.addConfigure}\">Add to configure</paper-button>\n    <paper-button raised noink @click=\"${this.addAdvanced}\">Add to advanced</paper-button>\n    <code-editor id=\"code\"  @value-changed=\"${this._editorDataChanged}\" .value=\"{}\" language=\"json\"></code-editor>\n    <json-editor id=\"json\" label=\"JSON\" @value-changed=\"${this.__haxSchemaChanged}\" value=\"${this.haxSchema}\"></json-editor>\n  </div>\n  <div>\n    <hax-schema-form id=\"form\" value=\"${this.value}\" @value-changed=\"${this.__valueChanged}\"></hax-schema-form>\n  </div>\n</vaadin-split-layout>`;\n  }\n\n  // haxProperty definition\n  static get haxProperties() {\n    return {\n  \"canScale\": true,\n  \"canPosition\": true,\n  \"canEditSource\": true,\n  \"gizmo\": {\n    \"title\": \"Haxschema builder\",\n    \"description\": \"dynamically build and visualize HAXschema\",\n    \"icon\": \"icons:android\",\n    \"color\": \"green\",\n    \"groups\": [\"Builder\"],\n    \"handles\": [],\n    \"meta\": {\n      \"author\": \"btopro\",\n      \"owner\": \"The Pennsylvania State University\"\n    }\n  },\n  \"settings\": {\n    \"quick\": [],\n    \"configure\": [\n      {\n        \"property\": \"source\",\n        \"description\": \"\",\n        \"inputMethod\": \"textfield\",\n        \"required\": true,\n        \"icon\": \"icons:link\",\n        \"validationType\": \"url\"\n      }\n    ],\n    \"advanced\": []\n  }\n}\n;\n  }\n  // properties available to the custom element for data binding\n    static get properties() {\n    return {\n  \n  ...super.properties,\n  \n  /**\n   * schema to extract for whatever you wanted it for\n   */\n  \"haxSchema\": {\n    \"type\": String,\n    \"attribute\": \"hax-schema\"\n  },\n  /**\n   * Optional remote source to pull in\n   */\n  \"source\": {\n    \"type\": String\n  },\n  /**\n   * String based value passed between the elements to stitch together\n   */\n  \"value\": {\n    \"type\": String\n  }\n}\n;\n  }\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"haxschema-builder\";\n  }\n  constructor() {\n    super();\n    this.HAXWiring = new HAXWiring();\n    this.haxSchema = \"{}\";\n  }\n  updated(changedProperties) {\n    changedProperties.forEach((oldValue, propName) => {\n      if (propName == \"haxSchema\") {\n        // notify\n        this.dispatchEvent(\n          new CustomEvent(\"hax-schema-changed\", {\n            value: this[propName]\n          })\n        );\n        this._haxSchemaChanged(this[propName], oldValue);\n      }\n    });\n  }\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  firstUpdated() {\n    setTimeout(() => {\n      if (!this.source) {\n        this.haxSchema = JSON.stringify(\n          this.HAXWiring.prototypeHaxProperties(),\n          null,\n          2\n        );\n      }\n    }, 0);\n    // HACK to get initial paint to have the correct form\n    this.shadowRoot.querySelector(\"#form\").modeTab = \"advanced\";\n    setTimeout(() => {\n      this.shadowRoot.querySelector(\"#form\").modeTab = \"configure\";\n    }, 2000);\n  }\n  /**\n   * Force an update on code editor when this value changes\n   */\n  _haxSchemaChanged(newValue) {\n    if (newValue) {\n      this.shadowRoot.querySelector(\"#code\").editorValue = newValue;\n    }\n  }\n  /**\n   * Notice code editor changes and reflect them into this element\n   */\n  _editorDataChanged(e) {\n    // value coming up off of this and get it propegated correctly\n    this.haxSchema = e.detail.value;\n    let hs = JSON.parse(this.haxSchema);\n    for (var key in hs.settings) {\n      let schema = this.HAXWiring.getHaxJSONSchema(key, hs);\n      this.shadowRoot.querySelector(\"#form\")[key + \"Schema\"] = Object.assign(\n        {},\n        schema\n      );\n    }\n  }\n  addAdvanced(e) {\n    let hs = JSON.parse(this.haxSchema);\n    hs.settings.advanced.push(this.__propPrototype());\n    this.__refreshSchemas(hs);\n  }\n  addConfigure(e) {\n    let hs = JSON.parse(this.haxSchema);\n    hs.settings.configure.push(this.__propPrototype());\n    this.__refreshSchemas(hs);\n  }\n  __refreshSchemas(hs) {\n    for (var key in hs.settings) {\n      let schema = this.HAXWiring.getHaxJSONSchema(key, hs);\n      this.shadowRoot.querySelector(\"#form\")[key + \"Schema\"] = Object.assign(\n        {},\n        schema\n      );\n    }\n    this.haxSchema = JSON.stringify(hs);\n  }\n  __propPrototype() {\n    return {\n      property: \"title\",\n      title: \"Title\",\n      description: \"\",\n      inputMethod: \"textfield\",\n      icon: \"android\",\n      required: true,\n      validationType: \"text\"\n    };\n  }\n  __haxSchemaChanged(e) {\n    this.haxSchema = e.detail.value;\n  }\n  __valueChanged(e) {\n    this.value = e.detail.value;\n  }\n}\nwindow.customElements.define(HaxschemaBuilder.tag, HaxschemaBuilder);\nexport { HaxschemaBuilder };\n"],"names":["HaxschemaBuilder","HAXWiring","haxSchema","LitElement","html","this","addConfigure","addAdvanced","_editorDataChanged","__haxSchemaChanged","value","__valueChanged","css","String","changedProperties","forEach","oldValue","propName","_this2","dispatchEvent","CustomEvent","_haxSchemaChanged","setTimeout","_this3","source","JSON","stringify","prototypeHaxProperties","shadowRoot","querySelector","modeTab","newValue","editorValue","e","detail","hs","parse","key","settings","schema","getHaxJSONSchema","Object","assign","advanced","push","__propPrototype","__refreshSchemas","configure","property","title","description","inputMethod","icon","required","validationType","window","customElements","define","tag"],"mappings":"+jGAiBMA,yKA8GGC,UAAY,IAAIA,cAChBC,UAAY,mPA/GUC,yDAsBpBC,WAI8BC,KAAKC,aACLD,KAAKE,YACAF,KAAKG,mBACOH,KAAKI,mBAA8BJ,KAAKH,UAG1DG,KAAKK,MAA0BL,KAAKM,uDA5BhE,CAENC,wDAiCK,WACG,eACG,iBACE,QACR,OACE,gCACM,iDACP,sBACC,eACC,CAAC,mBACA,QACH,QACI,eACD,+CAGD,OACD,aACI,CACX,UACc,qBACG,eACA,sBACH,OACJ,4BACU,iBAGV,mbAcD,MACHC,iBACK,qBAKL,MACAA,cAKD,MACCA,4CAWD,2DAODC,cACNA,EAAkBC,QAAQ,SAACC,EAAUC,GACnB,aAAZA,IAEFC,EAAKC,cACH,IAAIC,YAAY,qBAAsB,CACpCV,MAAOQ,EAAKD,MAGhBC,EAAKG,kBAAkBH,EAAKD,GAAWD,wDAQ3CM,WAAW,WACJC,EAAKC,SACRD,EAAKrB,UAAYuB,KAAKC,UACpBH,EAAKtB,UAAU0B,yBACf,KACA,KAGH,QAEEC,WAAWC,cAAc,SAASC,QAAU,WACjDR,WAAW,WACTC,EAAKK,WAAWC,cAAc,SAASC,QAAU,aAChD,+CAKaC,GACZA,SACGH,WAAWC,cAAc,SAASG,YAAcD,8CAMtCE,QAEZ/B,UAAY+B,EAAEC,OAAOxB,UACtByB,EAAKV,KAAKW,MAAM/B,KAAKH,eACpB,IAAImC,KAAOF,EAAGG,SAAU,KACvBC,EAASlC,KAAKJ,UAAUuC,iBAAiBH,EAAKF,QAC7CP,WAAWC,cAAc,SAASQ,EAAM,UAAYI,OAAOC,OAC9D,GACAH,wCAIMN,OACNE,EAAKV,KAAKW,MAAM/B,KAAKH,WACzBiC,EAAGG,SAASK,SAASC,KAAKvC,KAAKwC,wBAC1BC,iBAAiBX,wCAEXF,OACPE,EAAKV,KAAKW,MAAM/B,KAAKH,WACzBiC,EAAGG,SAASS,UAAUH,KAAKvC,KAAKwC,wBAC3BC,iBAAiBX,4CAEPA,OACV,IAAIE,KAAOF,EAAGG,SAAU,KACvBC,EAASlC,KAAKJ,UAAUuC,iBAAiBH,EAAKF,QAC7CP,WAAWC,cAAc,SAASQ,EAAM,UAAYI,OAAOC,OAC9D,GACAH,QAGCrC,UAAYuB,KAAKC,UAAUS,mDAGzB,CACLa,SAAU,QACVC,MAAO,QACPC,YAAa,GACbC,YAAa,YACbC,KAAM,UACNC,UAAU,EACVC,eAAgB,mDAGDrB,QACZ/B,UAAY+B,EAAEC,OAAOxB,6CAEbuB,QACRvB,MAAQuB,EAAEC,OAAOxB,eAG1B6C,OAAOC,eAAeC,OAAOzD,EAAiB0D,IAAK1D"}