{"version":3,"file":"wikipedia-query.umd.js","sources":["wikipedia-query.umd.js"],"sourcesContent":["import { LitElement, html, css } from \"lit-element/lit-element.js\";\nimport \"@polymer/iron-ajax/iron-ajax.js\";\n/**\n * `wikipedia-query`\n * `Query and present information from wikipedia.`\n * @demo demo/index.html\n * @element wikipedia-query\n */\nclass WikipediaQuery extends LitElement {\n  /**\n   * LitElement constructable styles enhancement\n   */\n  static get styles() {\n    return [\n      css`\n        :host {\n          display: block;\n          --wikipedia-query-body-height: 160px;\n        }\n        :host [hidden] {\n          display: none;\n        }\n        #result {\n          height: var(--wikipedia-query-body-height);\n          overflow: scroll;\n          border: 1px grey solid;\n          padding: 8px 16px;\n        }\n        citation-element {\n          background-color: #f8f8f8;\n          padding: 16px 8px;\n          font-size: 12px;\n        }\n      `\n    ];\n  }\n  constructor() {\n    super();\n    this.hideTitle = false;\n    let date = new Date(Date.now());\n    this.__now =\n      date.getDate() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getFullYear();\n    setTimeout(() => {\n      import(\"@lrnwebcomponents/citation-element/citation-element.js\");\n    }, 0);\n  }\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"wikipedia-query\";\n  }\n  // LitElement render function\n  render() {\n    return html`\n      ${this.search\n        ? html`\n            <iron-ajax\n              auto\n              url=\"https://en.wikipedia.org/w/api.php?origin=*&amp;action=query&amp;titles=${this\n                .search}&amp;prop=extracts&amp;format=json\"\n              handle-as=\"json\"\n              @response=\"${this.handleResponse}\"\n              debounce-duration=\"25\"\n              @last-response-changed=\"${this.searchResponseChanged}\"\n            ></iron-ajax>\n            <h3 .hidden=\"${this.hideTitle}\">${this._title}</h3>\n            <div id=\"result\"></div>\n            <citation-element\n              creator=\"{Wikipedia contributors}\"\n              scope=\"sibling\"\n              license=\"by-sa\"\n              title=\"${this.search} --- {Wikipedia}{,} The Free Encyclopedia\"\n              source=\"https://en.wikipedia.org/w/index.php?title=${this.search}\"\n              date=\"${this.__now}\"\n            ></citation-element>\n          `\n        : ``}\n    `;\n  }\n  searchResponseChanged(e) {\n    this.searchResponse = e.detail.value;\n  }\n  /**\n   * LitElement properties updated\n   */\n  updated(changedProperties) {\n    changedProperties.forEach((oldValue, propName) => {\n      if (propName == \"search\") {\n        if (this.title) {\n          this._title = this.title;\n        } else {\n          this._title = this[propName].replace(\"_\", \" \") + \" Wikipedia article\";\n        }\n      }\n      if (propName == \"title\") {\n        if (this.title) {\n          this._title = this.title;\n        }\n      }\n    });\n  }\n  static get properties() {\n    return {\n      title: {\n        type: String\n      },\n      __now: {\n        type: String\n      },\n      _title: {\n        type: String\n      },\n      /**\n       * hideTitle\n       */\n      hideTitle: {\n        type: Boolean,\n        attribute: \"hide-title\"\n      },\n      /**\n       * Search string.\n       */\n      search: {\n        type: String\n      }\n    };\n  }\n  /**\n   * HAXproperties\n   */\n  static get haxProperties() {\n    return {\n      canScale: true,\n      canPosition: true,\n      canEditSource: false,\n      gizmo: {\n        title: \"Wikipedia article\",\n        description:\n          \"This can display a wikipedia article in context in a variety of formats.\",\n        icon: \"book\",\n        color: \"green\",\n        groups: [\"Content\", \"Creative Commons\"],\n        handles: [\n          {\n            type: \"content\",\n            title: \"search\"\n          },\n          {\n            type: \"wikipedia\",\n            type_exclusive: true,\n            title: \"search\"\n          }\n        ],\n        meta: {\n          author: \"ELMS:LN\"\n        }\n      },\n      settings: {\n        quick: [\n          {\n            property: \"search\",\n            title: \"Search term\",\n            description: \"Word to search wikipedia for.\",\n            inputMethod: \"textfield\",\n            icon: \"editor:title\",\n            required: true\n          },\n          {\n            property: \"hideTitle\",\n            title: \"Hide title\",\n            description: \"Whether or not to render the title of the article.\",\n            inputMethod: \"boolean\",\n            icon: \"editor:title\"\n          }\n        ],\n        configure: [\n          {\n            property: \"search\",\n            title: \"Search term\",\n            description: \"Word to search wikipedia for.\",\n            inputMethod: \"textfield\",\n            icon: \"editor:title\",\n            required: true\n          }\n        ]\n      },\n      saveOptions: {\n        wipeSlot: true,\n        unsetAttributes: [\"_title\"]\n      }\n    };\n  }\n  /**\n   * Process response from wikipedia.\n   */\n  handleResponse(response) {\n    // the key of pages is a number so need to look for it\n    if (\n      typeof this.searchResponse !== typeof undefined &&\n      this.searchResponse.query\n    ) {\n      for (var key in this.searchResponse.query.pages) {\n        // skip anything that's prototype object\n        if (!this.searchResponse.query.pages.hasOwnProperty(key)) continue;\n        // load object response, double check we have an extract\n        if (this.searchResponse.query.pages[key].extract) {\n          let html = this.searchResponse.query.pages[key].extract;\n          html = html.replace(/<script[\\s\\S]*?>/gi, \"&lt;script&gt;\");\n          html = html.replace(/<\\/script>/gi, \"&lt;/script&gt;\");\n          html = html.replace(/<style[\\s\\S]*?>/gi, \"&lt;style&gt;\");\n          html = html.replace(/<\\/style>/gi, \"&lt;/style&gt;\");\n          // need to innerHTML this or it won't set\n          this.shadowRoot.querySelector(\"#result\").innerHTML = html;\n        }\n      }\n    }\n  }\n}\nwindow.customElements.define(WikipediaQuery.tag, WikipediaQuery);\nexport { WikipediaQuery };\n"],"names":["WikipediaQuery","hideTitle","date","Date","now","__now","getDate","getMonth","getFullYear","setTimeout","LitElement","css","html","this","search","handleResponse","searchResponseChanged","_title","e","searchResponse","detail","value","changedProperties","forEach","oldValue","propName","_this2","title","replace","response","_typeof","query","key","pages","hasOwnProperty","extract","shadowRoot","querySelector","innerHTML","type","String","Boolean","attribute","canScale","canPosition","canEditSource","gizmo","description","icon","color","groups","handles","type_exclusive","meta","author","settings","quick","property","inputMethod","required","configure","saveOptions","wipeSlot","unsetAttributes","window","customElements","define","tag"],"mappings":"2vFAQMA,mKA8BGC,WAAY,MACbC,EAAO,IAAIC,KAAKA,KAAKC,gBACpBC,MACHH,EAAKI,UAAY,KAAOJ,EAAKK,WAAa,GAAK,IAAML,EAAKM,cAC5DC,WAAW,kBACF,2DACN,iPApCsBC,2DAKlB,CACLC,2DAyCKC,WACHC,KAAKC,OACHF,WAGmFC,KAC5EC,OAEUD,KAAKE,eAEQF,KAAKG,sBAElBH,KAAKZ,UAAcY,KAAKI,OAM5BJ,KAAKC,OACuCD,KAAKC,OAClDD,KAAKR,yDAMHa,QACfC,eAAiBD,EAAEE,OAAOC,sCAKzBC,cACNA,EAAkBC,QAAQ,SAACC,EAAUC,GACnB,UAAZA,IACEC,EAAKC,MACPD,EAAKT,OAASS,EAAKC,MAEnBD,EAAKT,OAASS,EAAKD,GAAUG,QAAQ,IAAK,KAAO,sBAGrC,SAAZH,GACEC,EAAKC,QACPD,EAAKT,OAASS,EAAKC,gDAmGZE,oBAGXC,EAAOjB,KAAKM,iBACZN,KAAKM,eAAeY,UAEf,IAAIC,KAAOnB,KAAKM,eAAeY,MAAME,SAEnCpB,KAAKM,eAAeY,MAAME,MAAMC,eAAeF,IAEhDnB,KAAKM,eAAeY,MAAME,MAAMD,GAAKG,QAAS,KAC5CvB,EAAOC,KAAKM,eAAeY,MAAME,MAAMD,GAAKG,QAIhDvB,GADAA,GADAA,GADAA,EAAOA,EAAKgB,QAAQ,qBAAsB,mBAC9BA,QAAQ,eAAgB,oBACxBA,QAAQ,oBAAqB,kBAC7BA,QAAQ,cAAe,uBAE9BQ,WAAWC,cAAc,WAAWC,UAAY1B,uCAnKpD,2DAqDA,CACLe,MAAO,CACLY,KAAMC,QAERnC,MAAO,CACLkC,KAAMC,QAERvB,OAAQ,CACNsB,KAAMC,QAKRvC,UAAW,CACTsC,KAAME,QACNC,UAAW,cAKb5B,OAAQ,CACNyB,KAAMC,qDAQH,CACLG,UAAU,EACVC,aAAa,EACbC,eAAe,EACfC,MAAO,CACLnB,MAAO,oBACPoB,YACE,2EACFC,KAAM,OACNC,MAAO,QACPC,OAAQ,CAAC,UAAW,oBACpBC,QAAS,CACP,CACEZ,KAAM,UACNZ,MAAO,UAET,CACEY,KAAM,YACNa,gBAAgB,EAChBzB,MAAO,WAGX0B,KAAM,CACJC,OAAQ,YAGZC,SAAU,CACRC,MAAO,CACL,CACEC,SAAU,SACV9B,MAAO,cACPoB,YAAa,gCACbW,YAAa,YACbV,KAAM,eACNW,UAAU,GAEZ,CACEF,SAAU,YACV9B,MAAO,aACPoB,YAAa,qDACbW,YAAa,UACbV,KAAM,iBAGVY,UAAW,CACT,CACEH,SAAU,SACV9B,MAAO,cACPoB,YAAa,gCACbW,YAAa,YACbV,KAAM,eACNW,UAAU,KAIhBE,YAAa,CACXC,UAAU,EACVC,gBAAiB,CAAC,qBA8B1BC,OAAOC,eAAeC,OAAOlE,EAAemE,IAAKnE"}