{"version":3,"file":"media-image.umd.js","sources":["media-image.umd.js"],"sourcesContent":["/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { LitElement, html, css } from \"lit-element/lit-element.js\";\nimport { SchemaBehaviors } from \"@lrnwebcomponents/schema-behaviors/schema-behaviors.js\";\nimport { SimpleModalHandler } from \"@lrnwebcomponents/simple-modal/lib/simple-modal-handler.js\";\n/**\n * `media-image`\n * `A simple image presentaiton with minor documented options`\n * @demo demo/index.html\n * @element media-image\n */\nclass MediaImage extends SchemaBehaviors(LitElement) {\n  /**\n   * LitElement constructable styles enhancement\n   */\n  static get styles() {\n    return [\n      css`\n        :host {\n          display: block;\n          width: auto;\n          margin: auto;\n          --box-background-color: #f7f6ef;\n        }\n\n        :host([card]) {\n          box-shadow: 0 1px 5px rgba(0, 0, 0, 0.14);\n          padding: 20px;\n        }\n\n        :host([box]) {\n          background-color: var(--box-background-color);\n          padding: 20px;\n        }\n\n        @media screen and (min-width: 450px) {\n          :host([size=\"small\"]) {\n            max-width: 50%;\n          }\n        }\n\n        @media screen and (min-width: 650px) {\n          :host([size=\"small\"]) {\n            max-width: 35%;\n          }\n        }\n\n        @media screen and (min-width: 900px) {\n          :host([size=\"small\"]) {\n            max-width: 25%;\n          }\n        }\n\n        :host([offset=\"left\"]) {\n          float: left;\n          margin: var(--media-image-offset-width, 1.5vw);\n          margin-left: calc(-2 * var(--media-image-offset-width, 1.5vw));\n          padding-left: calc(4 * var(--media-image-offset-width, 1.5vw));\n          margin-top: 0;\n          margin-bottom: calc(0.1 * var(--media-image-offset-width, 1.5vw));\n        }\n\n        :host([offset=\"right\"]) {\n          float: right;\n          margin: var(--media-image-offset-width, 1.5vw);\n          margin-right: calc(-2 * var(--media-image-offset-width, 1.5vw));\n          padding-right: calc(4 * var(--media-image-offset-width, 1.5vw));\n          margin-top: 0;\n          margin-bottom: calc(0.1 * var(--media-image-offset-width, 1.5vw));\n        }\n\n        :host([offset=\"wide\"]) {\n          margin: 0 calc(-1 * var(--media-image-offset-wide-width, 3.5vw));\n          max-width: 100vw;\n        }\n\n        :host([offset=\"narrow\"]) {\n          max-width: var(--media-image-offset-narrow-max-width, 500px);\n          margin: auto;\n        }\n      `\n    ];\n  }\n  constructor() {\n    super();\n    this.modalTitle = \"\";\n    this.source = \"\";\n    this.citation = \"\";\n    this.caption = \"\";\n    this.figureLabelTitle = \"\";\n    this.figureLabelDescription = \"\";\n    this.alt = \"\";\n    this.size = \"wide\";\n    this.round = false;\n    this.card = false;\n    this.box = false;\n    this.offset = \"none\";\n    setTimeout(() => {\n      import(\"@polymer/iron-icons/iron-icons.js\");\n    }, 0);\n  }\n  updated(changedProperties) {\n    changedProperties.forEach((oldValue, propName) => {\n      if (propName == \"caption\") {\n        this._computeHasCaption(this[propName]);\n      }\n      if ([\"figureLabelTitle\", \"figureLabelDescription\"].includes(propName)) {\n        this.__figureLabel = this._hasFigureLabel(\n          this.figureLabelTitle,\n          this.figureLabelDescription\n        );\n      }\n      if ([\"figureLabelTitle\", \"caption\"].includes(propName)) {\n        this.modalTitle = this.figureLabelTitle\n          ? this.figureLabelTitle\n          : this.caption;\n        this.modalTitle += this.figureLabelDescription\n          ? \" - \" + this.figureLabelDescription\n          : \"\";\n      }\n      if (propName == \"__figureLabel\") {\n        if (this[propName]) {\n          import(\"@lrnwebcomponents/figure-label/figure-label.js\");\n        }\n      }\n    });\n  }\n  render() {\n    return html`\n      ${this.__figureLabel\n        ? html`\n            <figure-label\n              title=\"${this.figureLabelTitle}\"\n              description=\"${this.figureLabelDescription}\"\n            ></figure-label>\n          `\n        : ``}\n      <media-image-image\n        ?round=\"${this.round}\"\n        resource=\"${this.schemaResourceID}-image\"\n        source=\"${this.source}\"\n        modal-title=\"${this.modalTitle}\"\n        alt=\"${this.alt}\"\n      ></media-image-image>\n      <media-image-citation>\n        <slot name=\"citation\">\n          ${this.citation}\n        </slot>\n      </media-image-citation>\n      ${this._hasCaption\n        ? html`\n            <media-image-caption>\n              <slot name=\"caption\">\n                ${this.caption}\n              </slot>\n            </media-image-caption>\n          `\n        : ``}\n    `;\n  }\n  static get tag() {\n    return \"media-image\";\n  }\n  static get properties() {\n    return {\n      ...super.properties,\n      __figureLabel: {\n        type: Boolean\n      },\n      modalTitle: {\n        type: String\n      },\n      _hasCaption: {\n        type: Boolean\n      },\n      /**\n       * Image source.\n       */\n      source: {\n        type: String\n      },\n      /**\n       * Image citation.\n       */\n      citation: {\n        type: String\n      },\n      /**\n       * Image caption.\n       */\n      caption: {\n        type: String\n      },\n      /**\n       * Image alt.\n       */\n      alt: {\n        type: String\n      },\n      /**\n       * The size of the image (small, wide).\n       */\n      size: {\n        type: String,\n        reflect: true\n      },\n      /**\n       * The shape of the image (round).\n       */\n      round: {\n        type: Boolean\n      },\n      /**\n       * Applies card styling.\n       */\n      card: {\n        type: Boolean,\n        reflect: true\n      },\n      /**\n       * Applies box styling.\n       */\n      box: {\n        type: Boolean,\n        reflect: true\n      },\n      /**\n       * Applies left or right offset\n       * - none\n       * - left\n       * - right\n       * - wide\n       * - narrow\n       */\n      offset: {\n        type: String,\n        reflect: true\n      },\n      /**\n       * Added a figure label title to the top of the media-image\n       */\n      figureLabelTitle: {\n        type: String,\n        attribute: \"figure-label-title\"\n      },\n      /**\n       * Added a figure label description to the top of the media-image\n       */\n      figureLabelDescription: {\n        type: String,\n        attribute: \"figure-label-description\"\n      }\n    };\n  }\n\n  // Observe the name sub-property on the user object\n  // if the either of the figure label values are present then display\n  // the figure label\n  _hasFigureLabel(title, description) {\n    return title.length > 0 || description.length > 0;\n  }\n  _computeHasCaption() {\n    this._hasCaption =\n      this.caption.length > 0 ||\n      this.querySelector('[slot=\"caption\"]') !== null;\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    this._observer = new MutationObserver(mutations => {\n      this._computeHasCaption();\n    });\n    this._observer.observe(this, {\n      childList: true\n    });\n  }\n  disconnectedCallback() {\n    this._observer.disconnect();\n    super.disconnectedCallback();\n  }\n\n  static get haxProperties() {\n    return {\n      canScale: true,\n      canPosition: true,\n      canEditSource: false,\n      gizmo: {\n        title: \"Styled image\",\n        descrption:\n          \"An image gizmo with the ability to provide simple, consistent styling and accessibility options.\",\n        icon: \"editor:insert-photo\",\n        color: \"indigo\",\n        groups: [\"Image\", \"Media\"],\n        handles: [\n          {\n            type: \"image\",\n            source: \"source\",\n            title: \"alt\",\n            alt: \"alt\",\n            citation: \"citation\",\n            caption: \"caption\"\n          }\n        ],\n        meta: {\n          author: \"ELMS:LN\"\n        }\n      },\n      settings: {\n        quick: [\n          {\n            property: \"source\",\n            title: \"Source\",\n            description: \"The URL for the image.\",\n            inputMethod: \"textfield\",\n            icon: \"link\",\n            required: true\n          },\n          {\n            property: \"alt\",\n            title: \"Alternative text\",\n            description: \"Text to describe the image to non-sighted users.\",\n            inputMethod: \"textfield\",\n            icon: \"accessibility\",\n            required: false\n          }\n        ],\n        configure: [\n          {\n            property: \"source\",\n            title: \"Source\",\n            description: \"The URL for the image.\",\n            inputMethod: \"haxupload\",\n            icon: \"link\",\n            required: true\n          },\n          {\n            property: \"alt\",\n            title: \"Alternative text\",\n            description: \"Text to describe the image to non-sighted users.\",\n            inputMethod: \"alt\",\n            icon: \"accessibility\",\n            required: true\n          },\n          {\n            property: \"round\",\n            title: \"Round image\",\n            description: \"Crops the image appearance to be circle in shape.\",\n            inputMethod: \"boolean\",\n            icon: \"account\",\n            required: false\n          },\n          {\n            property: \"card\",\n            title: \"Card\",\n            description:\n              \"Apply a drop shadow to give the appearance of being a raised card.\",\n            inputMethod: \"boolean\",\n            icon: \"check-box-outline-blank\",\n            required: false\n          },\n          {\n            property: \"box\",\n            title: \"Box\",\n            description: \"Apply a visual box around the image.\",\n            inputMethod: \"boolean\",\n            icon: \"image:crop-square\",\n            required: false\n          },\n          {\n            property: \"offset\",\n            title: \"Offset\",\n            description: \"Apply a left or right offset to the image.\",\n            inputMethod: \"select\",\n            icon: \"image:crop-square\",\n            options: {\n              none: \"none\",\n              left: \"left\",\n              right: \"right\",\n              wide: \"wide\",\n              narrow: \"narrow\"\n            }\n          },\n          {\n            property: \"citation\",\n            title: \"Citation\",\n            description: \"Citation for the image.\",\n            inputMethod: \"textfield\",\n            icon: \"text-format\",\n            required: false\n          },\n          {\n            property: \"caption\",\n            title: \"Caption\",\n            description: \"Caption for the image.\",\n            inputMethod: \"textfield\",\n            icon: \"text-format\",\n            required: false\n          },\n          {\n            property: \"figureLabelTitle\",\n            title: \"Figure Label Title\",\n            description: \"Title for the figure label.\",\n            inputMethod: \"textfield\",\n            icon: \"text-format\",\n            required: false\n          },\n          {\n            property: \"figureLabelDescription\",\n            title: \"Figure Label Description\",\n            description: \"Description for the figure label.\",\n            inputMethod: \"textfield\",\n            icon: \"text-format\",\n            required: false\n          }\n        ]\n      }\n    };\n  }\n}\nwindow.customElements.define(MediaImage.tag, MediaImage);\n\n/**\n * `media-image-image`\n * `A simple image presentaiton with minor documented options`\n * @element media-image-image\n */\nclass MediaImageImage extends SimpleModalHandler(LitElement) {\n  /**\n   * LitElement constructable styles enhancement\n   */\n  static get styles() {\n    return [\n      css`\n        :host {\n          display: block;\n        }\n        :host(:hover) {\n          cursor: pointer;\n        }\n        iron-image {\n          width: 100%;\n          --iron-image-width: 100%;\n        }\n        :host([round]) iron-image {\n          border-radius: 50%;\n        }\n      `\n    ];\n  }\n  constructor() {\n    super();\n    this.round = false;\n    this.modalContent = document.createElement(\"image-inspector\");\n    this.modalContent.noLeft = true;\n    this.modalTitle = \"\";\n    setTimeout(() => {\n      import(\"@polymer/iron-image/iron-image.js\");\n      this.addEventListener(\n        \"simple-modal-show\",\n        this.__modalShowEvent.bind(this)\n      );\n    }, 0);\n  }\n  /**\n   * Only import the definition if they call up the modal because it's a pretty\n   * heavy library tree\n   */\n  __modalShowEvent(e) {\n    import(\"@lrnwebcomponents/image-inspector/image-inspector.js\");\n  }\n  render() {\n    return html`\n      <iron-image src=\"${this.source}\" alt=\"${this.alt}\"></iron-image>\n    `;\n  }\n  updated(changedProperties) {\n    changedProperties.forEach((oldValue, propName) => {\n      // ensure pop up matches source url\n      if (propName == \"source\") {\n        this.modalContent.src = this[propName];\n      }\n    });\n  }\n  static get properties() {\n    return {\n      source: {\n        type: String\n      },\n      alt: {\n        type: String\n      },\n      round: {\n        type: Boolean,\n        reflect: true\n      },\n      modalTitle: {\n        type: String,\n        attribute: \"modal-title\"\n      }\n    };\n  }\n  static get tag() {\n    return \"media-image-image\";\n  }\n}\nwindow.customElements.define(MediaImageImage.tag, MediaImageImage);\n\n/**\n * `media-image-citation`\n * `A simple image presentaiton with minor documented options`\n * @demo demo/index.html\n * @element media-image-citation\n */\nclass MediaImageCitation extends LitElement {\n  /**\n   * LitElement constructable styles enhancement\n   */\n  static get styles() {\n    return [\n      css`\n        :host {\n          display: block;\n        }\n\n        .citation {\n          font-size: 12.8px;\n          font-style: italic;\n          color: #4c4c4c;\n          margin: 15px 0 15px;\n        }\n      `\n    ];\n  }\n  render() {\n    return html`\n      <div class=\"citation\"><slot></slot></div>\n    `;\n  }\n  static get tag() {\n    return \"media-image-citation\";\n  }\n}\nwindow.customElements.define(MediaImageCitation.tag, MediaImageCitation);\n\n/**\n * `media-image-caption`\n * `A simple image presentaiton with minor documented options`\n * @demo demo/index.html\n * @element media-image-caption\n */\nclass MediaImageCaption extends LitElement {\n  /**\n   * LitElement constructable styles enhancement\n   */\n  static get styles() {\n    return [\n      css`\n        :host {\n          display: block;\n        }\n\n        .caption {\n          padding-bottom: 25px;\n          border-bottom: dashed 2px lightgray;\n          margin-bottom: 25px;\n          line-height: 1.5;\n          font-size: 18px;\n        }\n\n        .caption ::slotted(*) {\n          margin-top: 0;\n        }\n        .caption ::slotted(*:last-child) {\n          margin-bottom: 0;\n        }\n      `\n    ];\n  }\n  render() {\n    return html`\n      <div class=\"caption\">\n        ${!this.__hasContent\n          ? html`\n              <slot id=\"slot\"></slot>\n            `\n          : ``}\n      </div>\n    `;\n  }\n  static get tag() {\n    return \"media-image-caption\";\n  }\n}\nwindow.customElements.define(MediaImageCaption.tag, MediaImageCaption);\n\nexport { MediaImage };\n"],"names":["MediaImage","modalTitle","source","citation","caption","figureLabelTitle","figureLabelDescription","alt","size","round","card","box","offset","setTimeout","SchemaBehaviors","LitElement","css","changedProperties","forEach","oldValue","propName","_this2","_computeHasCaption","includes","__figureLabel","_hasFigureLabel","html","this","schemaResourceID","_hasCaption","title","description","length","querySelector","_observer","MutationObserver","mutations","_this3","observe","childList","disconnect","type","Boolean","String","reflect","attribute","canScale","canPosition","canEditSource","gizmo","descrption","icon","color","groups","handles","meta","author","settings","quick","property","inputMethod","required","configure","options","none","left","right","wide","narrow","window","customElements","define","tag","MediaImageImage","modalContent","document","createElement","noLeft","addEventListener","_this4","__modalShowEvent","bind","SimpleModalHandler","e","_this5","src","MediaImageCitation","MediaImageCaption","__hasContent"],"mappings":"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"}