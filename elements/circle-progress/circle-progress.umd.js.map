{"version":3,"file":"circle-progress.umd.js","sources":["circle-progress.umd.js"],"sourcesContent":["/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport \"@polymer/paper-styles/paper-styles.js\";\nimport \"@polymer/iron-flex-layout/iron-flex-layout.js\";\nimport { IronResizableBehavior } from \"@polymer/iron-resizable-behavior/iron-resizable-behavior.js\";\nimport { mixinBehaviors } from \"@polymer/polymer/lib/legacy/class.js\";\n/**\n * `circle-progress`\n * `Polymer-based web component displaying a circular progress bar.`\n *\n * @demo demo/index.html\n * @element circle-progress\n */\nclass CircleProgress extends mixinBehaviors(\n  [IronResizableBehavior],\n  PolymerElement\n) {\n  static get template() {\n    return html`\n      <style include=\"paper-material-styles\">\n        :host {\n          @apply --layout-vertical;\n          @apply --layout-center-center;\n          position: relative;\n          width: var(--circle-progress-width, 64px);\n          height: var(--circle-progress-height, 64px);\n          margin: 24px;\n          border-radius: 50%;\n        }\n        svg {\n          position: absolute;\n          top: 0;\n          left: 0;\n          display: none;\n        }\n        .circle-background {\n          stroke: var(--circle-progress-bg-stroke-color, --paper-grey-100);\n        }\n        .circle-foreground {\n          transition: stroke-dashoffset var(--circle-progress-transition, 150ms);\n          stroke: var(--circle-progress-stroke-color, blue);\n          stroke-linecap: var(--circle-progress-stroke-linecap, round);\n        }\n      </style>\n\n      <svg id=\"circle\" width=\"100%\" height=\"100%\">\n        <circle\n          class=\"circle-background\"\n          r\\$=\"[[_radius]]\"\n          cx\\$=\"[[_cx]]\"\n          cy\\$=\"[[_cy]]\"\n          fill=\"transparent\"\n          stroke-width\\$=\"[[strokeWidth]]\"\n        ></circle>\n        <circle\n          class=\"circle-foreground\"\n          r\\$=\"[[_radius]]\"\n          cx\\$=\"[[_cx]]\"\n          cy\\$=\"[[_cy]]\"\n          fill=\"transparent\"\n          stroke-width\\$=\"[[strokeWidth]]\"\n          stroke-dasharray\\$=\"[[_dasharray]]\"\n          stroke-dashoffset\\$=\"[[_dashoffset]]\"\n          transform\\$=\"[[_transform]]\"\n        ></circle>\n      </svg>\n      <slot></slot>\n    `;\n  }\n\n  static get tag() {\n    return \"circle-progress\";\n  }\n\n  static get properties() {\n    return {\n      ...super.properties,\n\n      /**\n       * Value of circular progress bar.\n       */\n      value: {\n        name: \"value\",\n        type: Number,\n        value: 0\n      },\n\n      /**\n       * Maximum of value.\n       */\n      max: {\n        name: \"max\",\n        type: Number,\n        value: 100\n      },\n\n      /**\n       * Stroke width of circle.\n       */\n      strokeWidth: {\n        name: \"strokeWidth\",\n        type: Number,\n        value: 4\n      },\n\n      /**\n       * Starting angle of the progress.\n       */\n      angle: {\n        name: \"angle\",\n        type: Number,\n        value: -90\n      },\n\n      _cx: {\n        name: \"_cx\",\n        type: Number,\n        value: null\n      },\n\n      _cy: {\n        name: \"_cy\",\n        type: Number,\n        value: null\n      },\n\n      _radius: {\n        name: \"_radius\",\n        type: Number,\n        computed: \"_computeRadius(_cx, _cy, strokeWidth)\"\n      },\n\n      _transform: {\n        name: \"_transform\",\n        type: String,\n        computed: \"_computeTransform(angle, _cx, _cy)\"\n      },\n\n      _dasharray: {\n        name: \"_dasharray\",\n        type: Number,\n        computed: \"_computeDashArray(_radius)\"\n      },\n\n      _dashoffset: {\n        name: \"_dashoffset\",\n        type: Number,\n        computed: \"_computeDashOffset(value, max, _dasharray)\"\n      }\n    };\n  }\n  constructor() {\n    super();\n    setTimeout(() => {\n      this.addEventListener(\"iron-resize\", this._onIronResize.bind(this));\n    }, 0);\n  }\n  _computeDashArray(radius) {\n    return 2 * Math.PI * radius;\n  }\n\n  _computeDashOffset(value, max, dasharray) {\n    return (1 - value / max) * dasharray;\n  }\n\n  _computeRadius(cx, cy, strokeWidth) {\n    return cx && cy ? Math.max(0, Math.min(cx, cy) - strokeWidth / 2) : 0;\n  }\n\n  _computeTransform(angle, cx, cy) {\n    return cx && cy ? \"rotate(\" + angle + \", \" + cx + \", \" + cy + \")\" : \"\";\n  }\n\n  _onIronResize() {\n    if (this.offsetWidth && this.offsetHeight) {\n      this._cx = this.offsetWidth / 2;\n      this._cy = this.offsetHeight / 2;\n      this.shadowRoot.querySelector(\"#circle\").style.display = \"block\";\n    }\n  }\n}\nwindow.customElements.define(CircleProgress.tag, CircleProgress);\nexport { CircleProgress };\n"],"names":["CircleProgress","setTimeout","addEventListener","_this","_onIronResize","bind","mixinBehaviors","IronResizableBehavior","PolymerElement","html","value","name","type","Number","max","strokeWidth","angle","_cx","_cy","_radius","computed","_transform","String","_dasharray","_dashoffset","radius","Math","PI","dasharray","cx","cy","min","this","offsetWidth","offsetHeight","shadowRoot","querySelector","style","display","window","customElements","define","tag"],"mappings":"0oKAgBMA,gOA4IFC,WAAW,aACJC,iBAAiB,cAAeC,EAAKC,cAAcC,aACvD,iPA9IsBC,iBAC3B,CAACC,yBACDC,mEAGSC,8CAqDA,sbAULC,MAAO,CACLC,KAAM,QACNC,KAAMC,OACNH,MAAO,GAMTI,IAAK,CACHH,KAAM,MACNC,KAAMC,OACNH,MAAO,KAMTK,YAAa,CACXJ,KAAM,cACNC,KAAMC,OACNH,MAAO,GAMTM,MAAO,CACLL,KAAM,QACNC,KAAMC,OACNH,OAAQ,IAGVO,IAAK,CACHN,KAAM,MACNC,KAAMC,OACNH,MAAO,MAGTQ,IAAK,CACHP,KAAM,MACNC,KAAMC,OACNH,MAAO,MAGTS,QAAS,CACPR,KAAM,UACNC,KAAMC,OACNO,SAAU,yCAGZC,WAAY,CACVV,KAAM,aACNC,KAAMU,OACNF,SAAU,sCAGZG,WAAY,CACVZ,KAAM,aACNC,KAAMC,OACNO,SAAU,8BAGZI,YAAa,CACXb,KAAM,cACNC,KAAMC,OACNO,SAAU,iGAUEK,UACT,EAAIC,KAAKC,GAAKF,6CAGJf,EAAOI,EAAKc,UACrB,EAAIlB,EAAQI,GAAOc,yCAGdC,EAAIC,EAAIf,UACdc,GAAMC,EAAKJ,KAAKZ,IAAI,EAAGY,KAAKK,IAAIF,EAAIC,GAAMf,EAAc,GAAK,4CAGpDC,EAAOa,EAAIC,UACpBD,GAAMC,EAAK,UAAYd,EAAQ,KAAOa,EAAK,KAAOC,EAAK,IAAM,2CAIhEE,KAAKC,aAAeD,KAAKE,oBACtBjB,IAAMe,KAAKC,YAAc,OACzBf,IAAMc,KAAKE,aAAe,OAC1BC,WAAWC,cAAc,WAAWC,MAAMC,QAAU,kBAI/DC,OAAOC,eAAeC,OAAOzC,EAAe0C,IAAK1C"}