{"version":3,"file":"social-share-link.umd.js","sources":["social-share-link.umd.js"],"sourcesContent":["/**\n * Copyright 2019 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, css, LitElement } from \"lit-element/lit-element.js\";\nimport \"@polymer/iron-icon/iron-icon.js\";\nimport \"@lrnwebcomponents/social-media-icons/social-media-icons.js\";\n\n/**\n * `social-share-link`\n * `a link to share content on social`\n * @demo demo/index.html\n * @element social-share-link\n */\nclass SocialShareLink extends LitElement {\n  \n  //styles function\n  static get styles() {\n    return  [\n      \n      css`\n:host {\n  display: inline;\n}\n\n:host([hidden]) {\n  display: none;\n}\n\n:host a {\n  display: inline-flex;\n  align-items: center;\n  color: var(--social-share-link-color, inherit);\n  transition: all 0.5s;\n  margin: 5px;\n  padding: var(--social-share-button-padding, 0px);\n  border-radius: var(--social-share-button-border-radius, 0px);\n}\n\n:host a:visited {\n  color: var(--social-share-visited-link-color, inherit);\n}\n\n:host a:focus,\n:host a:hover {\n  color: var(--social-share-link-hover-color, inherit);\n}\n\n:host([disabled]) a,\n:host([disabled]) a:focus,\n:host([disabled]) a:hover,\n:host([disabled]) a:visited {\n  color: var(--social-share-disabled-link-color,#ddd);\n}\n\n:host([button-style]) a {\n  padding: var(--social-share-button-padding, 5px 10px);\n  border-radius: var(--social-share-button-border-radius, 3px);\n  color: var(--social-share-button-color, white);\n  background-color: var(--social-share-button-bg, #0066ff);\n  text-decoration: none;\n  transition: all 0.5s;\n}\n\n:host([button-style]) a:visited {\n  color: var(--social-share-visited-button-color, white);\n}\n\n:host([button-style]) a:focus,\n:host([button-style]) a:hover {\n  color: var(--social-share-button-hover-color, white);\n  background-color: var(--social-share-button-hover-bg, #0044ee);\n}\n\n:host([button-style][disabled]) a,\n:host([button-style][disabled]) a:focus,\n:host([button-style][disabled]) a:hover,\n:host([button-style][disabled]) a:visited {\n  color: var(--social-share-disabled-button-color,#ddd);\n  background-color: var(--social-share-disabled-button-bg, #666);\n}\n\n:host iron-icon {\n  margin-right: 5px;\n}\n\n:host a.text-only iron-icon {\n  display: none;\n}\n\n:host a.icon-only .linktext {\n  position: absolute;\n  left: -999999px;\n  top: 0;\n  height: 0;\n  width: 0;\n  overflow: hidden;\n}\n\n:host a.icon-only iron-icon {\n  margin-right: 0;\n}\n      `\n    ];\n  }\n  // render function\n  render() {\n    return html`\n\n<a href=\"${this.__href}\" ?disabled=\"${!this.__href}\" class=\"${this.mode}\" rel=\"noopener noreferrer\" target=\"_blank\">\n  <iron-icon aria-hidden=\"true\" icon=\"${this.__icon}\" ?hidden=\"${!this.__showIcon}\"></iron-icon>\n  <span class=\"linktext\">${this.__linkText}</span>\n</a>`;\n  }\n\n  // properties available to the custom element for data binding\n    static get properties() {\n    return {\n  \n  ...super.properties,\n  \n  /**\n   * display link as a button\n   */\n  \"buttonStyle\": {\n    \"type\": Boolean,\n    \"reflect\": true,\n    \"attribute\": \"button-style\"\n  },\n  /**\n   * optional image to attach to the share\n   * (Pinterest only)\n   */\n  \"image\": {\n    \"type\": String\n  },\n  /**\n   * the message to attach to the social share\n   * (not used in Facebook)\n   */\n  \"message\": {\n    \"type\": String\n  },\n  /**\n   * optional display mode for the link,\"text-only\" or \"icon-only\";\n   * default is to dislay both an icon and text\n   */\n  \"mode\": {\n    \"type\": String\n  },\n  /**\n   * the link text; if null, the text will be \"Share on (type of social)\"\n   */\n  \"text\": {\n    \"type\": String\n  },\n  /**\n   * the type of social; currently supports\n   * Facebook, LinkedIn, Pinterest, and Twitter (default)\n   */\n  \"type\": {\n    \"type\": String\n  },\n  /**\n   * the url to share\n   */\n  \"url\": {\n    \"type\": String\n  },\n  /**\n   * the href for the link\n   */\n  \"__href\": {\n    \"type\": String\n  },\n  /**\n   * the icon name for the link\n   */\n  \"__icon\": {\n    \"type\": String\n  },\n  /**\n   * the link text specified, or the default link text\n   */\n  \"__linkText\": {\n    \"type\": String\n  },\n  \"__showIcon\": {\n    \"type\": Boolean\n  }\n}\n;\n  }\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"social-share-link\";\n  }\n  constructor() {\n    super();\n    this.buttonStyle = false;\n    this.image = \"\";\n    this.message = \"\";\n    this.mode = null;\n    this.text = null;\n    this.type = \"Twitter\";\n    this.url = null;\n  }\n\n  updated(changedProperties) {\n    changedProperties.forEach((oldValue, propName) => {\n      if (propName == \"type\") {\n        this.__icon = this._getIcon(this.type);\n      }\n      if ([\"text\", \"type\"].includes(propName)) {\n        this.__linkText = this._getLinkText(this.text, this.type);\n      }\n      if ([\"image\", \"message\", \"type\", \"url\"].includes(propName)) {\n        this.__href = this._getHref(\n          this.image,\n          this.message,\n          this.type,\n          this.url\n        );\n      }\n      if (propName == \"mode\") {\n        this.__showIcon = this.mode == \"icon-only\" ? true : false;\n      }\n    });\n  }\n  /**\n   * returns the href\n   *\n   * @param {string} optional image url (Pinterest only)\n   * @param {string} the message (not for Facebook)\n   * @param {string} the type of link (Twitter by default)\n   * @param {string} the url\n   * @returns {string} the link\n   */\n  _getHref(image, message, type, url) {\n    let link;\n    switch (type) {\n      case \"Facebook\":\n        link =\n          url !== null\n            ? \"https://www.facebook.com/sharer/sharer.php?u=\" + url\n            : false;\n        break;\n      case \"LinkedIn\":\n        link = url !== null ? \"&url=\" + url : \"\";\n        link =\n          link !== null\n            ? \"https://www.linkedin.com/shareArticle?mini=true\" + link\n            : false;\n        break;\n      case \"Pinterest\":\n        link =\n          (url !== null ? \"&url=\" + url : \"\") +\n          (message !== null ? \"&description=\" + message : \"\") +\n          (image !== null ? \"&media=\" + image : \"\");\n        link =\n          link !== null\n            ? \"http://pinterest.com/pin/create/button/?\" + link.substring(1)\n            : false;\n        break;\n      case \"Twitter\":\n        link = message !== null ? \"text=\" + message + \" \" + url : url;\n        link =\n          link !== null ? \"http://twitter.com/intent/tweet?\" + link : false;\n        break;\n    }\n    return encodeURI(link);\n  }\n  /**\n   * gets the link text or a default\n   *\n   * @param {string} the link text\n   * @param {string} the link type\n   * @returns {string} the link text or a default \"Share via (type)\"\n   */\n  _getLinkText(text, type) {\n    return text !== null ? text : \"Share via \" + type;\n  }\n  /**\n   * returns the icon name\n   *\n   * @param {string} the link type\n   * @returns {string} the icon name\n   */\n  _getIcon(type) {\n    return \"social-media:\" + type.toLowerCase();\n  }\n}\nwindow.customElements.define(SocialShareLink.tag, SocialShareLink);\nexport { SocialShareLink };\n"],"names":["SocialShareLink","buttonStyle","image","message","mode","text","type","url","LitElement","html","this","__href","__icon","__showIcon","__linkText","css","Boolean","String","changedProperties","forEach","oldValue","propName","_this2","_getIcon","includes","_getLinkText","_getHref","link","substring","encodeURI","toLowerCase","window","customElements","define","tag"],"mappings":"ihIAcMA,yKA6LGC,aAAc,IACdC,MAAQ,KACRC,QAAU,KACVC,KAAO,OACPC,KAAO,OACPC,KAAO,YACPC,IAAM,mPAnMeC,yDA6FnBC,WAEAC,KAAKC,QAAuBD,KAAKC,OAAkBD,KAAKN,KAC3BM,KAAKE,QAAqBF,KAAKG,WAC5CH,KAAKI,mDA7FpB,CAENC,4bAwGW,MACLC,iBACG,YACE,sBAMN,MACCC,gBAMC,MACDA,aAMF,MACEA,aAKF,MACEA,aAMF,MACEA,YAKH,MACGA,eAKA,MACAA,eAKA,MACAA,mBAKI,MACJA,mBAEI,MACJD,6CAWD,2DAaDE,cACNA,EAAkBC,QAAQ,SAACC,EAAUC,GACnB,QAAZA,IACFC,EAAKV,OAASU,EAAKC,SAASD,EAAKhB,OAE/B,CAAC,OAAQ,QAAQkB,SAASH,KAC5BC,EAAKR,WAAaQ,EAAKG,aAAaH,EAAKjB,KAAMiB,EAAKhB,OAElD,CAAC,QAAS,UAAW,OAAQ,OAAOkB,SAASH,KAC/CC,EAAKX,OAASW,EAAKI,SACjBJ,EAAKpB,MACLoB,EAAKnB,QACLmB,EAAKhB,KACLgB,EAAKf,MAGO,QAAZc,IACFC,EAAKT,WAA0B,aAAbS,EAAKlB,yCAapBF,EAAOC,EAASG,EAAMC,OACzBoB,SACIrB,OACD,WACHqB,EACU,OAARpB,GACI,gDAAkDA,YAGrD,WAEHoB,EACW,QAFXA,EAAe,OAARpB,EAAe,QAAUA,EAAM,KAGhC,kDAAoDoB,YAGvD,YAKHA,EACW,QALXA,GACW,OAARpB,EAAe,QAAUA,EAAM,KACnB,OAAZJ,EAAmB,gBAAkBA,EAAU,KACrC,OAAVD,EAAiB,UAAYA,EAAQ,MAGlC,2CAA6CyB,EAAKC,UAAU,aAG/D,UAEHD,EACW,QAFXA,EAAmB,OAAZxB,EAAmB,QAAUA,EAAU,IAAMI,EAAMA,IAExC,mCAAqCoB,SAGpDE,UAAUF,wCASNtB,EAAMC,UACD,OAATD,EAAgBA,EAAO,aAAeC,mCAQtCA,SACA,gBAAkBA,EAAKwB,uBAGlCC,OAAOC,eAAeC,OAAOjC,EAAgBkC,IAAKlC"}